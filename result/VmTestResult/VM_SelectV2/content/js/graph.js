/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 202571.0, "series": [{"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 14.0], [0.5, 15.0], [0.6, 15.0], [0.7, 15.0], [0.8, 15.0], [0.9, 16.0], [1.0, 16.0], [1.1, 16.0], [1.2, 16.0], [1.3, 16.0], [1.4, 16.0], [1.5, 16.0], [1.6, 16.0], [1.7, 17.0], [1.8, 17.0], [1.9, 17.0], [2.0, 17.0], [2.1, 20.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 20.0], [2.6, 20.0], [2.7, 20.0], [2.8, 20.0], [2.9, 23.0], [3.0, 23.0], [3.1, 23.0], [3.2, 23.0], [3.3, 23.0], [3.4, 23.0], [3.5, 23.0], [3.6, 23.0], [3.7, 24.0], [3.8, 24.0], [3.9, 24.0], [4.0, 24.0], [4.1, 25.0], [4.2, 25.0], [4.3, 25.0], [4.4, 25.0], [4.5, 25.0], [4.6, 25.0], [4.7, 25.0], [4.8, 25.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 56.0], [5.4, 56.0], [5.5, 56.0], [5.6, 56.0], [5.7, 58.0], [5.8, 58.0], [5.9, 58.0], [6.0, 58.0], [6.1, 80.0], [6.2, 80.0], [6.3, 80.0], [6.4, 80.0], [6.5, 83.0], [6.6, 83.0], [6.7, 83.0], [6.8, 83.0], [6.9, 98.0], [7.0, 98.0], [7.1, 98.0], [7.2, 98.0], [7.3, 120.0], [7.4, 120.0], [7.5, 120.0], [7.6, 120.0], [7.7, 120.0], [7.8, 120.0], [7.9, 120.0], [8.0, 120.0], [8.1, 125.0], [8.2, 125.0], [8.3, 125.0], [8.4, 125.0], [8.5, 133.0], [8.6, 133.0], [8.7, 133.0], [8.8, 133.0], [8.9, 148.0], [9.0, 148.0], [9.1, 148.0], [9.2, 148.0], [9.3, 152.0], [9.4, 152.0], [9.5, 152.0], [9.6, 152.0], [9.7, 160.0], [9.8, 160.0], [9.9, 160.0], [10.0, 160.0], [10.1, 165.0], [10.2, 165.0], [10.3, 165.0], [10.4, 165.0], [10.5, 173.0], [10.6, 173.0], [10.7, 173.0], [10.8, 173.0], [10.9, 182.0], [11.0, 182.0], [11.1, 182.0], [11.2, 182.0], [11.3, 186.0], [11.4, 186.0], [11.5, 186.0], [11.6, 186.0], [11.7, 207.0], [11.8, 207.0], [11.9, 207.0], [12.0, 207.0], [12.1, 233.0], [12.2, 233.0], [12.3, 233.0], [12.4, 233.0], [12.5, 233.0], [12.6, 233.0], [12.7, 233.0], [12.8, 233.0], [12.9, 240.0], [13.0, 240.0], [13.1, 240.0], [13.2, 240.0], [13.3, 243.0], [13.4, 243.0], [13.5, 243.0], [13.6, 243.0], [13.7, 249.0], [13.8, 249.0], [13.9, 249.0], [14.0, 249.0], [14.1, 264.0], [14.2, 264.0], [14.3, 264.0], [14.4, 264.0], [14.5, 268.0], [14.6, 268.0], [14.7, 268.0], [14.8, 268.0], [14.9, 277.0], [15.0, 277.0], [15.1, 277.0], [15.2, 277.0], [15.3, 294.0], [15.4, 294.0], [15.5, 294.0], [15.6, 294.0], [15.7, 313.0], [15.8, 313.0], [15.9, 313.0], [16.0, 313.0], [16.1, 324.0], [16.2, 324.0], [16.3, 324.0], [16.4, 324.0], [16.5, 344.0], [16.6, 344.0], [16.7, 344.0], [16.8, 344.0], [16.9, 351.0], [17.0, 351.0], [17.1, 351.0], [17.2, 351.0], [17.3, 359.0], [17.4, 359.0], [17.5, 359.0], [17.6, 359.0], [17.7, 396.0], [17.8, 396.0], [17.9, 396.0], [18.0, 396.0], [18.1, 402.0], [18.2, 402.0], [18.3, 402.0], [18.4, 402.0], [18.5, 413.0], [18.6, 413.0], [18.7, 413.0], [18.8, 413.0], [18.9, 434.0], [19.0, 434.0], [19.1, 434.0], [19.2, 434.0], [19.3, 449.0], [19.4, 449.0], [19.5, 449.0], [19.6, 449.0], [19.7, 477.0], [19.8, 477.0], [19.9, 477.0], [20.0, 477.0], [20.1, 486.0], [20.2, 486.0], [20.3, 486.0], [20.4, 486.0], [20.5, 493.0], [20.6, 493.0], [20.7, 493.0], [20.8, 493.0], [20.9, 510.0], [21.0, 510.0], [21.1, 510.0], [21.2, 510.0], [21.3, 534.0], [21.4, 534.0], [21.5, 534.0], [21.6, 534.0], [21.7, 542.0], [21.8, 542.0], [21.9, 542.0], [22.0, 542.0], [22.1, 559.0], [22.2, 559.0], [22.3, 559.0], [22.4, 559.0], [22.5, 584.0], [22.6, 584.0], [22.7, 584.0], [22.8, 584.0], [22.9, 584.0], [23.0, 584.0], [23.1, 584.0], [23.2, 584.0], [23.3, 592.0], [23.4, 592.0], [23.5, 592.0], [23.6, 592.0], [23.7, 594.0], [23.8, 594.0], [23.9, 594.0], [24.0, 594.0], [24.1, 626.0], [24.2, 626.0], [24.3, 626.0], [24.4, 626.0], [24.5, 627.0], [24.6, 627.0], [24.7, 627.0], [24.8, 627.0], [24.9, 627.0], [25.0, 627.0], [25.1, 627.0], [25.2, 627.0], [25.3, 627.0], [25.4, 630.0], [25.5, 630.0], [25.6, 630.0], [25.7, 630.0], [25.8, 638.0], [25.9, 638.0], [26.0, 638.0], [26.1, 638.0], [26.2, 640.0], [26.3, 640.0], [26.4, 640.0], [26.5, 640.0], [26.6, 647.0], [26.7, 647.0], [26.8, 647.0], [26.9, 647.0], [27.0, 657.0], [27.1, 657.0], [27.2, 657.0], [27.3, 657.0], [27.4, 669.0], [27.5, 669.0], [27.6, 669.0], [27.7, 669.0], [27.8, 690.0], [27.9, 690.0], [28.0, 690.0], [28.1, 690.0], [28.2, 727.0], [28.3, 727.0], [28.4, 727.0], [28.5, 727.0], [28.6, 728.0], [28.7, 728.0], [28.8, 728.0], [28.9, 728.0], [29.0, 757.0], [29.1, 757.0], [29.2, 757.0], [29.3, 757.0], [29.4, 758.0], [29.5, 758.0], [29.6, 758.0], [29.7, 758.0], [29.8, 762.0], [29.9, 762.0], [30.0, 762.0], [30.1, 762.0], [30.2, 797.0], [30.3, 797.0], [30.4, 797.0], [30.5, 797.0], [30.6, 810.0], [30.7, 810.0], [30.8, 810.0], [30.9, 810.0], [31.0, 814.0], [31.1, 814.0], [31.2, 814.0], [31.3, 814.0], [31.4, 830.0], [31.5, 830.0], [31.6, 830.0], [31.7, 830.0], [31.8, 874.0], [31.9, 874.0], [32.0, 874.0], [32.1, 874.0], [32.2, 911.0], [32.3, 911.0], [32.4, 911.0], [32.5, 911.0], [32.6, 967.0], [32.7, 967.0], [32.8, 967.0], [32.9, 967.0], [33.0, 1068.0], [33.1, 1068.0], [33.2, 1068.0], [33.3, 1068.0], [33.4, 1088.0], [33.5, 1088.0], [33.6, 1088.0], [33.7, 1088.0], [33.8, 1187.0], [33.9, 1187.0], [34.0, 1187.0], [34.1, 1187.0], [34.2, 1246.0], [34.3, 1246.0], [34.4, 1246.0], [34.5, 1246.0], [34.6, 19388.0], [34.7, 19388.0], [34.8, 19388.0], [34.9, 19388.0], [35.0, 28947.0], [35.1, 28947.0], [35.2, 28947.0], [35.3, 28947.0], [35.4, 31810.0], [35.5, 31810.0], [35.6, 31810.0], [35.7, 31810.0], [35.8, 32429.0], [35.9, 32429.0], [36.0, 32429.0], [36.1, 32429.0], [36.2, 32853.0], [36.3, 32853.0], [36.4, 32853.0], [36.5, 32853.0], [36.6, 33844.0], [36.7, 33844.0], [36.8, 33844.0], [36.9, 33844.0], [37.0, 35012.0], [37.1, 35012.0], [37.2, 35012.0], [37.3, 35012.0], [37.4, 36936.0], [37.5, 36936.0], [37.6, 36936.0], [37.7, 36936.0], [37.8, 39113.0], [37.9, 39113.0], [38.0, 39113.0], [38.1, 39113.0], [38.2, 39354.0], [38.3, 39354.0], [38.4, 39354.0], [38.5, 39354.0], [38.6, 39557.0], [38.7, 39557.0], [38.8, 39557.0], [38.9, 39557.0], [39.0, 39747.0], [39.1, 39747.0], [39.2, 39747.0], [39.3, 39747.0], [39.4, 40079.0], [39.5, 40079.0], [39.6, 40079.0], [39.7, 40079.0], [39.8, 41623.0], [39.9, 41623.0], [40.0, 41623.0], [40.1, 41623.0], [40.2, 42841.0], [40.3, 42841.0], [40.4, 42841.0], [40.5, 42841.0], [40.6, 42894.0], [40.7, 42894.0], [40.8, 42894.0], [40.9, 42894.0], [41.0, 43053.0], [41.1, 43053.0], [41.2, 43053.0], [41.3, 43053.0], [41.4, 43713.0], [41.5, 43713.0], [41.6, 43713.0], [41.7, 43713.0], [41.8, 44267.0], [41.9, 44267.0], [42.0, 44267.0], [42.1, 44267.0], [42.2, 44483.0], [42.3, 44483.0], [42.4, 44483.0], [42.5, 44483.0], [42.6, 44790.0], [42.7, 44790.0], [42.8, 44790.0], [42.9, 44790.0], [43.0, 44981.0], [43.1, 44981.0], [43.2, 44981.0], [43.3, 44981.0], [43.4, 45185.0], [43.5, 45185.0], [43.6, 45185.0], [43.7, 45185.0], [43.8, 45331.0], [43.9, 45331.0], [44.0, 45331.0], [44.1, 45331.0], [44.2, 45479.0], [44.3, 45479.0], [44.4, 45479.0], [44.5, 45479.0], [44.6, 45621.0], [44.7, 45621.0], [44.8, 45621.0], [44.9, 45621.0], [45.0, 46246.0], [45.1, 46246.0], [45.2, 46246.0], [45.3, 46246.0], [45.4, 46334.0], [45.5, 46334.0], [45.6, 46334.0], [45.7, 46334.0], [45.8, 46561.0], [45.9, 46561.0], [46.0, 46561.0], [46.1, 46561.0], [46.2, 46626.0], [46.3, 46626.0], [46.4, 46626.0], [46.5, 46626.0], [46.6, 47250.0], [46.7, 47250.0], [46.8, 47250.0], [46.9, 47250.0], [47.0, 47391.0], [47.1, 47391.0], [47.2, 47391.0], [47.3, 47391.0], [47.4, 47512.0], [47.5, 47512.0], [47.6, 47512.0], [47.7, 47512.0], [47.8, 47668.0], [47.9, 47668.0], [48.0, 47668.0], [48.1, 47668.0], [48.2, 47763.0], [48.3, 47763.0], [48.4, 47763.0], [48.5, 47763.0], [48.6, 47845.0], [48.7, 47845.0], [48.8, 47845.0], [48.9, 47845.0], [49.0, 47946.0], [49.1, 47946.0], [49.2, 47946.0], [49.3, 47946.0], [49.4, 48679.0], [49.5, 48679.0], [49.6, 48679.0], [49.7, 48679.0], [49.8, 48864.0], [49.9, 48864.0], [50.0, 48864.0], [50.1, 48864.0], [50.2, 48864.0], [50.3, 49086.0], [50.4, 49086.0], [50.5, 49086.0], [50.6, 49086.0], [50.7, 49557.0], [50.8, 49557.0], [50.9, 49557.0], [51.0, 49557.0], [51.1, 50668.0], [51.2, 50668.0], [51.3, 50668.0], [51.4, 50668.0], [51.5, 50762.0], [51.6, 50762.0], [51.7, 50762.0], [51.8, 50762.0], [51.9, 51017.0], [52.0, 51017.0], [52.1, 51017.0], [52.2, 51017.0], [52.3, 51137.0], [52.4, 51137.0], [52.5, 51137.0], [52.6, 51137.0], [52.7, 52364.0], [52.8, 52364.0], [52.9, 52364.0], [53.0, 52364.0], [53.1, 52567.0], [53.2, 52567.0], [53.3, 52567.0], [53.4, 52567.0], [53.5, 52659.0], [53.6, 52659.0], [53.7, 52659.0], [53.8, 52659.0], [53.9, 52947.0], [54.0, 52947.0], [54.1, 52947.0], [54.2, 52947.0], [54.3, 52958.0], [54.4, 52958.0], [54.5, 52958.0], [54.6, 52958.0], [54.7, 53044.0], [54.8, 53044.0], [54.9, 53044.0], [55.0, 53044.0], [55.1, 53064.0], [55.2, 53064.0], [55.3, 53064.0], [55.4, 53064.0], [55.5, 53076.0], [55.6, 53076.0], [55.7, 53076.0], [55.8, 53076.0], [55.9, 53190.0], [56.0, 53190.0], [56.1, 53190.0], [56.2, 53190.0], [56.3, 53276.0], [56.4, 53276.0], [56.5, 53276.0], [56.6, 53276.0], [56.7, 53284.0], [56.8, 53284.0], [56.9, 53284.0], [57.0, 53284.0], [57.1, 53330.0], [57.2, 53330.0], [57.3, 53330.0], [57.4, 53330.0], [57.5, 53382.0], [57.6, 53382.0], [57.7, 53382.0], [57.8, 53382.0], [57.9, 53456.0], [58.0, 53456.0], [58.1, 53456.0], [58.2, 53456.0], [58.3, 53515.0], [58.4, 53515.0], [58.5, 53515.0], [58.6, 53515.0], [58.7, 53628.0], [58.8, 53628.0], [58.9, 53628.0], [59.0, 53628.0], [59.1, 53706.0], [59.2, 53706.0], [59.3, 53706.0], [59.4, 53706.0], [59.5, 53726.0], [59.6, 53726.0], [59.7, 53726.0], [59.8, 53726.0], [59.9, 53742.0], [60.0, 53742.0], [60.1, 53742.0], [60.2, 53742.0], [60.3, 53770.0], [60.4, 53770.0], [60.5, 53770.0], [60.6, 53770.0], [60.7, 53926.0], [60.8, 53926.0], [60.9, 53926.0], [61.0, 53926.0], [61.1, 53930.0], [61.2, 53930.0], [61.3, 53930.0], [61.4, 53930.0], [61.5, 53930.0], [61.6, 53930.0], [61.7, 53930.0], [61.8, 53930.0], [61.9, 54207.0], [62.0, 54207.0], [62.1, 54207.0], [62.2, 54207.0], [62.3, 54567.0], [62.4, 54567.0], [62.5, 54567.0], [62.6, 54567.0], [62.7, 55188.0], [62.8, 55188.0], [62.9, 55188.0], [63.0, 55188.0], [63.1, 56062.0], [63.2, 56062.0], [63.3, 56062.0], [63.4, 56062.0], [63.5, 59449.0], [63.6, 59449.0], [63.7, 59449.0], [63.8, 59449.0], [63.9, 65159.0], [64.0, 65159.0], [64.1, 65159.0], [64.2, 65159.0], [64.3, 65269.0], [64.4, 65269.0], [64.5, 65269.0], [64.6, 65269.0], [64.7, 73500.0], [64.8, 73500.0], [64.9, 73500.0], [65.0, 73500.0], [65.1, 73744.0], [65.2, 73744.0], [65.3, 73744.0], [65.4, 73744.0], [65.5, 74100.0], [65.6, 74100.0], [65.7, 74100.0], [65.8, 74100.0], [65.9, 74324.0], [66.0, 74324.0], [66.1, 74324.0], [66.2, 74324.0], [66.3, 76816.0], [66.4, 76816.0], [66.5, 76816.0], [66.6, 76816.0], [66.7, 79176.0], [66.8, 79176.0], [66.9, 79176.0], [67.0, 79176.0], [67.1, 79731.0], [67.2, 79731.0], [67.3, 79731.0], [67.4, 79731.0], [67.5, 81991.0], [67.6, 81991.0], [67.7, 81991.0], [67.8, 81991.0], [67.9, 83853.0], [68.0, 83853.0], [68.1, 83853.0], [68.2, 83853.0], [68.3, 84233.0], [68.4, 84233.0], [68.5, 84233.0], [68.6, 84233.0], [68.7, 84742.0], [68.8, 84742.0], [68.9, 84742.0], [69.0, 84742.0], [69.1, 84899.0], [69.2, 84899.0], [69.3, 84899.0], [69.4, 84899.0], [69.5, 85981.0], [69.6, 85981.0], [69.7, 85981.0], [69.8, 85981.0], [69.9, 86541.0], [70.0, 86541.0], [70.1, 86541.0], [70.2, 86541.0], [70.3, 86597.0], [70.4, 86597.0], [70.5, 86597.0], [70.6, 86597.0], [70.7, 86973.0], [70.8, 86973.0], [70.9, 86973.0], [71.0, 86973.0], [71.1, 90423.0], [71.2, 90423.0], [71.3, 90423.0], [71.4, 90423.0], [71.5, 94039.0], [71.6, 94039.0], [71.7, 94039.0], [71.8, 94039.0], [71.9, 96878.0], [72.0, 96878.0], [72.1, 96878.0], [72.2, 96878.0], [72.3, 97121.0], [72.4, 97121.0], [72.5, 97121.0], [72.6, 97121.0], [72.7, 98820.0], [72.8, 98820.0], [72.9, 98820.0], [73.0, 98820.0], [73.1, 99186.0], [73.2, 99186.0], [73.3, 99186.0], [73.4, 99186.0], [73.5, 100518.0], [73.6, 100518.0], [73.7, 100518.0], [73.8, 100518.0], [73.9, 101160.0], [74.0, 101160.0], [74.1, 101160.0], [74.2, 101160.0], [74.3, 101510.0], [74.4, 101510.0], [74.5, 101510.0], [74.6, 101510.0], [74.7, 101587.0], [74.8, 101587.0], [74.9, 101587.0], [75.0, 101587.0], [75.1, 101587.0], [75.2, 102122.0], [75.3, 102122.0], [75.4, 102122.0], [75.5, 102122.0], [75.6, 102661.0], [75.7, 102661.0], [75.8, 102661.0], [75.9, 102661.0], [76.0, 102760.0], [76.1, 102760.0], [76.2, 102760.0], [76.3, 102760.0], [76.4, 103063.0], [76.5, 103063.0], [76.6, 103063.0], [76.7, 103063.0], [76.8, 103501.0], [76.9, 103501.0], [77.0, 103501.0], [77.1, 103501.0], [77.2, 103608.0], [77.3, 103608.0], [77.4, 103608.0], [77.5, 103608.0], [77.6, 103800.0], [77.7, 103800.0], [77.8, 103800.0], [77.9, 103800.0], [78.0, 104937.0], [78.1, 104937.0], [78.2, 104937.0], [78.3, 104937.0], [78.4, 105089.0], [78.5, 105089.0], [78.6, 105089.0], [78.7, 105089.0], [78.8, 106672.0], [78.9, 106672.0], [79.0, 106672.0], [79.1, 106672.0], [79.2, 107543.0], [79.3, 107543.0], [79.4, 107543.0], [79.5, 107543.0], [79.6, 114959.0], [79.7, 114959.0], [79.8, 114959.0], [79.9, 114959.0], [80.0, 145236.0], [80.1, 145236.0], [80.2, 145236.0], [80.3, 145236.0], [80.4, 149178.0], [80.5, 149178.0], [80.6, 149178.0], [80.7, 149178.0], [80.8, 152201.0], [80.9, 152201.0], [81.0, 152201.0], [81.1, 152201.0], [81.2, 159680.0], [81.3, 159680.0], [81.4, 159680.0], [81.5, 159680.0], [81.6, 160409.0], [81.7, 160409.0], [81.8, 160409.0], [81.9, 160409.0], [82.0, 162000.0], [82.1, 162000.0], [82.2, 162000.0], [82.3, 162000.0], [82.4, 164933.0], [82.5, 164933.0], [82.6, 164933.0], [82.7, 164933.0], [82.8, 164990.0], [82.9, 164990.0], [83.0, 164990.0], [83.1, 164990.0], [83.2, 165932.0], [83.3, 165932.0], [83.4, 165932.0], [83.5, 165932.0], [83.6, 166205.0], [83.7, 166205.0], [83.8, 166205.0], [83.9, 166205.0], [84.0, 166511.0], [84.1, 166511.0], [84.2, 166511.0], [84.3, 166511.0], [84.4, 166555.0], [84.5, 166555.0], [84.6, 166555.0], [84.7, 166555.0], [84.8, 167688.0], [84.9, 167688.0], [85.0, 167688.0], [85.1, 167688.0], [85.2, 168316.0], [85.3, 168316.0], [85.4, 168316.0], [85.5, 168316.0], [85.6, 168869.0], [85.7, 168869.0], [85.8, 168869.0], [85.9, 168869.0], [86.0, 169128.0], [86.1, 169128.0], [86.2, 169128.0], [86.3, 169128.0], [86.4, 169320.0], [86.5, 169320.0], [86.6, 169320.0], [86.7, 169320.0], [86.8, 170230.0], [86.9, 170230.0], [87.0, 170230.0], [87.1, 170230.0], [87.2, 170275.0], [87.3, 170275.0], [87.4, 170275.0], [87.5, 170275.0], [87.6, 170362.0], [87.7, 170362.0], [87.8, 170362.0], [87.9, 170362.0], [88.0, 172382.0], [88.1, 172382.0], [88.2, 172382.0], [88.3, 172382.0], [88.4, 173178.0], [88.5, 173178.0], [88.6, 173178.0], [88.7, 173178.0], [88.8, 174045.0], [88.9, 174045.0], [89.0, 174045.0], [89.1, 174045.0], [89.2, 174456.0], [89.3, 174456.0], [89.4, 174456.0], [89.5, 174456.0], [89.6, 176211.0], [89.7, 176211.0], [89.8, 176211.0], [89.9, 176211.0], [90.0, 176214.0], [90.1, 176214.0], [90.2, 176214.0], [90.3, 176214.0], [90.4, 176342.0], [90.5, 176342.0], [90.6, 176342.0], [90.7, 176342.0], [90.8, 178168.0], [90.9, 178168.0], [91.0, 178168.0], [91.1, 178168.0], [91.2, 178638.0], [91.3, 178638.0], [91.4, 178638.0], [91.5, 178638.0], [91.6, 181211.0], [91.7, 181211.0], [91.8, 181211.0], [91.9, 181211.0], [92.0, 182418.0], [92.1, 182418.0], [92.2, 182418.0], [92.3, 182418.0], [92.4, 185043.0], [92.5, 185043.0], [92.6, 185043.0], [92.7, 185043.0], [92.8, 185659.0], [92.9, 185659.0], [93.0, 185659.0], [93.1, 185659.0], [93.2, 185773.0], [93.3, 185773.0], [93.4, 185773.0], [93.5, 185773.0], [93.6, 186416.0], [93.7, 186416.0], [93.8, 186416.0], [93.9, 186416.0], [94.0, 187032.0], [94.1, 187032.0], [94.2, 187032.0], [94.3, 187032.0], [94.4, 188554.0], [94.5, 188554.0], [94.6, 188554.0], [94.7, 188554.0], [94.8, 188555.0], [94.9, 188555.0], [95.0, 188555.0], [95.1, 188555.0], [95.2, 190331.0], [95.3, 190331.0], [95.4, 190331.0], [95.5, 190331.0], [95.6, 191219.0], [95.7, 191219.0], [95.8, 191219.0], [95.9, 191219.0], [96.0, 191949.0], [96.1, 191949.0], [96.2, 191949.0], [96.3, 191949.0], [96.4, 192079.0], [96.5, 192079.0], [96.6, 192079.0], [96.7, 192079.0], [96.8, 193198.0], [96.9, 193198.0], [97.0, 193198.0], [97.1, 193198.0], [97.2, 194288.0], [97.3, 194288.0], [97.4, 194288.0], [97.5, 194288.0], [97.6, 194556.0], [97.7, 194556.0], [97.8, 194556.0], [97.9, 194556.0], [98.0, 194741.0], [98.1, 194741.0], [98.2, 194741.0], [98.3, 194741.0], [98.4, 196127.0], [98.5, 196127.0], [98.6, 196127.0], [98.7, 196127.0], [98.8, 196435.0], [98.9, 196435.0], [99.0, 196435.0], [99.1, 196435.0], [99.2, 199583.0], [99.3, 199583.0], [99.4, 199583.0], [99.5, 199583.0], [99.6, 202571.0], [99.7, 202571.0], [99.8, 202571.0], [99.9, 202571.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 9.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 9.0], [4.9, 9.0], [5.0, 9.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 16.0], [11.8, 16.0], [11.9, 16.0], [12.0, 16.0], [12.1, 17.0], [12.2, 17.0], [12.3, 17.0], [12.4, 17.0], [12.5, 18.0], [12.6, 18.0], [12.7, 18.0], [12.8, 18.0], [12.9, 20.0], [13.0, 20.0], [13.1, 20.0], [13.2, 20.0], [13.3, 24.0], [13.4, 24.0], [13.5, 24.0], [13.6, 24.0], [13.7, 25.0], [13.8, 25.0], [13.9, 25.0], [14.0, 25.0], [14.1, 25.0], [14.2, 25.0], [14.3, 25.0], [14.4, 25.0], [14.5, 30.0], [14.6, 30.0], [14.7, 30.0], [14.8, 30.0], [14.9, 31.0], [15.0, 31.0], [15.1, 31.0], [15.2, 31.0], [15.3, 31.0], [15.4, 31.0], [15.5, 31.0], [15.6, 31.0], [15.7, 37.0], [15.8, 37.0], [15.9, 37.0], [16.0, 37.0], [16.1, 44.0], [16.2, 44.0], [16.3, 44.0], [16.4, 44.0], [16.5, 50.0], [16.6, 50.0], [16.7, 50.0], [16.8, 50.0], [16.9, 54.0], [17.0, 54.0], [17.1, 54.0], [17.2, 54.0], [17.3, 66.0], [17.4, 66.0], [17.5, 66.0], [17.6, 66.0], [17.7, 66.0], [17.8, 66.0], [17.9, 66.0], [18.0, 66.0], [18.1, 67.0], [18.2, 67.0], [18.3, 67.0], [18.4, 67.0], [18.5, 78.0], [18.6, 78.0], [18.7, 78.0], [18.8, 78.0], [18.9, 82.0], [19.0, 82.0], [19.1, 82.0], [19.2, 82.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 85.0], [19.8, 85.0], [19.9, 85.0], [20.0, 85.0], [20.1, 94.0], [20.2, 94.0], [20.3, 94.0], [20.4, 94.0], [20.5, 96.0], [20.6, 96.0], [20.7, 96.0], [20.8, 96.0], [20.9, 98.0], [21.0, 98.0], [21.1, 98.0], [21.2, 98.0], [21.3, 99.0], [21.4, 99.0], [21.5, 99.0], [21.6, 99.0], [21.7, 106.0], [21.8, 106.0], [21.9, 106.0], [22.0, 106.0], [22.1, 108.0], [22.2, 108.0], [22.3, 108.0], [22.4, 108.0], [22.5, 111.0], [22.6, 111.0], [22.7, 111.0], [22.8, 111.0], [22.9, 118.0], [23.0, 118.0], [23.1, 118.0], [23.2, 118.0], [23.3, 119.0], [23.4, 119.0], [23.5, 119.0], [23.6, 119.0], [23.7, 126.0], [23.8, 126.0], [23.9, 126.0], [24.0, 126.0], [24.1, 154.0], [24.2, 154.0], [24.3, 154.0], [24.4, 154.0], [24.5, 163.0], [24.6, 163.0], [24.7, 163.0], [24.8, 163.0], [24.9, 166.0], [25.0, 166.0], [25.1, 166.0], [25.2, 166.0], [25.3, 166.0], [25.4, 183.0], [25.5, 183.0], [25.6, 183.0], [25.7, 183.0], [25.8, 184.0], [25.9, 184.0], [26.0, 184.0], [26.1, 184.0], [26.2, 194.0], [26.3, 194.0], [26.4, 194.0], [26.5, 194.0], [26.6, 199.0], [26.7, 199.0], [26.8, 199.0], [26.9, 199.0], [27.0, 200.0], [27.1, 200.0], [27.2, 200.0], [27.3, 200.0], [27.4, 205.0], [27.5, 205.0], [27.6, 205.0], [27.7, 205.0], [27.8, 212.0], [27.9, 212.0], [28.0, 212.0], [28.1, 212.0], [28.2, 214.0], [28.3, 214.0], [28.4, 214.0], [28.5, 214.0], [28.6, 218.0], [28.7, 218.0], [28.8, 218.0], [28.9, 218.0], [29.0, 226.0], [29.1, 226.0], [29.2, 226.0], [29.3, 226.0], [29.4, 278.0], [29.5, 278.0], [29.6, 278.0], [29.7, 278.0], [29.8, 283.0], [29.9, 283.0], [30.0, 283.0], [30.1, 283.0], [30.2, 297.0], [30.3, 297.0], [30.4, 297.0], [30.5, 297.0], [30.6, 305.0], [30.7, 305.0], [30.8, 305.0], [30.9, 305.0], [31.0, 313.0], [31.1, 313.0], [31.2, 313.0], [31.3, 313.0], [31.4, 318.0], [31.5, 318.0], [31.6, 318.0], [31.7, 318.0], [31.8, 320.0], [31.9, 320.0], [32.0, 320.0], [32.1, 320.0], [32.2, 333.0], [32.3, 333.0], [32.4, 333.0], [32.5, 333.0], [32.6, 335.0], [32.7, 335.0], [32.8, 335.0], [32.9, 335.0], [33.0, 342.0], [33.1, 342.0], [33.2, 342.0], [33.3, 342.0], [33.4, 343.0], [33.5, 343.0], [33.6, 343.0], [33.7, 343.0], [33.8, 356.0], [33.9, 356.0], [34.0, 356.0], [34.1, 356.0], [34.2, 357.0], [34.3, 357.0], [34.4, 357.0], [34.5, 357.0], [34.6, 390.0], [34.7, 390.0], [34.8, 390.0], [34.9, 390.0], [35.0, 391.0], [35.1, 391.0], [35.2, 391.0], [35.3, 391.0], [35.4, 396.0], [35.5, 396.0], [35.6, 396.0], [35.7, 396.0], [35.8, 407.0], [35.9, 407.0], [36.0, 407.0], [36.1, 407.0], [36.2, 411.0], [36.3, 411.0], [36.4, 411.0], [36.5, 411.0], [36.6, 448.0], [36.7, 448.0], [36.8, 448.0], [36.9, 448.0], [37.0, 456.0], [37.1, 456.0], [37.2, 456.0], [37.3, 456.0], [37.4, 474.0], [37.5, 474.0], [37.6, 474.0], [37.7, 474.0], [37.8, 479.0], [37.9, 479.0], [38.0, 479.0], [38.1, 479.0], [38.2, 486.0], [38.3, 486.0], [38.4, 486.0], [38.5, 486.0], [38.6, 516.0], [38.7, 516.0], [38.8, 516.0], [38.9, 516.0], [39.0, 540.0], [39.1, 540.0], [39.2, 540.0], [39.3, 540.0], [39.4, 555.0], [39.5, 555.0], [39.6, 555.0], [39.7, 555.0], [39.8, 588.0], [39.9, 588.0], [40.0, 588.0], [40.1, 588.0], [40.2, 609.0], [40.3, 609.0], [40.4, 609.0], [40.5, 609.0], [40.6, 622.0], [40.7, 622.0], [40.8, 622.0], [40.9, 622.0], [41.0, 633.0], [41.1, 633.0], [41.2, 633.0], [41.3, 633.0], [41.4, 637.0], [41.5, 637.0], [41.6, 637.0], [41.7, 637.0], [41.8, 642.0], [41.9, 642.0], [42.0, 642.0], [42.1, 642.0], [42.2, 730.0], [42.3, 730.0], [42.4, 730.0], [42.5, 730.0], [42.6, 751.0], [42.7, 751.0], [42.8, 751.0], [42.9, 751.0], [43.0, 767.0], [43.1, 767.0], [43.2, 767.0], [43.3, 767.0], [43.4, 806.0], [43.5, 806.0], [43.6, 806.0], [43.7, 806.0], [43.8, 809.0], [43.9, 809.0], [44.0, 809.0], [44.1, 809.0], [44.2, 6815.0], [44.3, 6815.0], [44.4, 6815.0], [44.5, 6815.0], [44.6, 9335.0], [44.7, 9335.0], [44.8, 9335.0], [44.9, 9335.0], [45.0, 14575.0], [45.1, 14575.0], [45.2, 14575.0], [45.3, 14575.0], [45.4, 19388.0], [45.5, 19388.0], [45.6, 19388.0], [45.7, 19388.0], [45.8, 27954.0], [45.9, 27954.0], [46.0, 27954.0], [46.1, 27954.0], [46.2, 28639.0], [46.3, 28639.0], [46.4, 28639.0], [46.5, 28639.0], [46.6, 32406.0], [46.7, 32406.0], [46.8, 32406.0], [46.9, 32406.0], [47.0, 34896.0], [47.1, 34896.0], [47.2, 34896.0], [47.3, 34896.0], [47.4, 36637.0], [47.5, 36637.0], [47.6, 36637.0], [47.7, 36637.0], [47.8, 36936.0], [47.9, 36936.0], [48.0, 36936.0], [48.1, 36936.0], [48.2, 36985.0], [48.3, 36985.0], [48.4, 36985.0], [48.5, 36985.0], [48.6, 37083.0], [48.7, 37083.0], [48.8, 37083.0], [48.9, 37083.0], [49.0, 37651.0], [49.1, 37651.0], [49.2, 37651.0], [49.3, 37651.0], [49.4, 38914.0], [49.5, 38914.0], [49.6, 38914.0], [49.7, 38914.0], [49.8, 39001.0], [49.9, 39001.0], [50.0, 39001.0], [50.1, 39001.0], [50.2, 39001.0], [50.3, 39281.0], [50.4, 39281.0], [50.5, 39281.0], [50.6, 39281.0], [50.7, 39614.0], [50.8, 39614.0], [50.9, 39614.0], [51.0, 39614.0], [51.1, 39903.0], [51.2, 39903.0], [51.3, 39903.0], [51.4, 39903.0], [51.5, 40844.0], [51.6, 40844.0], [51.7, 40844.0], [51.8, 40844.0], [51.9, 41067.0], [52.0, 41067.0], [52.1, 41067.0], [52.2, 41067.0], [52.3, 42228.0], [52.4, 42228.0], [52.5, 42228.0], [52.6, 42228.0], [52.7, 42803.0], [52.8, 42803.0], [52.9, 42803.0], [53.0, 42803.0], [53.1, 42879.0], [53.2, 42879.0], [53.3, 42879.0], [53.4, 42879.0], [53.5, 42910.0], [53.6, 42910.0], [53.7, 42910.0], [53.8, 42910.0], [53.9, 43225.0], [54.0, 43225.0], [54.1, 43225.0], [54.2, 43225.0], [54.3, 44126.0], [54.4, 44126.0], [54.5, 44126.0], [54.6, 44126.0], [54.7, 44199.0], [54.8, 44199.0], [54.9, 44199.0], [55.0, 44199.0], [55.1, 44311.0], [55.2, 44311.0], [55.3, 44311.0], [55.4, 44311.0], [55.5, 44492.0], [55.6, 44492.0], [55.7, 44492.0], [55.8, 44492.0], [55.9, 44631.0], [56.0, 44631.0], [56.1, 44631.0], [56.2, 44631.0], [56.3, 44752.0], [56.4, 44752.0], [56.5, 44752.0], [56.6, 44752.0], [56.7, 45137.0], [56.8, 45137.0], [56.9, 45137.0], [57.0, 45137.0], [57.1, 45365.0], [57.2, 45365.0], [57.3, 45365.0], [57.4, 45365.0], [57.5, 45551.0], [57.6, 45551.0], [57.7, 45551.0], [57.8, 45551.0], [57.9, 45602.0], [58.0, 45602.0], [58.1, 45602.0], [58.2, 45602.0], [58.3, 45623.0], [58.4, 45623.0], [58.5, 45623.0], [58.6, 45623.0], [58.7, 45796.0], [58.8, 45796.0], [58.9, 45796.0], [59.0, 45796.0], [59.1, 46115.0], [59.2, 46115.0], [59.3, 46115.0], [59.4, 46115.0], [59.5, 46231.0], [59.6, 46231.0], [59.7, 46231.0], [59.8, 46231.0], [59.9, 46367.0], [60.0, 46367.0], [60.1, 46367.0], [60.2, 46367.0], [60.3, 46429.0], [60.4, 46429.0], [60.5, 46429.0], [60.6, 46429.0], [60.7, 46598.0], [60.8, 46598.0], [60.9, 46598.0], [61.0, 46598.0], [61.1, 46971.0], [61.2, 46971.0], [61.3, 46971.0], [61.4, 46971.0], [61.5, 47135.0], [61.6, 47135.0], [61.7, 47135.0], [61.8, 47135.0], [61.9, 47212.0], [62.0, 47212.0], [62.1, 47212.0], [62.2, 47212.0], [62.3, 47514.0], [62.4, 47514.0], [62.5, 47514.0], [62.6, 47514.0], [62.7, 47761.0], [62.8, 47761.0], [62.9, 47761.0], [63.0, 47761.0], [63.1, 47793.0], [63.2, 47793.0], [63.3, 47793.0], [63.4, 47793.0], [63.5, 47793.0], [63.6, 47793.0], [63.7, 47793.0], [63.8, 47793.0], [63.9, 48000.0], [64.0, 48000.0], [64.1, 48000.0], [64.2, 48000.0], [64.3, 48289.0], [64.4, 48289.0], [64.5, 48289.0], [64.6, 48289.0], [64.7, 48494.0], [64.8, 48494.0], [64.9, 48494.0], [65.0, 48494.0], [65.1, 48536.0], [65.2, 48536.0], [65.3, 48536.0], [65.4, 48536.0], [65.5, 48622.0], [65.6, 48622.0], [65.7, 48622.0], [65.8, 48622.0], [65.9, 48836.0], [66.0, 48836.0], [66.1, 48836.0], [66.2, 48836.0], [66.3, 49357.0], [66.4, 49357.0], [66.5, 49357.0], [66.6, 49357.0], [66.7, 49712.0], [66.8, 49712.0], [66.9, 49712.0], [67.0, 49712.0], [67.1, 50619.0], [67.2, 50619.0], [67.3, 50619.0], [67.4, 50619.0], [67.5, 50730.0], [67.6, 50730.0], [67.7, 50730.0], [67.8, 50730.0], [67.9, 50848.0], [68.0, 50848.0], [68.1, 50848.0], [68.2, 50848.0], [68.3, 51048.0], [68.4, 51048.0], [68.5, 51048.0], [68.6, 51048.0], [68.7, 52268.0], [68.8, 52268.0], [68.9, 52268.0], [69.0, 52268.0], [69.1, 52543.0], [69.2, 52543.0], [69.3, 52543.0], [69.4, 52543.0], [69.5, 52655.0], [69.6, 52655.0], [69.7, 52655.0], [69.8, 52655.0], [69.9, 52835.0], [70.0, 52835.0], [70.1, 52835.0], [70.2, 52835.0], [70.3, 52874.0], [70.4, 52874.0], [70.5, 52874.0], [70.6, 52874.0], [70.7, 52947.0], [70.8, 52947.0], [70.9, 52947.0], [71.0, 52947.0], [71.1, 52957.0], [71.2, 52957.0], [71.3, 52957.0], [71.4, 52957.0], [71.5, 53005.0], [71.6, 53005.0], [71.7, 53005.0], [71.8, 53005.0], [71.9, 53063.0], [72.0, 53063.0], [72.1, 53063.0], [72.2, 53063.0], [72.3, 53130.0], [72.4, 53130.0], [72.5, 53130.0], [72.6, 53130.0], [72.7, 53196.0], [72.8, 53196.0], [72.9, 53196.0], [73.0, 53196.0], [73.1, 53272.0], [73.2, 53272.0], [73.3, 53272.0], [73.4, 53272.0], [73.5, 53283.0], [73.6, 53283.0], [73.7, 53283.0], [73.8, 53283.0], [73.9, 53303.0], [74.0, 53303.0], [74.1, 53303.0], [74.2, 53303.0], [74.3, 53451.0], [74.4, 53451.0], [74.5, 53451.0], [74.6, 53451.0], [74.7, 53514.0], [74.8, 53514.0], [74.9, 53514.0], [75.0, 53514.0], [75.1, 53514.0], [75.2, 53570.0], [75.3, 53570.0], [75.4, 53570.0], [75.5, 53570.0], [75.6, 53623.0], [75.7, 53623.0], [75.8, 53623.0], [75.9, 53623.0], [76.0, 53654.0], [76.1, 53654.0], [76.2, 53654.0], [76.3, 53654.0], [76.4, 53725.0], [76.5, 53725.0], [76.6, 53725.0], [76.7, 53725.0], [76.8, 53889.0], [76.9, 53889.0], [77.0, 53889.0], [77.1, 53889.0], [77.2, 53926.0], [77.3, 53926.0], [77.4, 53926.0], [77.5, 53926.0], [77.6, 53930.0], [77.7, 53930.0], [77.8, 53930.0], [77.9, 53930.0], [78.0, 54105.0], [78.1, 54105.0], [78.2, 54105.0], [78.3, 54105.0], [78.4, 56027.0], [78.5, 56027.0], [78.6, 56027.0], [78.7, 56027.0], [78.8, 59453.0], [78.9, 59453.0], [79.0, 59453.0], [79.1, 59453.0], [79.2, 60035.0], [79.3, 60035.0], [79.4, 60035.0], [79.5, 60035.0], [79.6, 64705.0], [79.7, 64705.0], [79.8, 64705.0], [79.9, 64705.0], [80.0, 83607.0], [80.1, 83607.0], [80.2, 83607.0], [80.3, 83607.0], [80.4, 85859.0], [80.5, 85859.0], [80.6, 85859.0], [80.7, 85859.0], [80.8, 91863.0], [80.9, 91863.0], [81.0, 91863.0], [81.1, 91863.0], [81.2, 125293.0], [81.3, 125293.0], [81.4, 125293.0], [81.5, 125293.0], [81.6, 126006.0], [81.7, 126006.0], [81.8, 126006.0], [81.9, 126006.0], [82.0, 129510.0], [82.1, 129510.0], [82.2, 129510.0], [82.3, 129510.0], [82.4, 129934.0], [82.5, 129934.0], [82.6, 129934.0], [82.7, 129934.0], [82.8, 131473.0], [82.9, 131473.0], [83.0, 131473.0], [83.1, 131473.0], [83.2, 132032.0], [83.3, 132032.0], [83.4, 132032.0], [83.5, 132032.0], [83.6, 132752.0], [83.7, 132752.0], [83.8, 132752.0], [83.9, 132752.0], [84.0, 133125.0], [84.1, 133125.0], [84.2, 133125.0], [84.3, 133125.0], [84.4, 133753.0], [84.5, 133753.0], [84.6, 133753.0], [84.7, 133753.0], [84.8, 135207.0], [84.9, 135207.0], [85.0, 135207.0], [85.1, 135207.0], [85.2, 137688.0], [85.3, 137688.0], [85.4, 137688.0], [85.5, 137688.0], [85.6, 137818.0], [85.7, 137818.0], [85.8, 137818.0], [85.9, 137818.0], [86.0, 138369.0], [86.1, 138369.0], [86.2, 138369.0], [86.3, 138369.0], [86.4, 138842.0], [86.5, 138842.0], [86.6, 138842.0], [86.7, 138842.0], [86.8, 139505.0], [86.9, 139505.0], [87.0, 139505.0], [87.1, 139505.0], [87.2, 139577.0], [87.3, 139577.0], [87.4, 139577.0], [87.5, 139577.0], [87.6, 139645.0], [87.7, 139645.0], [87.8, 139645.0], [87.9, 139645.0], [88.0, 139913.0], [88.1, 139913.0], [88.2, 139913.0], [88.3, 139913.0], [88.4, 140024.0], [88.5, 140024.0], [88.6, 140024.0], [88.7, 140024.0], [88.8, 140111.0], [88.9, 140111.0], [89.0, 140111.0], [89.1, 140111.0], [89.2, 140161.0], [89.3, 140161.0], [89.4, 140161.0], [89.5, 140161.0], [89.6, 140168.0], [89.7, 140168.0], [89.8, 140168.0], [89.9, 140168.0], [90.0, 140475.0], [90.1, 140475.0], [90.2, 140475.0], [90.3, 140475.0], [90.4, 140892.0], [90.5, 140892.0], [90.6, 140892.0], [90.7, 140892.0], [90.8, 140966.0], [90.9, 140966.0], [91.0, 140966.0], [91.1, 140966.0], [91.2, 141052.0], [91.3, 141052.0], [91.4, 141052.0], [91.5, 141052.0], [91.6, 141526.0], [91.7, 141526.0], [91.8, 141526.0], [91.9, 141526.0], [92.0, 141972.0], [92.1, 141972.0], [92.2, 141972.0], [92.3, 141972.0], [92.4, 142143.0], [92.5, 142143.0], [92.6, 142143.0], [92.7, 142143.0], [92.8, 142228.0], [92.9, 142228.0], [93.0, 142228.0], [93.1, 142228.0], [93.2, 142442.0], [93.3, 142442.0], [93.4, 142442.0], [93.5, 142442.0], [93.6, 142676.0], [93.7, 142676.0], [93.8, 142676.0], [93.9, 142676.0], [94.0, 142921.0], [94.1, 142921.0], [94.2, 142921.0], [94.3, 142921.0], [94.4, 143175.0], [94.5, 143175.0], [94.6, 143175.0], [94.7, 143175.0], [94.8, 143193.0], [94.9, 143193.0], [95.0, 143193.0], [95.1, 143193.0], [95.2, 143293.0], [95.3, 143293.0], [95.4, 143293.0], [95.5, 143293.0], [95.6, 143331.0], [95.7, 143331.0], [95.8, 143331.0], [95.9, 143331.0], [96.0, 143472.0], [96.1, 143472.0], [96.2, 143472.0], [96.3, 143472.0], [96.4, 143506.0], [96.5, 143506.0], [96.6, 143506.0], [96.7, 143506.0], [96.8, 143514.0], [96.9, 143514.0], [97.0, 143514.0], [97.1, 143514.0], [97.2, 143534.0], [97.3, 143534.0], [97.4, 143534.0], [97.5, 143534.0], [97.6, 143563.0], [97.7, 143563.0], [97.8, 143563.0], [97.9, 143563.0], [98.0, 143586.0], [98.1, 143586.0], [98.2, 143586.0], [98.3, 143586.0], [98.4, 143617.0], [98.5, 143617.0], [98.6, 143617.0], [98.7, 143617.0], [98.8, 143680.0], [98.9, 143680.0], [99.0, 143680.0], [99.1, 143680.0], [99.2, 143828.0], [99.3, 143828.0], [99.4, 143828.0], [99.5, 143828.0], [99.6, 144055.0], [99.7, 144055.0], [99.8, 144055.0], [99.9, 144055.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 7.0], [1.0, 7.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 7.0], [1.9, 7.0], [2.0, 7.0], [2.1, 7.0], [2.2, 7.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 8.0], [2.8, 8.0], [2.9, 8.0], [3.0, 8.0], [3.1, 8.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 15.0], [8.2, 15.0], [8.3, 15.0], [8.4, 15.0], [8.5, 15.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 21.0], [9.1, 21.0], [9.2, 21.0], [9.3, 21.0], [9.4, 21.0], [9.5, 23.0], [9.6, 23.0], [9.7, 23.0], [9.8, 23.0], [9.9, 23.0], [10.0, 23.0], [10.1, 23.0], [10.2, 23.0], [10.3, 23.0], [10.4, 24.0], [10.5, 24.0], [10.6, 24.0], [10.7, 24.0], [10.8, 26.0], [10.9, 26.0], [11.0, 26.0], [11.1, 26.0], [11.2, 26.0], [11.3, 30.0], [11.4, 30.0], [11.5, 30.0], [11.6, 30.0], [11.7, 34.0], [11.8, 34.0], [11.9, 34.0], [12.0, 34.0], [12.1, 34.0], [12.2, 38.0], [12.3, 38.0], [12.4, 38.0], [12.5, 38.0], [12.6, 38.0], [12.7, 38.0], [12.8, 38.0], [12.9, 38.0], [13.0, 38.0], [13.1, 38.0], [13.2, 38.0], [13.3, 38.0], [13.4, 38.0], [13.5, 40.0], [13.6, 40.0], [13.7, 40.0], [13.8, 40.0], [13.9, 40.0], [14.0, 46.0], [14.1, 46.0], [14.2, 46.0], [14.3, 46.0], [14.4, 57.0], [14.5, 57.0], [14.6, 57.0], [14.7, 57.0], [14.8, 67.0], [14.9, 67.0], [15.0, 67.0], [15.1, 67.0], [15.2, 67.0], [15.3, 67.0], [15.4, 67.0], [15.5, 67.0], [15.6, 67.0], [15.7, 68.0], [15.8, 68.0], [15.9, 68.0], [16.0, 68.0], [16.1, 68.0], [16.2, 71.0], [16.3, 71.0], [16.4, 71.0], [16.5, 71.0], [16.6, 73.0], [16.7, 73.0], [16.8, 73.0], [16.9, 73.0], [17.0, 73.0], [17.1, 74.0], [17.2, 74.0], [17.3, 74.0], [17.4, 74.0], [17.5, 74.0], [17.6, 74.0], [17.7, 74.0], [17.8, 74.0], [17.9, 74.0], [18.0, 74.0], [18.1, 74.0], [18.2, 74.0], [18.3, 74.0], [18.4, 88.0], [18.5, 88.0], [18.6, 88.0], [18.7, 88.0], [18.8, 88.0], [18.9, 95.0], [19.0, 95.0], [19.1, 95.0], [19.2, 95.0], [19.3, 97.0], [19.4, 97.0], [19.5, 97.0], [19.6, 97.0], [19.7, 97.0], [19.8, 97.0], [19.9, 97.0], [20.0, 97.0], [20.1, 97.0], [20.2, 105.0], [20.3, 105.0], [20.4, 105.0], [20.5, 105.0], [20.6, 105.0], [20.7, 110.0], [20.8, 110.0], [20.9, 110.0], [21.0, 110.0], [21.1, 116.0], [21.2, 116.0], [21.3, 116.0], [21.4, 116.0], [21.5, 116.0], [21.6, 116.0], [21.7, 116.0], [21.8, 116.0], [21.9, 116.0], [22.0, 133.0], [22.1, 133.0], [22.2, 133.0], [22.3, 133.0], [22.4, 133.0], [22.5, 136.0], [22.6, 136.0], [22.7, 136.0], [22.8, 136.0], [22.9, 151.0], [23.0, 151.0], [23.1, 151.0], [23.2, 151.0], [23.3, 151.0], [23.4, 155.0], [23.5, 155.0], [23.6, 155.0], [23.7, 155.0], [23.8, 164.0], [23.9, 164.0], [24.0, 164.0], [24.1, 164.0], [24.2, 164.0], [24.3, 166.0], [24.4, 166.0], [24.5, 166.0], [24.6, 166.0], [24.7, 166.0], [24.8, 166.0], [24.9, 166.0], [25.0, 166.0], [25.1, 166.0], [25.2, 169.0], [25.3, 169.0], [25.4, 169.0], [25.5, 169.0], [25.6, 172.0], [25.7, 172.0], [25.8, 172.0], [25.9, 172.0], [26.0, 172.0], [26.1, 174.0], [26.2, 174.0], [26.3, 174.0], [26.4, 174.0], [26.5, 176.0], [26.6, 176.0], [26.7, 176.0], [26.8, 176.0], [26.9, 176.0], [27.0, 190.0], [27.1, 190.0], [27.2, 190.0], [27.3, 190.0], [27.4, 197.0], [27.5, 197.0], [27.6, 197.0], [27.7, 197.0], [27.8, 197.0], [27.9, 200.0], [28.0, 200.0], [28.1, 200.0], [28.2, 200.0], [28.3, 215.0], [28.4, 215.0], [28.5, 215.0], [28.6, 215.0], [28.7, 216.0], [28.8, 216.0], [28.9, 216.0], [29.0, 216.0], [29.1, 216.0], [29.2, 227.0], [29.3, 227.0], [29.4, 227.0], [29.5, 227.0], [29.6, 239.0], [29.7, 239.0], [29.8, 239.0], [29.9, 239.0], [30.0, 239.0], [30.1, 257.0], [30.2, 257.0], [30.3, 257.0], [30.4, 257.0], [30.5, 265.0], [30.6, 265.0], [30.7, 265.0], [30.8, 265.0], [30.9, 265.0], [31.0, 271.0], [31.1, 271.0], [31.2, 271.0], [31.3, 271.0], [31.4, 282.0], [31.5, 282.0], [31.6, 282.0], [31.7, 282.0], [31.8, 282.0], [31.9, 285.0], [32.0, 285.0], [32.1, 285.0], [32.2, 285.0], [32.3, 287.0], [32.4, 287.0], [32.5, 287.0], [32.6, 287.0], [32.7, 287.0], [32.8, 329.0], [32.9, 329.0], [33.0, 329.0], [33.1, 329.0], [33.2, 330.0], [33.3, 330.0], [33.4, 330.0], [33.5, 330.0], [33.6, 330.0], [33.7, 337.0], [33.8, 337.0], [33.9, 337.0], [34.0, 337.0], [34.1, 342.0], [34.2, 342.0], [34.3, 342.0], [34.4, 342.0], [34.5, 342.0], [34.6, 350.0], [34.7, 350.0], [34.8, 350.0], [34.9, 350.0], [35.0, 356.0], [35.1, 356.0], [35.2, 356.0], [35.3, 356.0], [35.4, 356.0], [35.5, 368.0], [35.6, 368.0], [35.7, 368.0], [35.8, 368.0], [35.9, 408.0], [36.0, 408.0], [36.1, 408.0], [36.2, 408.0], [36.3, 408.0], [36.4, 419.0], [36.5, 419.0], [36.6, 419.0], [36.7, 419.0], [36.8, 420.0], [36.9, 420.0], [37.0, 420.0], [37.1, 420.0], [37.2, 420.0], [37.3, 428.0], [37.4, 428.0], [37.5, 428.0], [37.6, 428.0], [37.7, 440.0], [37.8, 440.0], [37.9, 440.0], [38.0, 440.0], [38.1, 440.0], [38.2, 441.0], [38.3, 441.0], [38.4, 441.0], [38.5, 441.0], [38.6, 450.0], [38.7, 450.0], [38.8, 450.0], [38.9, 450.0], [39.0, 450.0], [39.1, 454.0], [39.2, 454.0], [39.3, 454.0], [39.4, 454.0], [39.5, 499.0], [39.6, 499.0], [39.7, 499.0], [39.8, 499.0], [39.9, 499.0], [40.0, 505.0], [40.1, 505.0], [40.2, 505.0], [40.3, 505.0], [40.4, 511.0], [40.5, 511.0], [40.6, 511.0], [40.7, 511.0], [40.8, 511.0], [40.9, 516.0], [41.0, 516.0], [41.1, 516.0], [41.2, 516.0], [41.3, 528.0], [41.4, 528.0], [41.5, 528.0], [41.6, 528.0], [41.7, 528.0], [41.8, 545.0], [41.9, 545.0], [42.0, 545.0], [42.1, 545.0], [42.2, 572.0], [42.3, 572.0], [42.4, 572.0], [42.5, 572.0], [42.6, 572.0], [42.7, 573.0], [42.8, 573.0], [42.9, 573.0], [43.0, 573.0], [43.1, 618.0], [43.2, 618.0], [43.3, 618.0], [43.4, 618.0], [43.5, 623.0], [43.6, 623.0], [43.7, 623.0], [43.8, 623.0], [43.9, 623.0], [44.0, 660.0], [44.1, 660.0], [44.2, 660.0], [44.3, 660.0], [44.4, 673.0], [44.5, 673.0], [44.6, 673.0], [44.7, 673.0], [44.8, 673.0], [44.9, 701.0], [45.0, 701.0], [45.1, 701.0], [45.2, 701.0], [45.3, 930.0], [45.4, 930.0], [45.5, 930.0], [45.6, 930.0], [45.7, 930.0], [45.8, 1038.0], [45.9, 1038.0], [46.0, 1038.0], [46.1, 1038.0], [46.2, 1109.0], [46.3, 1109.0], [46.4, 1109.0], [46.5, 1109.0], [46.6, 1109.0], [46.7, 8217.0], [46.8, 8217.0], [46.9, 8217.0], [47.0, 8217.0], [47.1, 8633.0], [47.2, 8633.0], [47.3, 8633.0], [47.4, 8633.0], [47.5, 8633.0], [47.6, 11570.0], [47.7, 11570.0], [47.8, 11570.0], [47.9, 11570.0], [48.0, 14372.0], [48.1, 14372.0], [48.2, 14372.0], [48.3, 14372.0], [48.4, 14372.0], [48.5, 15334.0], [48.6, 15334.0], [48.7, 15334.0], [48.8, 15334.0], [48.9, 21010.0], [49.0, 21010.0], [49.1, 21010.0], [49.2, 21010.0], [49.3, 21010.0], [49.4, 23213.0], [49.5, 23213.0], [49.6, 23213.0], [49.7, 23213.0], [49.8, 26551.0], [49.9, 26551.0], [50.0, 26551.0], [50.1, 26551.0], [50.2, 26551.0], [50.3, 27090.0], [50.4, 27090.0], [50.5, 27090.0], [50.6, 27090.0], [50.7, 27144.0], [50.8, 27144.0], [50.9, 27144.0], [51.0, 27144.0], [51.1, 27144.0], [51.2, 28142.0], [51.3, 28142.0], [51.4, 28142.0], [51.5, 28142.0], [51.6, 28811.0], [51.7, 28811.0], [51.8, 28811.0], [51.9, 28811.0], [52.0, 28811.0], [52.1, 28845.0], [52.2, 28845.0], [52.3, 28845.0], [52.4, 28845.0], [52.5, 29040.0], [52.6, 29040.0], [52.7, 29040.0], [52.8, 29040.0], [52.9, 29040.0], [53.0, 29746.0], [53.1, 29746.0], [53.2, 29746.0], [53.3, 29746.0], [53.4, 30062.0], [53.5, 30062.0], [53.6, 30062.0], [53.7, 30062.0], [53.8, 30062.0], [53.9, 30698.0], [54.0, 30698.0], [54.1, 30698.0], [54.2, 30698.0], [54.3, 31805.0], [54.4, 31805.0], [54.5, 31805.0], [54.6, 31805.0], [54.7, 31805.0], [54.8, 32228.0], [54.9, 32228.0], [55.0, 32228.0], [55.1, 32228.0], [55.2, 32669.0], [55.3, 32669.0], [55.4, 32669.0], [55.5, 32669.0], [55.6, 32669.0], [55.7, 32674.0], [55.8, 32674.0], [55.9, 32674.0], [56.0, 32674.0], [56.1, 32737.0], [56.2, 32737.0], [56.3, 32737.0], [56.4, 32737.0], [56.5, 32737.0], [56.6, 33035.0], [56.7, 33035.0], [56.8, 33035.0], [56.9, 33035.0], [57.0, 33430.0], [57.1, 33430.0], [57.2, 33430.0], [57.3, 33430.0], [57.4, 33453.0], [57.5, 33453.0], [57.6, 33453.0], [57.7, 33453.0], [57.8, 33453.0], [57.9, 33460.0], [58.0, 33460.0], [58.1, 33460.0], [58.2, 33460.0], [58.3, 33884.0], [58.4, 33884.0], [58.5, 33884.0], [58.6, 33884.0], [58.7, 33884.0], [58.8, 33935.0], [58.9, 33935.0], [59.0, 33935.0], [59.1, 33935.0], [59.2, 34113.0], [59.3, 34113.0], [59.4, 34113.0], [59.5, 34113.0], [59.6, 34113.0], [59.7, 35116.0], [59.8, 35116.0], [59.9, 35116.0], [60.0, 35116.0], [60.1, 35159.0], [60.2, 35159.0], [60.3, 35159.0], [60.4, 35159.0], [60.5, 35159.0], [60.6, 35360.0], [60.7, 35360.0], [60.8, 35360.0], [60.9, 35360.0], [61.0, 35480.0], [61.1, 35480.0], [61.2, 35480.0], [61.3, 35480.0], [61.4, 35480.0], [61.5, 35597.0], [61.6, 35597.0], [61.7, 35597.0], [61.8, 35597.0], [61.9, 35867.0], [62.0, 35867.0], [62.1, 35867.0], [62.2, 35867.0], [62.3, 35867.0], [62.4, 35994.0], [62.5, 35994.0], [62.6, 35994.0], [62.7, 35994.0], [62.8, 36301.0], [62.9, 36301.0], [63.0, 36301.0], [63.1, 36301.0], [63.2, 36301.0], [63.3, 37096.0], [63.4, 37096.0], [63.5, 37096.0], [63.6, 37096.0], [63.7, 37202.0], [63.8, 37202.0], [63.9, 37202.0], [64.0, 37202.0], [64.1, 37202.0], [64.2, 37746.0], [64.3, 37746.0], [64.4, 37746.0], [64.5, 37746.0], [64.6, 38018.0], [64.7, 38018.0], [64.8, 38018.0], [64.9, 38018.0], [65.0, 38018.0], [65.1, 39103.0], [65.2, 39103.0], [65.3, 39103.0], [65.4, 39103.0], [65.5, 39260.0], [65.6, 39260.0], [65.7, 39260.0], [65.8, 39260.0], [65.9, 39260.0], [66.0, 40783.0], [66.1, 40783.0], [66.2, 40783.0], [66.3, 40783.0], [66.4, 40892.0], [66.5, 40892.0], [66.6, 40892.0], [66.7, 40892.0], [66.8, 40892.0], [66.9, 41509.0], [67.0, 41509.0], [67.1, 41509.0], [67.2, 41509.0], [67.3, 42259.0], [67.4, 42259.0], [67.5, 42259.0], [67.6, 42259.0], [67.7, 42259.0], [67.8, 42487.0], [67.9, 42487.0], [68.0, 42487.0], [68.1, 42487.0], [68.2, 42738.0], [68.3, 42738.0], [68.4, 42738.0], [68.5, 42738.0], [68.6, 42738.0], [68.7, 42853.0], [68.8, 42853.0], [68.9, 42853.0], [69.0, 42853.0], [69.1, 42990.0], [69.2, 42990.0], [69.3, 42990.0], [69.4, 42990.0], [69.5, 42990.0], [69.6, 43094.0], [69.7, 43094.0], [69.8, 43094.0], [69.9, 43094.0], [70.0, 43302.0], [70.1, 43302.0], [70.2, 43302.0], [70.3, 43302.0], [70.4, 43302.0], [70.5, 44317.0], [70.6, 44317.0], [70.7, 44317.0], [70.8, 44317.0], [70.9, 44889.0], [71.0, 44889.0], [71.1, 44889.0], [71.2, 44889.0], [71.3, 44889.0], [71.4, 45117.0], [71.5, 45117.0], [71.6, 45117.0], [71.7, 45117.0], [71.8, 45133.0], [71.9, 45133.0], [72.0, 45133.0], [72.1, 45133.0], [72.2, 45137.0], [72.3, 45137.0], [72.4, 45137.0], [72.5, 45137.0], [72.6, 45137.0], [72.7, 45171.0], [72.8, 45171.0], [72.9, 45171.0], [73.0, 45171.0], [73.1, 45188.0], [73.2, 45188.0], [73.3, 45188.0], [73.4, 45188.0], [73.5, 45188.0], [73.6, 45461.0], [73.7, 45461.0], [73.8, 45461.0], [73.9, 45461.0], [74.0, 45470.0], [74.1, 45470.0], [74.2, 45470.0], [74.3, 45470.0], [74.4, 45470.0], [74.5, 45503.0], [74.6, 45503.0], [74.7, 45503.0], [74.8, 45503.0], [74.9, 45515.0], [75.0, 45515.0], [75.1, 45515.0], [75.2, 45515.0], [75.3, 45515.0], [75.4, 45685.0], [75.5, 45685.0], [75.6, 45685.0], [75.7, 45685.0], [75.8, 45879.0], [75.9, 45879.0], [76.0, 45879.0], [76.1, 45879.0], [76.2, 45879.0], [76.3, 45906.0], [76.4, 45906.0], [76.5, 45906.0], [76.6, 45906.0], [76.7, 46146.0], [76.8, 46146.0], [76.9, 46146.0], [77.0, 46146.0], [77.1, 46146.0], [77.2, 46273.0], [77.3, 46273.0], [77.4, 46273.0], [77.5, 46273.0], [77.6, 46318.0], [77.7, 46318.0], [77.8, 46318.0], [77.9, 46318.0], [78.0, 46318.0], [78.1, 46559.0], [78.2, 46559.0], [78.3, 46559.0], [78.4, 46559.0], [78.5, 46582.0], [78.6, 46582.0], [78.7, 46582.0], [78.8, 46582.0], [78.9, 46582.0], [79.0, 46770.0], [79.1, 46770.0], [79.2, 46770.0], [79.3, 46770.0], [79.4, 47128.0], [79.5, 47128.0], [79.6, 47128.0], [79.7, 47128.0], [79.8, 47128.0], [79.9, 47199.0], [80.0, 47199.0], [80.1, 47199.0], [80.2, 47199.0], [80.3, 47246.0], [80.4, 47246.0], [80.5, 47246.0], [80.6, 47246.0], [80.7, 47246.0], [80.8, 47248.0], [80.9, 47248.0], [81.0, 47248.0], [81.1, 47248.0], [81.2, 47248.0], [81.3, 47248.0], [81.4, 47248.0], [81.5, 47248.0], [81.6, 47248.0], [81.7, 47292.0], [81.8, 47292.0], [81.9, 47292.0], [82.0, 47292.0], [82.1, 47467.0], [82.2, 47467.0], [82.3, 47467.0], [82.4, 47467.0], [82.5, 47467.0], [82.6, 47602.0], [82.7, 47602.0], [82.8, 47602.0], [82.9, 47602.0], [83.0, 47779.0], [83.1, 47779.0], [83.2, 47779.0], [83.3, 47779.0], [83.4, 47779.0], [83.5, 47889.0], [83.6, 47889.0], [83.7, 47889.0], [83.8, 47889.0], [83.9, 48042.0], [84.0, 48042.0], [84.1, 48042.0], [84.2, 48042.0], [84.3, 48042.0], [84.4, 48109.0], [84.5, 48109.0], [84.6, 48109.0], [84.7, 48109.0], [84.8, 48195.0], [84.9, 48195.0], [85.0, 48195.0], [85.1, 48195.0], [85.2, 48195.0], [85.3, 48449.0], [85.4, 48449.0], [85.5, 48449.0], [85.6, 48449.0], [85.7, 48505.0], [85.8, 48505.0], [85.9, 48505.0], [86.0, 48505.0], [86.1, 48636.0], [86.2, 48636.0], [86.3, 48636.0], [86.4, 48636.0], [86.5, 48636.0], [86.6, 48745.0], [86.7, 48745.0], [86.8, 48745.0], [86.9, 48745.0], [87.0, 48774.0], [87.1, 48774.0], [87.2, 48774.0], [87.3, 48774.0], [87.4, 48774.0], [87.5, 48786.0], [87.6, 48786.0], [87.7, 48786.0], [87.8, 48786.0], [87.9, 49103.0], [88.0, 49103.0], [88.1, 49103.0], [88.2, 49103.0], [88.3, 49103.0], [88.4, 49524.0], [88.5, 49524.0], [88.6, 49524.0], [88.7, 49524.0], [88.8, 49692.0], [88.9, 49692.0], [89.0, 49692.0], [89.1, 49692.0], [89.2, 49692.0], [89.3, 50035.0], [89.4, 50035.0], [89.5, 50035.0], [89.6, 50035.0], [89.7, 50450.0], [89.8, 50450.0], [89.9, 50450.0], [90.0, 50450.0], [90.1, 50450.0], [90.2, 50866.0], [90.3, 50866.0], [90.4, 50866.0], [90.5, 50866.0], [90.6, 50957.0], [90.7, 50957.0], [90.8, 50957.0], [90.9, 50957.0], [91.0, 50957.0], [91.1, 50970.0], [91.2, 50970.0], [91.3, 50970.0], [91.4, 50970.0], [91.5, 50998.0], [91.6, 50998.0], [91.7, 50998.0], [91.8, 50998.0], [91.9, 50998.0], [92.0, 51061.0], [92.1, 51061.0], [92.2, 51061.0], [92.3, 51061.0], [92.4, 51100.0], [92.5, 51100.0], [92.6, 51100.0], [92.7, 51100.0], [92.8, 51100.0], [92.9, 51687.0], [93.0, 51687.0], [93.1, 51687.0], [93.2, 51687.0], [93.3, 51796.0], [93.4, 51796.0], [93.5, 51796.0], [93.6, 51796.0], [93.7, 51796.0], [93.8, 51894.0], [93.9, 51894.0], [94.0, 51894.0], [94.1, 51894.0], [94.2, 51970.0], [94.3, 51970.0], [94.4, 51970.0], [94.5, 51970.0], [94.6, 51970.0], [94.7, 52132.0], [94.8, 52132.0], [94.9, 52132.0], [95.0, 52132.0], [95.1, 52309.0], [95.2, 52309.0], [95.3, 52309.0], [95.4, 52309.0], [95.5, 52309.0], [95.6, 52337.0], [95.7, 52337.0], [95.8, 52337.0], [95.9, 52337.0], [96.0, 52435.0], [96.1, 52435.0], [96.2, 52435.0], [96.3, 52435.0], [96.4, 52435.0], [96.5, 52655.0], [96.6, 52655.0], [96.7, 52655.0], [96.8, 52655.0], [96.9, 54924.0], [97.0, 54924.0], [97.1, 54924.0], [97.2, 54924.0], [97.3, 54924.0], [97.4, 55755.0], [97.5, 55755.0], [97.6, 55755.0], [97.7, 55755.0], [97.8, 56324.0], [97.9, 56324.0], [98.0, 56324.0], [98.1, 56324.0], [98.2, 56324.0], [98.3, 58516.0], [98.4, 58516.0], [98.5, 58516.0], [98.6, 58516.0], [98.7, 60338.0], [98.8, 60338.0], [98.9, 60338.0], [99.0, 60338.0], [99.1, 60338.0], [99.2, 61629.0], [99.3, 61629.0], [99.4, 61629.0], [99.5, 61629.0], [99.6, 63319.0], [99.7, 63319.0], [99.8, 63319.0], [99.9, 63319.0], [100.0, 63319.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 54.0, "series": [{"data": [[0.0, 18.0], [168800.0, 1.0], [174400.0, 1.0], [182400.0, 1.0], [185600.0, 1.0], [186400.0, 1.0], [191200.0, 1.0], [192000.0, 1.0], [164900.0, 2.0], [166500.0, 2.0], [185700.0, 1.0], [194500.0, 1.0], [196100.0, 1.0], [202500.0, 1.0], [73500.0, 1.0], [74300.0, 1.0], [81900.0, 1.0], [79100.0, 1.0], [84700.0, 1.0], [85900.0, 1.0], [97100.0, 1.0], [101100.0, 1.0], [101500.0, 2.0], [99100.0, 1.0], [102700.0, 1.0], [103500.0, 1.0], [107500.0, 1.0], [152200.0, 1.0], [176200.0, 2.0], [178600.0, 1.0], [185000.0, 1.0], [100.0, 11.0], [149100.0, 1.0], [36900.0, 1.0], [39500.0, 1.0], [39700.0, 1.0], [39300.0, 1.0], [39100.0, 1.0], [165900.0, 1.0], [168300.0, 1.0], [169100.0, 1.0], [172300.0, 1.0], [173100.0, 1.0], [176300.0, 1.0], [44900.0, 1.0], [43700.0, 1.0], [44700.0, 1.0], [45100.0, 1.0], [46500.0, 1.0], [46300.0, 1.0], [45300.0, 1.0], [193100.0, 1.0], [194700.0, 1.0], [47900.0, 1.0], [47300.0, 1.0], [47500.0, 1.0], [47700.0, 1.0], [199500.0, 1.0], [49500.0, 1.0], [51100.0, 1.0], [50700.0, 1.0], [200.0, 10.0], [52300.0, 1.0], [52900.0, 2.0], [52500.0, 1.0], [53100.0, 1.0], [53700.0, 4.0], [55100.0, 1.0], [54500.0, 1.0], [53300.0, 2.0], [53500.0, 1.0], [53900.0, 3.0], [65100.0, 1.0], [300.0, 6.0], [83800.0, 1.0], [84200.0, 1.0], [400.0, 7.0], [103000.0, 1.0], [105000.0, 1.0], [103800.0, 1.0], [102600.0, 1.0], [106600.0, 1.0], [500.0, 8.0], [145200.0, 1.0], [600.0, 10.0], [159600.0, 1.0], [160400.0, 1.0], [162000.0, 1.0], [167600.0, 1.0], [700.0, 6.0], [174000.0, 1.0], [181200.0, 1.0], [196400.0, 1.0], [800.0, 4.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 1.0], [169300.0, 1.0], [178100.0, 1.0], [188500.0, 2.0], [73700.0, 1.0], [74100.0, 1.0], [79700.0, 1.0], [86500.0, 2.0], [86900.0, 1.0], [100500.0, 1.0], [102100.0, 1.0], [104900.0, 1.0], [114900.0, 1.0], [166200.0, 1.0], [170200.0, 2.0], [187000.0, 1.0], [194200.0, 1.0], [19300.0, 1.0], [28900.0, 1.0], [31800.0, 1.0], [32400.0, 1.0], [32800.0, 1.0], [33800.0, 1.0], [35000.0, 1.0], [40000.0, 1.0], [170300.0, 1.0], [43000.0, 1.0], [42800.0, 2.0], [41600.0, 1.0], [44200.0, 1.0], [44400.0, 1.0], [46200.0, 1.0], [45400.0, 1.0], [45600.0, 1.0], [46600.0, 1.0], [49000.0, 1.0], [191900.0, 1.0], [190300.0, 1.0], [48600.0, 1.0], [47200.0, 1.0], [47800.0, 1.0], [47600.0, 1.0], [48800.0, 1.0], [51000.0, 1.0], [50600.0, 1.0], [53000.0, 3.0], [53200.0, 2.0], [52600.0, 1.0], [54200.0, 1.0], [53400.0, 1.0], [53600.0, 1.0], [56000.0, 1.0], [59400.0, 1.0], [65200.0, 1.0], [76800.0, 1.0], [84800.0, 1.0], [90400.0, 1.0], [94000.0, 1.0], [96800.0, 1.0], [98800.0, 1.0], [103600.0, 1.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[0.0, 54.0], [135200.0, 1.0], [132000.0, 1.0], [137600.0, 1.0], [140000.0, 1.0], [140800.0, 1.0], [143200.0, 1.0], [142400.0, 1.0], [144000.0, 1.0], [133700.0, 1.0], [143300.0, 1.0], [140100.0, 3.0], [140900.0, 1.0], [129900.0, 1.0], [129500.0, 1.0], [131400.0, 1.0], [137800.0, 1.0], [141000.0, 1.0], [142600.0, 1.0], [143400.0, 1.0], [100.0, 13.0], [133100.0, 1.0], [139500.0, 2.0], [141900.0, 1.0], [143500.0, 5.0], [38900.0, 1.0], [36900.0, 2.0], [39900.0, 1.0], [42900.0, 1.0], [44100.0, 2.0], [44300.0, 1.0], [44700.0, 1.0], [45500.0, 1.0], [45700.0, 1.0], [46900.0, 1.0], [45100.0, 1.0], [45300.0, 1.0], [46500.0, 1.0], [46100.0, 1.0], [46300.0, 1.0], [47100.0, 1.0], [48500.0, 1.0], [47700.0, 3.0], [47500.0, 1.0], [50700.0, 1.0], [49300.0, 1.0], [49700.0, 1.0], [200.0, 9.0], [52900.0, 2.0], [53100.0, 2.0], [52500.0, 1.0], [53500.0, 2.0], [54100.0, 1.0], [53300.0, 1.0], [53700.0, 1.0], [53900.0, 2.0], [64700.0, 1.0], [300.0, 13.0], [85800.0, 1.0], [91800.0, 1.0], [400.0, 7.0], [500.0, 4.0], [138800.0, 1.0], [139600.0, 1.0], [140400.0, 1.0], [143600.0, 2.0], [600.0, 5.0], [700.0, 3.0], [800.0, 2.0], [142900.0, 1.0], [142100.0, 1.0], [6800.0, 1.0], [142200.0, 1.0], [143800.0, 1.0], [9300.0, 1.0], [14500.0, 1.0], [19300.0, 1.0], [28600.0, 1.0], [27900.0, 1.0], [32400.0, 1.0], [132700.0, 1.0], [138300.0, 1.0], [34800.0, 1.0], [143100.0, 2.0], [139900.0, 1.0], [141500.0, 1.0], [36600.0, 1.0], [37000.0, 1.0], [37600.0, 1.0], [39600.0, 1.0], [39000.0, 1.0], [39200.0, 1.0], [40800.0, 1.0], [42800.0, 2.0], [42200.0, 1.0], [41000.0, 1.0], [44600.0, 1.0], [44400.0, 1.0], [43200.0, 1.0], [46200.0, 1.0], [45600.0, 2.0], [46400.0, 1.0], [47200.0, 1.0], [48600.0, 1.0], [48800.0, 1.0], [48200.0, 1.0], [48400.0, 1.0], [48000.0, 1.0], [50800.0, 1.0], [51000.0, 1.0], [50600.0, 1.0], [52800.0, 2.0], [53200.0, 2.0], [52200.0, 1.0], [53000.0, 2.0], [52600.0, 1.0], [53600.0, 2.0], [53400.0, 1.0], [53800.0, 1.0], [56000.0, 1.0], [59400.0, 1.0], [60000.0, 1.0], [83600.0, 1.0], [125200.0, 1.0], [126000.0, 1.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[0.0, 45.0], [100.0, 17.0], [33900.0, 1.0], [34100.0, 1.0], [35100.0, 2.0], [35900.0, 1.0], [35300.0, 1.0], [36300.0, 1.0], [35500.0, 1.0], [37700.0, 1.0], [39100.0, 1.0], [40700.0, 1.0], [41500.0, 1.0], [42700.0, 1.0], [42900.0, 1.0], [44300.0, 1.0], [43300.0, 1.0], [45100.0, 5.0], [47100.0, 2.0], [45900.0, 1.0], [46500.0, 2.0], [45500.0, 2.0], [46700.0, 1.0], [46300.0, 1.0], [46100.0, 1.0], [48700.0, 3.0], [49100.0, 1.0], [48500.0, 1.0], [48100.0, 2.0], [47700.0, 1.0], [50900.0, 3.0], [49500.0, 1.0], [51100.0, 1.0], [200.0, 11.0], [52300.0, 2.0], [51900.0, 1.0], [52100.0, 1.0], [51700.0, 1.0], [54900.0, 1.0], [56300.0, 1.0], [55700.0, 1.0], [58500.0, 1.0], [60300.0, 1.0], [63300.0, 1.0], [300.0, 7.0], [400.0, 9.0], [500.0, 7.0], [600.0, 4.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [8200.0, 1.0], [8600.0, 1.0], [11500.0, 1.0], [14300.0, 1.0], [15300.0, 1.0], [21000.0, 1.0], [23200.0, 1.0], [26500.0, 1.0], [27000.0, 1.0], [27100.0, 1.0], [28100.0, 1.0], [28800.0, 2.0], [29000.0, 1.0], [29700.0, 1.0], [30000.0, 1.0], [30600.0, 1.0], [32600.0, 2.0], [32700.0, 1.0], [32200.0, 1.0], [31800.0, 1.0], [33400.0, 3.0], [33800.0, 1.0], [33000.0, 1.0], [35400.0, 1.0], [35800.0, 1.0], [37000.0, 1.0], [37200.0, 1.0], [38000.0, 1.0], [40800.0, 1.0], [39200.0, 1.0], [42200.0, 1.0], [42800.0, 1.0], [43000.0, 1.0], [42400.0, 1.0], [44800.0, 1.0], [45800.0, 1.0], [45600.0, 1.0], [45400.0, 2.0], [46200.0, 1.0], [47200.0, 4.0], [47800.0, 1.0], [47600.0, 1.0], [48400.0, 1.0], [48600.0, 1.0], [47400.0, 1.0], [48000.0, 1.0], [49600.0, 1.0], [51000.0, 1.0], [50000.0, 1.0], [50800.0, 1.0], [50400.0, 1.0], [52600.0, 1.0], [51600.0, 1.0], [51800.0, 1.0], [52400.0, 1.0], [61600.0, 1.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 202500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 57.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 465.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 57.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 465.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 24.74468085106383, "minX": 1.61649438E12, "maxY": 50.0, "series": [{"data": [[1.61649438E12, 50.0], [1.6164945E12, 50.0], [1.61649462E12, 24.74468085106383], [1.61649444E12, 50.0], [1.61649456E12, 49.94117647058822]], "isOverall": false, "label": "Thread Group 50", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61649462E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 19388.0, "minX": 1.0, "maxY": 107543.0, "series": [{"data": [[33.0, 104444.5], [35.0, 105140.0], [37.0, 101587.0], [36.0, 51137.0], [39.0, 103063.0], [38.0, 98820.0], [41.0, 75261.5], [43.0, 36936.0], [42.0, 44790.0], [45.0, 79176.0], [44.0, 86541.0], [47.0, 76816.0], [46.0, 73500.0], [49.0, 19388.0], [48.0, 73744.0], [3.0, 53930.0], [50.0, 63336.02000000001], [5.0, 53777.0], [7.0, 59449.0], [8.0, 53407.666666666664], [9.0, 53382.0], [10.0, 53515.0], [13.0, 53284.0], [15.0, 53305.0], [16.0, 107543.0], [1.0, 53190.0], [17.0, 52947.0], [19.0, 48112.0], [20.0, 52659.0], [21.0, 54567.0], [22.0, 54207.0], [23.0, 53044.0], [24.0, 41623.0], [26.0, 102661.0], [30.0, 81874.2], [31.0, 103501.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[45.20883534136546, 64331.277108433766]], "isOverall": false, "label": "SELECT Test-Aggregated", "isController": true}, {"data": [[8.0, 53385.666666666664], [36.0, 51048.0], [9.0, 53196.0], [41.0, 47761.0], [10.0, 53514.0], [43.0, 36936.0], [42.0, 44752.0], [49.0, 19388.0], [3.0, 53930.0], [50.0, 42978.63677130043], [15.0, 53281.6], [1.0, 53130.0], [17.0, 52947.0], [19.0, 53303.0], [20.0, 52655.0], [5.0, 53926.0], [22.0, 54105.0], [24.0, 53005.0], [7.0, 53623.0], [30.0, 51443.5]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[46.815261044176694, 43778.74297188752]], "isOverall": false, "label": "(POST) Admin Login-Aggregated", "isController": false}, {"data": [[33.0, 50983.0], [35.0, 51342.5], [37.0, 49524.0], [39.0, 49103.0], [38.0, 48505.0], [41.0, 48109.0], [45.0, 29040.0], [44.0, 35597.0], [47.0, 23213.0], [46.0, 26551.0], [48.0, 21010.0], [50.0, 19884.310000000005], [17.0, 52337.0], [19.0, 42487.0], [21.0, 45188.0], [24.0, 40783.0], [26.0, 51796.0], [7.0, 52435.0], [30.0, 51998.666666666664], [31.0, 50450.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}, {"data": [[48.233183856502244, 22437.8340807175]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 150556.11666666667, "minX": 1.61649438E12, "maxY": 2.3326001701666668E8, "series": [{"data": [[1.61649438E12, 2.558264795E7], [1.6164945E12, 6652532.6], [1.61649462E12, 1.186355345E7], [1.61649444E12, 2.3326001701666668E8], [1.61649456E12, 6444513.133333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61649438E12, 150556.11666666667], [1.6164945E12, 1746587.8333333333], [1.61649462E12, 2722338.683333333], [1.61649444E12, 2408412.3833333333], [1.61649456E12, 1695890.2666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61649462E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 13750.794117647054, "minX": 1.61649438E12, "maxY": 102525.6, "series": [{"data": [[1.6164945E12, 45380.92079207923], [1.61649462E12, 69322.38297872343], [1.61649444E12, 89122.38461538462], [1.61649456E12, 66219.66666666667]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.61649438E12, 102525.6], [1.6164945E12, 16050.480769230775], [1.61649462E12, 51891.32], [1.61649444E12, 75083.23809523808], [1.61649456E12, 35959.806451612916]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.6164945E12, 13750.794117647054], [1.61649462E12, 45716.59090909091], [1.61649444E12, 19752.23437499999], [1.61649456E12, 38032.80000000001]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61649462E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61649438E12, "maxY": 2744.2738095238087, "series": [{"data": [[1.6164945E12, 0.0], [1.61649462E12, 0.0], [1.61649444E12, 0.0], [1.61649456E12, 0.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.61649438E12, 879.2], [1.6164945E12, 106.30769230769228], [1.61649462E12, 2281.6799999999994], [1.61649444E12, 2744.2738095238087], [1.61649456E12, 370.3548387096776]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.6164945E12, 629.2058823529412], [1.61649462E12, 2583.3181818181815], [1.61649444E12, 662.390625], [1.61649456E12, 765.342857142857]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61649462E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61649438E12, "maxY": 210.09803921568624, "series": [{"data": [[1.6164945E12, 0.0], [1.61649462E12, 0.0], [1.61649444E12, 0.0], [1.61649456E12, 0.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.61649438E12, 85.4], [1.6164945E12, 178.73076923076923], [1.61649462E12, 30.079999999999995], [1.61649444E12, 110.42857142857142], [1.61649456E12, 114.80645161290323]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.6164945E12, 210.09803921568624], [1.61649462E12, 31.227272727272723], [1.61649444E12, 194.62499999999994], [1.61649456E12, 84.71428571428571]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61649462E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6815.0, "minX": 1.61649438E12, "maxY": 144055.0, "series": [{"data": [[1.61649438E12, 126006.0], [1.61649444E12, 144055.0], [1.61649456E12, 9335.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61649438E12, 83607.0], [1.61649444E12, 60338.0], [1.61649456E12, 6815.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61649438E12, 126006.0], [1.61649444E12, 143586.0], [1.61649456E12, 143576.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61649438E12, 126006.0], [1.61649444E12, 144055.0], [1.61649456E12, 144055.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61649438E12, 126006.0], [1.61649444E12, 143754.0], [1.61649456E12, 143724.4]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61649456E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 112.5, "minX": 1000.0, "maxY": 140024.0, "series": [{"data": [[1000.0, 140024.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3000.0, 112.5], [6000.0, 53518.0], [1000.0, 516.0], [2000.0, 52316.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 6000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1000.0, "maxY": 4163.0, "series": [{"data": [[1000.0, 4163.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3000.0, 0.0], [6000.0, 326.0], [1000.0, 0.0], [2000.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 6000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.61649426E12, "maxY": 3.816666666666667, "series": [{"data": [[1.61649438E12, 0.08333333333333333], [1.6164945E12, 3.816666666666667], [1.61649444E12, 2.4166666666666665], [1.61649426E12, 0.8333333333333334], [1.61649456E12, 1.55]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61649456E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61649438E12, "maxY": 2.316666666666667, "series": [{"data": [[1.61649438E12, 0.08333333333333333], [1.6164945E12, 1.1166666666666667], [1.61649462E12, 1.5333333333333334], [1.61649444E12, 1.3166666666666667], [1.61649456E12, 1.05]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6164945E12, 2.316666666666667], [1.61649462E12, 0.03333333333333333], [1.61649444E12, 1.15], [1.61649456E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: java.net.NoRouteToHostException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61649462E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61649438E12, "maxY": 1.7333333333333334, "series": [{"data": [[1.61649444E12, 0.05], [1.61649456E12, 0.03333333333333333]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-success", "isController": false}, {"data": [[1.6164945E12, 1.7], [1.61649462E12, 0.36666666666666664], [1.61649444E12, 1.0166666666666666], [1.61649456E12, 0.55]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-failure", "isController": false}, {"data": [[1.6164945E12, 1.6833333333333333], [1.61649462E12, 0.7833333333333333], [1.61649444E12, 1.0333333333333334], [1.61649456E12, 0.6]], "isOverall": false, "label": "SELECT Test-failure", "isController": true}, {"data": [[1.61649444E12, 0.05]], "isOverall": false, "label": "SELECT Test-success", "isController": true}, {"data": [[1.61649438E12, 0.08333333333333333], [1.61649444E12, 0.75], [1.61649456E12, 0.03333333333333333]], "isOverall": false, "label": "(POST) Admin Login-success", "isController": false}, {"data": [[1.6164945E12, 1.7333333333333334], [1.61649462E12, 0.4166666666666667], [1.61649444E12, 0.65], [1.61649456E12, 0.48333333333333334]], "isOverall": false, "label": "(POST) Admin Login-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61649462E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.61649438E12, "maxY": 5.116666666666666, "series": [{"data": [[1.61649438E12, 0.08333333333333333], [1.61649444E12, 0.85], [1.61649456E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6164945E12, 5.116666666666666], [1.61649462E12, 1.5666666666666667], [1.61649444E12, 2.7], [1.61649456E12, 1.6333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61649462E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

