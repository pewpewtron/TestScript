/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 167055.0, "series": [{"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 30.0], [0.3, 30.0], [0.4, 30.0], [0.5, 36.0], [0.6, 36.0], [0.7, 36.0], [0.8, 36.0], [0.9, 36.0], [1.0, 44.0], [1.1, 44.0], [1.2, 44.0], [1.3, 44.0], [1.4, 56.0], [1.5, 56.0], [1.6, 56.0], [1.7, 56.0], [1.8, 56.0], [1.9, 87.0], [2.0, 87.0], [2.1, 87.0], [2.2, 87.0], [2.3, 87.0], [2.4, 117.0], [2.5, 117.0], [2.6, 117.0], [2.7, 117.0], [2.8, 243.0], [2.9, 243.0], [3.0, 243.0], [3.1, 243.0], [3.2, 243.0], [3.3, 276.0], [3.4, 276.0], [3.5, 276.0], [3.6, 276.0], [3.7, 276.0], [3.8, 311.0], [3.9, 311.0], [4.0, 311.0], [4.1, 311.0], [4.2, 314.0], [4.3, 314.0], [4.4, 314.0], [4.5, 314.0], [4.6, 314.0], [4.7, 334.0], [4.8, 334.0], [4.9, 334.0], [5.0, 334.0], [5.1, 334.0], [5.2, 373.0], [5.3, 373.0], [5.4, 373.0], [5.5, 373.0], [5.6, 380.0], [5.7, 380.0], [5.8, 380.0], [5.9, 380.0], [6.0, 380.0], [6.1, 409.0], [6.2, 409.0], [6.3, 409.0], [6.4, 409.0], [6.5, 409.0], [6.6, 429.0], [6.7, 429.0], [6.8, 429.0], [6.9, 429.0], [7.0, 432.0], [7.1, 432.0], [7.2, 432.0], [7.3, 432.0], [7.4, 432.0], [7.5, 441.0], [7.6, 441.0], [7.7, 441.0], [7.8, 441.0], [7.9, 441.0], [8.0, 469.0], [8.1, 469.0], [8.2, 469.0], [8.3, 469.0], [8.4, 551.0], [8.5, 551.0], [8.6, 551.0], [8.7, 551.0], [8.8, 551.0], [8.9, 570.0], [9.0, 570.0], [9.1, 570.0], [9.2, 570.0], [9.3, 570.0], [9.4, 588.0], [9.5, 588.0], [9.6, 588.0], [9.7, 588.0], [9.8, 602.0], [9.9, 602.0], [10.0, 602.0], [10.1, 602.0], [10.2, 602.0], [10.3, 627.0], [10.4, 627.0], [10.5, 627.0], [10.6, 627.0], [10.7, 642.0], [10.8, 642.0], [10.9, 642.0], [11.0, 642.0], [11.1, 642.0], [11.2, 685.0], [11.3, 685.0], [11.4, 685.0], [11.5, 685.0], [11.6, 685.0], [11.7, 696.0], [11.8, 696.0], [11.9, 696.0], [12.0, 696.0], [12.1, 756.0], [12.2, 756.0], [12.3, 756.0], [12.4, 756.0], [12.5, 756.0], [12.6, 790.0], [12.7, 790.0], [12.8, 790.0], [12.9, 790.0], [13.0, 790.0], [13.1, 923.0], [13.2, 923.0], [13.3, 923.0], [13.4, 923.0], [13.5, 991.0], [13.6, 991.0], [13.7, 991.0], [13.8, 991.0], [13.9, 991.0], [14.0, 1039.0], [14.1, 1039.0], [14.2, 1039.0], [14.3, 1039.0], [14.4, 1039.0], [14.5, 1065.0], [14.6, 1065.0], [14.7, 1065.0], [14.8, 1065.0], [14.9, 1154.0], [15.0, 1154.0], [15.1, 1154.0], [15.2, 1154.0], [15.3, 1154.0], [15.4, 1359.0], [15.5, 1359.0], [15.6, 1359.0], [15.7, 1359.0], [15.8, 1359.0], [15.9, 3378.0], [16.0, 3378.0], [16.1, 3378.0], [16.2, 3378.0], [16.3, 3386.0], [16.4, 3386.0], [16.5, 3386.0], [16.6, 3386.0], [16.7, 3386.0], [16.8, 3754.0], [16.9, 3754.0], [17.0, 3754.0], [17.1, 3754.0], [17.2, 3754.0], [17.3, 4315.0], [17.4, 4315.0], [17.5, 4315.0], [17.6, 4315.0], [17.7, 4369.0], [17.8, 4369.0], [17.9, 4369.0], [18.0, 4369.0], [18.1, 4369.0], [18.2, 24150.0], [18.3, 24150.0], [18.4, 24150.0], [18.5, 24150.0], [18.6, 24150.0], [18.7, 27845.0], [18.8, 27845.0], [18.9, 27845.0], [19.0, 27845.0], [19.1, 28064.0], [19.2, 28064.0], [19.3, 28064.0], [19.4, 28064.0], [19.5, 28064.0], [19.6, 28486.0], [19.7, 28486.0], [19.8, 28486.0], [19.9, 28486.0], [20.0, 28486.0], [20.1, 31305.0], [20.2, 31305.0], [20.3, 31305.0], [20.4, 31305.0], [20.5, 31433.0], [20.6, 31433.0], [20.7, 31433.0], [20.8, 31433.0], [20.9, 31433.0], [21.0, 31801.0], [21.1, 31801.0], [21.2, 31801.0], [21.3, 31801.0], [21.4, 32035.0], [21.5, 32035.0], [21.6, 32035.0], [21.7, 32035.0], [21.8, 32035.0], [21.9, 33658.0], [22.0, 33658.0], [22.1, 33658.0], [22.2, 33658.0], [22.3, 33658.0], [22.4, 35962.0], [22.5, 35962.0], [22.6, 35962.0], [22.7, 35962.0], [22.8, 37473.0], [22.9, 37473.0], [23.0, 37473.0], [23.1, 37473.0], [23.2, 37473.0], [23.3, 39150.0], [23.4, 39150.0], [23.5, 39150.0], [23.6, 39150.0], [23.7, 39150.0], [23.8, 39173.0], [23.9, 39173.0], [24.0, 39173.0], [24.1, 39173.0], [24.2, 39283.0], [24.3, 39283.0], [24.4, 39283.0], [24.5, 39283.0], [24.6, 39283.0], [24.7, 40208.0], [24.8, 40208.0], [24.9, 40208.0], [25.0, 40208.0], [25.1, 40208.0], [25.2, 40470.0], [25.3, 40470.0], [25.4, 40470.0], [25.5, 40470.0], [25.6, 40598.0], [25.7, 40598.0], [25.8, 40598.0], [25.9, 40598.0], [26.0, 40598.0], [26.1, 40705.0], [26.2, 40705.0], [26.3, 40705.0], [26.4, 40705.0], [26.5, 40705.0], [26.6, 40847.0], [26.7, 40847.0], [26.8, 40847.0], [26.9, 40847.0], [27.0, 40927.0], [27.1, 40927.0], [27.2, 40927.0], [27.3, 40927.0], [27.4, 40927.0], [27.5, 42336.0], [27.6, 42336.0], [27.7, 42336.0], [27.8, 42336.0], [27.9, 42336.0], [28.0, 42430.0], [28.1, 42430.0], [28.2, 42430.0], [28.3, 42430.0], [28.4, 42869.0], [28.5, 42869.0], [28.6, 42869.0], [28.7, 42869.0], [28.8, 42869.0], [28.9, 43492.0], [29.0, 43492.0], [29.1, 43492.0], [29.2, 43492.0], [29.3, 43492.0], [29.4, 44195.0], [29.5, 44195.0], [29.6, 44195.0], [29.7, 44195.0], [29.8, 44485.0], [29.9, 44485.0], [30.0, 44485.0], [30.1, 44485.0], [30.2, 44485.0], [30.3, 44512.0], [30.4, 44512.0], [30.5, 44512.0], [30.6, 44512.0], [30.7, 44815.0], [30.8, 44815.0], [30.9, 44815.0], [31.0, 44815.0], [31.1, 44815.0], [31.2, 44848.0], [31.3, 44848.0], [31.4, 44848.0], [31.5, 44848.0], [31.6, 44848.0], [31.7, 45149.0], [31.8, 45149.0], [31.9, 45149.0], [32.0, 45149.0], [32.1, 49845.0], [32.2, 49845.0], [32.3, 49845.0], [32.4, 49845.0], [32.5, 49845.0], [32.6, 58618.0], [32.7, 58618.0], [32.8, 58618.0], [32.9, 58618.0], [33.0, 58618.0], [33.1, 59868.0], [33.2, 59868.0], [33.3, 59868.0], [33.4, 59868.0], [33.5, 60482.0], [33.6, 60482.0], [33.7, 60482.0], [33.8, 60482.0], [33.9, 60482.0], [34.0, 61616.0], [34.1, 61616.0], [34.2, 61616.0], [34.3, 61616.0], [34.4, 61616.0], [34.5, 61668.0], [34.6, 61668.0], [34.7, 61668.0], [34.8, 61668.0], [34.9, 63182.0], [35.0, 63182.0], [35.1, 63182.0], [35.2, 63182.0], [35.3, 63182.0], [35.4, 63184.0], [35.5, 63184.0], [35.6, 63184.0], [35.7, 63184.0], [35.8, 63184.0], [35.9, 63207.0], [36.0, 63207.0], [36.1, 63207.0], [36.2, 63207.0], [36.3, 63289.0], [36.4, 63289.0], [36.5, 63289.0], [36.6, 63289.0], [36.7, 63289.0], [36.8, 63302.0], [36.9, 63302.0], [37.0, 63302.0], [37.1, 63302.0], [37.2, 63302.0], [37.3, 63438.0], [37.4, 63438.0], [37.5, 63438.0], [37.6, 63438.0], [37.7, 63722.0], [37.8, 63722.0], [37.9, 63722.0], [38.0, 63722.0], [38.1, 63722.0], [38.2, 64274.0], [38.3, 64274.0], [38.4, 64274.0], [38.5, 64274.0], [38.6, 64274.0], [38.7, 64468.0], [38.8, 64468.0], [38.9, 64468.0], [39.0, 64468.0], [39.1, 64709.0], [39.2, 64709.0], [39.3, 64709.0], [39.4, 64709.0], [39.5, 64709.0], [39.6, 64831.0], [39.7, 64831.0], [39.8, 64831.0], [39.9, 64831.0], [40.0, 64831.0], [40.1, 65017.0], [40.2, 65017.0], [40.3, 65017.0], [40.4, 65017.0], [40.5, 65615.0], [40.6, 65615.0], [40.7, 65615.0], [40.8, 65615.0], [40.9, 65615.0], [41.0, 65971.0], [41.1, 65971.0], [41.2, 65971.0], [41.3, 65971.0], [41.4, 66370.0], [41.5, 66370.0], [41.6, 66370.0], [41.7, 66370.0], [41.8, 66370.0], [41.9, 66379.0], [42.0, 66379.0], [42.1, 66379.0], [42.2, 66379.0], [42.3, 66379.0], [42.4, 66586.0], [42.5, 66586.0], [42.6, 66586.0], [42.7, 66586.0], [42.8, 67685.0], [42.9, 67685.0], [43.0, 67685.0], [43.1, 67685.0], [43.2, 67685.0], [43.3, 67885.0], [43.4, 67885.0], [43.5, 67885.0], [43.6, 67885.0], [43.7, 67885.0], [43.8, 68592.0], [43.9, 68592.0], [44.0, 68592.0], [44.1, 68592.0], [44.2, 68617.0], [44.3, 68617.0], [44.4, 68617.0], [44.5, 68617.0], [44.6, 68617.0], [44.7, 68907.0], [44.8, 68907.0], [44.9, 68907.0], [45.0, 68907.0], [45.1, 68907.0], [45.2, 68986.0], [45.3, 68986.0], [45.4, 68986.0], [45.5, 68986.0], [45.6, 69317.0], [45.7, 69317.0], [45.8, 69317.0], [45.9, 69317.0], [46.0, 69317.0], [46.1, 69336.0], [46.2, 69336.0], [46.3, 69336.0], [46.4, 69336.0], [46.5, 69336.0], [46.6, 69491.0], [46.7, 69491.0], [46.8, 69491.0], [46.9, 69491.0], [47.0, 69644.0], [47.1, 69644.0], [47.2, 69644.0], [47.3, 69644.0], [47.4, 69644.0], [47.5, 69743.0], [47.6, 69743.0], [47.7, 69743.0], [47.8, 69743.0], [47.9, 69743.0], [48.0, 70859.0], [48.1, 70859.0], [48.2, 70859.0], [48.3, 70859.0], [48.4, 71644.0], [48.5, 71644.0], [48.6, 71644.0], [48.7, 71644.0], [48.8, 71644.0], [48.9, 71655.0], [49.0, 71655.0], [49.1, 71655.0], [49.2, 71655.0], [49.3, 71655.0], [49.4, 72887.0], [49.5, 72887.0], [49.6, 72887.0], [49.7, 72887.0], [49.8, 72899.0], [49.9, 72899.0], [50.0, 72899.0], [50.1, 72899.0], [50.2, 72899.0], [50.3, 73331.0], [50.4, 73331.0], [50.5, 73331.0], [50.6, 73331.0], [50.7, 73655.0], [50.8, 73655.0], [50.9, 73655.0], [51.0, 73655.0], [51.1, 73655.0], [51.2, 74120.0], [51.3, 74120.0], [51.4, 74120.0], [51.5, 74120.0], [51.6, 74120.0], [51.7, 74204.0], [51.8, 74204.0], [51.9, 74204.0], [52.0, 74204.0], [52.1, 74434.0], [52.2, 74434.0], [52.3, 74434.0], [52.4, 74434.0], [52.5, 74434.0], [52.6, 74753.0], [52.7, 74753.0], [52.8, 74753.0], [52.9, 74753.0], [53.0, 74753.0], [53.1, 74902.0], [53.2, 74902.0], [53.3, 74902.0], [53.4, 74902.0], [53.5, 74932.0], [53.6, 74932.0], [53.7, 74932.0], [53.8, 74932.0], [53.9, 74932.0], [54.0, 74980.0], [54.1, 74980.0], [54.2, 74980.0], [54.3, 74980.0], [54.4, 74980.0], [54.5, 74989.0], [54.6, 74989.0], [54.7, 74989.0], [54.8, 74989.0], [54.9, 75701.0], [55.0, 75701.0], [55.1, 75701.0], [55.2, 75701.0], [55.3, 75701.0], [55.4, 75873.0], [55.5, 75873.0], [55.6, 75873.0], [55.7, 75873.0], [55.8, 75873.0], [55.9, 75973.0], [56.0, 75973.0], [56.1, 75973.0], [56.2, 75973.0], [56.3, 76421.0], [56.4, 76421.0], [56.5, 76421.0], [56.6, 76421.0], [56.7, 76421.0], [56.8, 76992.0], [56.9, 76992.0], [57.0, 76992.0], [57.1, 76992.0], [57.2, 76992.0], [57.3, 77256.0], [57.4, 77256.0], [57.5, 77256.0], [57.6, 77256.0], [57.7, 77314.0], [57.8, 77314.0], [57.9, 77314.0], [58.0, 77314.0], [58.1, 77314.0], [58.2, 77344.0], [58.3, 77344.0], [58.4, 77344.0], [58.5, 77344.0], [58.6, 77344.0], [58.7, 77742.0], [58.8, 77742.0], [58.9, 77742.0], [59.0, 77742.0], [59.1, 77971.0], [59.2, 77971.0], [59.3, 77971.0], [59.4, 77971.0], [59.5, 77971.0], [59.6, 78125.0], [59.7, 78125.0], [59.8, 78125.0], [59.9, 78125.0], [60.0, 78125.0], [60.1, 78156.0], [60.2, 78156.0], [60.3, 78156.0], [60.4, 78156.0], [60.5, 79139.0], [60.6, 79139.0], [60.7, 79139.0], [60.8, 79139.0], [60.9, 79139.0], [61.0, 79857.0], [61.1, 79857.0], [61.2, 79857.0], [61.3, 79857.0], [61.4, 79989.0], [61.5, 79989.0], [61.6, 79989.0], [61.7, 79989.0], [61.8, 79989.0], [61.9, 80042.0], [62.0, 80042.0], [62.1, 80042.0], [62.2, 80042.0], [62.3, 80042.0], [62.4, 80866.0], [62.5, 80866.0], [62.6, 80866.0], [62.7, 80866.0], [62.8, 81051.0], [62.9, 81051.0], [63.0, 81051.0], [63.1, 81051.0], [63.2, 81051.0], [63.3, 81885.0], [63.4, 81885.0], [63.5, 81885.0], [63.6, 81885.0], [63.7, 81885.0], [63.8, 82074.0], [63.9, 82074.0], [64.0, 82074.0], [64.1, 82074.0], [64.2, 82326.0], [64.3, 82326.0], [64.4, 82326.0], [64.5, 82326.0], [64.6, 82326.0], [64.7, 82763.0], [64.8, 82763.0], [64.9, 82763.0], [65.0, 82763.0], [65.1, 82763.0], [65.2, 83807.0], [65.3, 83807.0], [65.4, 83807.0], [65.5, 83807.0], [65.6, 84208.0], [65.7, 84208.0], [65.8, 84208.0], [65.9, 84208.0], [66.0, 84208.0], [66.1, 84649.0], [66.2, 84649.0], [66.3, 84649.0], [66.4, 84649.0], [66.5, 84649.0], [66.6, 84926.0], [66.7, 84926.0], [66.8, 84926.0], [66.9, 84926.0], [67.0, 85177.0], [67.1, 85177.0], [67.2, 85177.0], [67.3, 85177.0], [67.4, 85177.0], [67.5, 86148.0], [67.6, 86148.0], [67.7, 86148.0], [67.8, 86148.0], [67.9, 86148.0], [68.0, 86191.0], [68.1, 86191.0], [68.2, 86191.0], [68.3, 86191.0], [68.4, 86415.0], [68.5, 86415.0], [68.6, 86415.0], [68.7, 86415.0], [68.8, 86415.0], [68.9, 86908.0], [69.0, 86908.0], [69.1, 86908.0], [69.2, 86908.0], [69.3, 86908.0], [69.4, 87358.0], [69.5, 87358.0], [69.6, 87358.0], [69.7, 87358.0], [69.8, 88297.0], [69.9, 88297.0], [70.0, 88297.0], [70.1, 88297.0], [70.2, 88297.0], [70.3, 88567.0], [70.4, 88567.0], [70.5, 88567.0], [70.6, 88567.0], [70.7, 88838.0], [70.8, 88838.0], [70.9, 88838.0], [71.0, 88838.0], [71.1, 88838.0], [71.2, 90983.0], [71.3, 90983.0], [71.4, 90983.0], [71.5, 90983.0], [71.6, 90983.0], [71.7, 93457.0], [71.8, 93457.0], [71.9, 93457.0], [72.0, 93457.0], [72.1, 93994.0], [72.2, 93994.0], [72.3, 93994.0], [72.4, 93994.0], [72.5, 93994.0], [72.6, 94793.0], [72.7, 94793.0], [72.8, 94793.0], [72.9, 94793.0], [73.0, 94793.0], [73.1, 95029.0], [73.2, 95029.0], [73.3, 95029.0], [73.4, 95029.0], [73.5, 95302.0], [73.6, 95302.0], [73.7, 95302.0], [73.8, 95302.0], [73.9, 95302.0], [74.0, 96435.0], [74.1, 96435.0], [74.2, 96435.0], [74.3, 96435.0], [74.4, 96435.0], [74.5, 97261.0], [74.6, 97261.0], [74.7, 97261.0], [74.8, 97261.0], [74.9, 97539.0], [75.0, 97539.0], [75.1, 97539.0], [75.2, 97539.0], [75.3, 97539.0], [75.4, 97603.0], [75.5, 97603.0], [75.6, 97603.0], [75.7, 97603.0], [75.8, 97603.0], [75.9, 98603.0], [76.0, 98603.0], [76.1, 98603.0], [76.2, 98603.0], [76.3, 99241.0], [76.4, 99241.0], [76.5, 99241.0], [76.6, 99241.0], [76.7, 99241.0], [76.8, 99399.0], [76.9, 99399.0], [77.0, 99399.0], [77.1, 99399.0], [77.2, 99399.0], [77.3, 101284.0], [77.4, 101284.0], [77.5, 101284.0], [77.6, 101284.0], [77.7, 104711.0], [77.8, 104711.0], [77.9, 104711.0], [78.0, 104711.0], [78.1, 104711.0], [78.2, 133796.0], [78.3, 133796.0], [78.4, 133796.0], [78.5, 133796.0], [78.6, 133796.0], [78.7, 137511.0], [78.8, 137511.0], [78.9, 137511.0], [79.0, 137511.0], [79.1, 140668.0], [79.2, 140668.0], [79.3, 140668.0], [79.4, 140668.0], [79.5, 140668.0], [79.6, 142553.0], [79.7, 142553.0], [79.8, 142553.0], [79.9, 142553.0], [80.0, 142665.0], [80.1, 142665.0], [80.2, 142665.0], [80.3, 142665.0], [80.4, 142665.0], [80.5, 145114.0], [80.6, 145114.0], [80.7, 145114.0], [80.8, 145114.0], [80.9, 145114.0], [81.0, 145339.0], [81.1, 145339.0], [81.2, 145339.0], [81.3, 145339.0], [81.4, 146388.0], [81.5, 146388.0], [81.6, 146388.0], [81.7, 146388.0], [81.8, 146388.0], [81.9, 146613.0], [82.0, 146613.0], [82.1, 146613.0], [82.2, 146613.0], [82.3, 146613.0], [82.4, 146798.0], [82.5, 146798.0], [82.6, 146798.0], [82.7, 146798.0], [82.8, 146860.0], [82.9, 146860.0], [83.0, 146860.0], [83.1, 146860.0], [83.2, 146860.0], [83.3, 146952.0], [83.4, 146952.0], [83.5, 146952.0], [83.6, 146952.0], [83.7, 146952.0], [83.8, 147828.0], [83.9, 147828.0], [84.0, 147828.0], [84.1, 147828.0], [84.2, 147880.0], [84.3, 147880.0], [84.4, 147880.0], [84.5, 147880.0], [84.6, 147880.0], [84.7, 147992.0], [84.8, 147992.0], [84.9, 147992.0], [85.0, 147992.0], [85.1, 147992.0], [85.2, 148111.0], [85.3, 148111.0], [85.4, 148111.0], [85.5, 148111.0], [85.6, 148215.0], [85.7, 148215.0], [85.8, 148215.0], [85.9, 148215.0], [86.0, 148215.0], [86.1, 149692.0], [86.2, 149692.0], [86.3, 149692.0], [86.4, 149692.0], [86.5, 149692.0], [86.6, 149771.0], [86.7, 149771.0], [86.8, 149771.0], [86.9, 149771.0], [87.0, 149893.0], [87.1, 149893.0], [87.2, 149893.0], [87.3, 149893.0], [87.4, 149893.0], [87.5, 149909.0], [87.6, 149909.0], [87.7, 149909.0], [87.8, 149909.0], [87.9, 149909.0], [88.0, 149962.0], [88.1, 149962.0], [88.2, 149962.0], [88.3, 149962.0], [88.4, 150127.0], [88.5, 150127.0], [88.6, 150127.0], [88.7, 150127.0], [88.8, 150127.0], [88.9, 150132.0], [89.0, 150132.0], [89.1, 150132.0], [89.2, 150132.0], [89.3, 150132.0], [89.4, 150209.0], [89.5, 150209.0], [89.6, 150209.0], [89.7, 150209.0], [89.8, 150820.0], [89.9, 150820.0], [90.0, 150820.0], [90.1, 150820.0], [90.2, 150820.0], [90.3, 150837.0], [90.4, 150837.0], [90.5, 150837.0], [90.6, 150837.0], [90.7, 150894.0], [90.8, 150894.0], [90.9, 150894.0], [91.0, 150894.0], [91.1, 150894.0], [91.2, 150944.0], [91.3, 150944.0], [91.4, 150944.0], [91.5, 150944.0], [91.6, 150944.0], [91.7, 150971.0], [91.8, 150971.0], [91.9, 150971.0], [92.0, 150971.0], [92.1, 150996.0], [92.2, 150996.0], [92.3, 150996.0], [92.4, 150996.0], [92.5, 150996.0], [92.6, 150999.0], [92.7, 150999.0], [92.8, 150999.0], [92.9, 150999.0], [93.0, 150999.0], [93.1, 151034.0], [93.2, 151034.0], [93.3, 151034.0], [93.4, 151034.0], [93.5, 151072.0], [93.6, 151072.0], [93.7, 151072.0], [93.8, 151072.0], [93.9, 151072.0], [94.0, 151125.0], [94.1, 151125.0], [94.2, 151125.0], [94.3, 151125.0], [94.4, 151125.0], [94.5, 151144.0], [94.6, 151144.0], [94.7, 151144.0], [94.8, 151144.0], [94.9, 151154.0], [95.0, 151154.0], [95.1, 151154.0], [95.2, 151154.0], [95.3, 151154.0], [95.4, 151154.0], [95.5, 151154.0], [95.6, 151154.0], [95.7, 151154.0], [95.8, 151154.0], [95.9, 151192.0], [96.0, 151192.0], [96.1, 151192.0], [96.2, 151192.0], [96.3, 151234.0], [96.4, 151234.0], [96.5, 151234.0], [96.6, 151234.0], [96.7, 151234.0], [96.8, 151506.0], [96.9, 151506.0], [97.0, 151506.0], [97.1, 151506.0], [97.2, 151506.0], [97.3, 151594.0], [97.4, 151594.0], [97.5, 151594.0], [97.6, 151594.0], [97.7, 151808.0], [97.8, 151808.0], [97.9, 151808.0], [98.0, 151808.0], [98.1, 151808.0], [98.2, 151824.0], [98.3, 151824.0], [98.4, 151824.0], [98.5, 151824.0], [98.6, 151824.0], [98.7, 152042.0], [98.8, 152042.0], [98.9, 152042.0], [99.0, 152042.0], [99.1, 156118.0], [99.2, 156118.0], [99.3, 156118.0], [99.4, 156118.0], [99.5, 156118.0], [99.6, 167055.0], [99.7, 167055.0], [99.8, 167055.0], [99.9, 167055.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 7.0], [0.3, 7.0], [0.4, 7.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 17.0], [2.0, 17.0], [2.1, 17.0], [2.2, 17.0], [2.3, 17.0], [2.4, 18.0], [2.5, 18.0], [2.6, 18.0], [2.7, 18.0], [2.8, 18.0], [2.9, 18.0], [3.0, 18.0], [3.1, 18.0], [3.2, 18.0], [3.3, 23.0], [3.4, 23.0], [3.5, 23.0], [3.6, 23.0], [3.7, 23.0], [3.8, 24.0], [3.9, 24.0], [4.0, 24.0], [4.1, 24.0], [4.2, 33.0], [4.3, 33.0], [4.4, 33.0], [4.5, 33.0], [4.6, 33.0], [4.7, 49.0], [4.8, 49.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 53.0], [5.3, 53.0], [5.4, 53.0], [5.5, 53.0], [5.6, 71.0], [5.7, 71.0], [5.8, 71.0], [5.9, 71.0], [6.0, 71.0], [6.1, 82.0], [6.2, 82.0], [6.3, 82.0], [6.4, 82.0], [6.5, 82.0], [6.6, 82.0], [6.7, 82.0], [6.8, 82.0], [6.9, 82.0], [7.0, 105.0], [7.1, 105.0], [7.2, 105.0], [7.3, 105.0], [7.4, 105.0], [7.5, 106.0], [7.6, 106.0], [7.7, 106.0], [7.8, 106.0], [7.9, 106.0], [8.0, 123.0], [8.1, 123.0], [8.2, 123.0], [8.3, 123.0], [8.4, 125.0], [8.5, 125.0], [8.6, 125.0], [8.7, 125.0], [8.8, 125.0], [8.9, 139.0], [9.0, 139.0], [9.1, 139.0], [9.2, 139.0], [9.3, 139.0], [9.4, 153.0], [9.5, 153.0], [9.6, 153.0], [9.7, 153.0], [9.8, 163.0], [9.9, 163.0], [10.0, 163.0], [10.1, 163.0], [10.2, 163.0], [10.3, 164.0], [10.4, 164.0], [10.5, 164.0], [10.6, 164.0], [10.7, 174.0], [10.8, 174.0], [10.9, 174.0], [11.0, 174.0], [11.1, 174.0], [11.2, 196.0], [11.3, 196.0], [11.4, 196.0], [11.5, 196.0], [11.6, 196.0], [11.7, 197.0], [11.8, 197.0], [11.9, 197.0], [12.0, 197.0], [12.1, 216.0], [12.2, 216.0], [12.3, 216.0], [12.4, 216.0], [12.5, 216.0], [12.6, 220.0], [12.7, 220.0], [12.8, 220.0], [12.9, 220.0], [13.0, 220.0], [13.1, 227.0], [13.2, 227.0], [13.3, 227.0], [13.4, 227.0], [13.5, 234.0], [13.6, 234.0], [13.7, 234.0], [13.8, 234.0], [13.9, 234.0], [14.0, 246.0], [14.1, 246.0], [14.2, 246.0], [14.3, 246.0], [14.4, 246.0], [14.5, 275.0], [14.6, 275.0], [14.7, 275.0], [14.8, 275.0], [14.9, 285.0], [15.0, 285.0], [15.1, 285.0], [15.2, 285.0], [15.3, 285.0], [15.4, 288.0], [15.5, 288.0], [15.6, 288.0], [15.7, 288.0], [15.8, 288.0], [15.9, 295.0], [16.0, 295.0], [16.1, 295.0], [16.2, 295.0], [16.3, 456.0], [16.4, 456.0], [16.5, 456.0], [16.6, 456.0], [16.7, 456.0], [16.8, 522.0], [16.9, 522.0], [17.0, 522.0], [17.1, 522.0], [17.2, 522.0], [17.3, 535.0], [17.4, 535.0], [17.5, 535.0], [17.6, 535.0], [17.7, 574.0], [17.8, 574.0], [17.9, 574.0], [18.0, 574.0], [18.1, 574.0], [18.2, 665.0], [18.3, 665.0], [18.4, 665.0], [18.5, 665.0], [18.6, 665.0], [18.7, 669.0], [18.8, 669.0], [18.9, 669.0], [19.0, 669.0], [19.1, 709.0], [19.2, 709.0], [19.3, 709.0], [19.4, 709.0], [19.5, 709.0], [19.6, 1050.0], [19.7, 1050.0], [19.8, 1050.0], [19.9, 1050.0], [20.0, 1050.0], [20.1, 2611.0], [20.2, 2611.0], [20.3, 2611.0], [20.4, 2611.0], [20.5, 3181.0], [20.6, 3181.0], [20.7, 3181.0], [20.8, 3181.0], [20.9, 3181.0], [21.0, 3262.0], [21.1, 3262.0], [21.2, 3262.0], [21.3, 3262.0], [21.4, 3329.0], [21.5, 3329.0], [21.6, 3329.0], [21.7, 3329.0], [21.8, 3329.0], [21.9, 4034.0], [22.0, 4034.0], [22.1, 4034.0], [22.2, 4034.0], [22.3, 4034.0], [22.4, 4039.0], [22.5, 4039.0], [22.6, 4039.0], [22.7, 4039.0], [22.8, 12000.0], [22.9, 12000.0], [23.0, 12000.0], [23.1, 12000.0], [23.2, 12000.0], [23.3, 12532.0], [23.4, 12532.0], [23.5, 12532.0], [23.6, 12532.0], [23.7, 12532.0], [23.8, 12751.0], [23.9, 12751.0], [24.0, 12751.0], [24.1, 12751.0], [24.2, 20362.0], [24.3, 20362.0], [24.4, 20362.0], [24.5, 20362.0], [24.6, 20362.0], [24.7, 21119.0], [24.8, 21119.0], [24.9, 21119.0], [25.0, 21119.0], [25.1, 21119.0], [25.2, 22969.0], [25.3, 22969.0], [25.4, 22969.0], [25.5, 22969.0], [25.6, 23516.0], [25.7, 23516.0], [25.8, 23516.0], [25.9, 23516.0], [26.0, 23516.0], [26.1, 23559.0], [26.2, 23559.0], [26.3, 23559.0], [26.4, 23559.0], [26.5, 23559.0], [26.6, 23692.0], [26.7, 23692.0], [26.8, 23692.0], [26.9, 23692.0], [27.0, 23754.0], [27.1, 23754.0], [27.2, 23754.0], [27.3, 23754.0], [27.4, 23754.0], [27.5, 23943.0], [27.6, 23943.0], [27.7, 23943.0], [27.8, 23943.0], [27.9, 23943.0], [28.0, 24362.0], [28.1, 24362.0], [28.2, 24362.0], [28.3, 24362.0], [28.4, 24893.0], [28.5, 24893.0], [28.6, 24893.0], [28.7, 24893.0], [28.8, 24893.0], [28.9, 25152.0], [29.0, 25152.0], [29.1, 25152.0], [29.2, 25152.0], [29.3, 25152.0], [29.4, 25310.0], [29.5, 25310.0], [29.6, 25310.0], [29.7, 25310.0], [29.8, 25401.0], [29.9, 25401.0], [30.0, 25401.0], [30.1, 25401.0], [30.2, 25401.0], [30.3, 25488.0], [30.4, 25488.0], [30.5, 25488.0], [30.6, 25488.0], [30.7, 26165.0], [30.8, 26165.0], [30.9, 26165.0], [31.0, 26165.0], [31.1, 26165.0], [31.2, 26367.0], [31.3, 26367.0], [31.4, 26367.0], [31.5, 26367.0], [31.6, 26367.0], [31.7, 27137.0], [31.8, 27137.0], [31.9, 27137.0], [32.0, 27137.0], [32.1, 27450.0], [32.2, 27450.0], [32.3, 27450.0], [32.4, 27450.0], [32.5, 27450.0], [32.6, 28704.0], [32.7, 28704.0], [32.8, 28704.0], [32.9, 28704.0], [33.0, 28704.0], [33.1, 30230.0], [33.2, 30230.0], [33.3, 30230.0], [33.4, 30230.0], [33.5, 30609.0], [33.6, 30609.0], [33.7, 30609.0], [33.8, 30609.0], [33.9, 30609.0], [34.0, 30760.0], [34.1, 30760.0], [34.2, 30760.0], [34.3, 30760.0], [34.4, 30760.0], [34.5, 31259.0], [34.6, 31259.0], [34.7, 31259.0], [34.8, 31259.0], [34.9, 31666.0], [35.0, 31666.0], [35.1, 31666.0], [35.2, 31666.0], [35.3, 31666.0], [35.4, 32267.0], [35.5, 32267.0], [35.6, 32267.0], [35.7, 32267.0], [35.8, 32267.0], [35.9, 32494.0], [36.0, 32494.0], [36.1, 32494.0], [36.2, 32494.0], [36.3, 32522.0], [36.4, 32522.0], [36.5, 32522.0], [36.6, 32522.0], [36.7, 32522.0], [36.8, 32767.0], [36.9, 32767.0], [37.0, 32767.0], [37.1, 32767.0], [37.2, 32767.0], [37.3, 32853.0], [37.4, 32853.0], [37.5, 32853.0], [37.6, 32853.0], [37.7, 33362.0], [37.8, 33362.0], [37.9, 33362.0], [38.0, 33362.0], [38.1, 33362.0], [38.2, 33656.0], [38.3, 33656.0], [38.4, 33656.0], [38.5, 33656.0], [38.6, 33656.0], [38.7, 33840.0], [38.8, 33840.0], [38.9, 33840.0], [39.0, 33840.0], [39.1, 37286.0], [39.2, 37286.0], [39.3, 37286.0], [39.4, 37286.0], [39.5, 37286.0], [39.6, 37478.0], [39.7, 37478.0], [39.8, 37478.0], [39.9, 37478.0], [40.0, 37478.0], [40.1, 38063.0], [40.2, 38063.0], [40.3, 38063.0], [40.4, 38063.0], [40.5, 38239.0], [40.6, 38239.0], [40.7, 38239.0], [40.8, 38239.0], [40.9, 38239.0], [41.0, 38468.0], [41.1, 38468.0], [41.2, 38468.0], [41.3, 38468.0], [41.4, 39131.0], [41.5, 39131.0], [41.6, 39131.0], [41.7, 39131.0], [41.8, 39131.0], [41.9, 39173.0], [42.0, 39173.0], [42.1, 39173.0], [42.2, 39173.0], [42.3, 39173.0], [42.4, 39271.0], [42.5, 39271.0], [42.6, 39271.0], [42.7, 39271.0], [42.8, 39407.0], [42.9, 39407.0], [43.0, 39407.0], [43.1, 39407.0], [43.2, 39407.0], [43.3, 40029.0], [43.4, 40029.0], [43.5, 40029.0], [43.6, 40029.0], [43.7, 40029.0], [43.8, 40596.0], [43.9, 40596.0], [44.0, 40596.0], [44.1, 40596.0], [44.2, 40688.0], [44.3, 40688.0], [44.4, 40688.0], [44.5, 40688.0], [44.6, 40688.0], [44.7, 40745.0], [44.8, 40745.0], [44.9, 40745.0], [45.0, 40745.0], [45.1, 40745.0], [45.2, 41799.0], [45.3, 41799.0], [45.4, 41799.0], [45.5, 41799.0], [45.6, 41800.0], [45.7, 41800.0], [45.8, 41800.0], [45.9, 41800.0], [46.0, 41800.0], [46.1, 42295.0], [46.2, 42295.0], [46.3, 42295.0], [46.4, 42295.0], [46.5, 42295.0], [46.6, 42318.0], [46.7, 42318.0], [46.8, 42318.0], [46.9, 42318.0], [47.0, 42420.0], [47.1, 42420.0], [47.2, 42420.0], [47.3, 42420.0], [47.4, 42420.0], [47.5, 42867.0], [47.6, 42867.0], [47.7, 42867.0], [47.8, 42867.0], [47.9, 42867.0], [48.0, 43266.0], [48.1, 43266.0], [48.2, 43266.0], [48.3, 43266.0], [48.4, 43484.0], [48.5, 43484.0], [48.6, 43484.0], [48.7, 43484.0], [48.8, 43484.0], [48.9, 43513.0], [49.0, 43513.0], [49.1, 43513.0], [49.2, 43513.0], [49.3, 43513.0], [49.4, 44195.0], [49.5, 44195.0], [49.6, 44195.0], [49.7, 44195.0], [49.8, 44357.0], [49.9, 44357.0], [50.0, 44357.0], [50.1, 44357.0], [50.2, 44357.0], [50.3, 44510.0], [50.4, 44510.0], [50.5, 44510.0], [50.6, 44510.0], [50.7, 45138.0], [50.8, 45138.0], [50.9, 45138.0], [51.0, 45138.0], [51.1, 45138.0], [51.2, 45229.0], [51.3, 45229.0], [51.4, 45229.0], [51.5, 45229.0], [51.6, 45229.0], [51.7, 45722.0], [51.8, 45722.0], [51.9, 45722.0], [52.0, 45722.0], [52.1, 45795.0], [52.2, 45795.0], [52.3, 45795.0], [52.4, 45795.0], [52.5, 45795.0], [52.6, 46799.0], [52.7, 46799.0], [52.8, 46799.0], [52.9, 46799.0], [53.0, 46799.0], [53.1, 46887.0], [53.2, 46887.0], [53.3, 46887.0], [53.4, 46887.0], [53.5, 47202.0], [53.6, 47202.0], [53.7, 47202.0], [53.8, 47202.0], [53.9, 47202.0], [54.0, 47391.0], [54.1, 47391.0], [54.2, 47391.0], [54.3, 47391.0], [54.4, 47391.0], [54.5, 47583.0], [54.6, 47583.0], [54.7, 47583.0], [54.8, 47583.0], [54.9, 47642.0], [55.0, 47642.0], [55.1, 47642.0], [55.2, 47642.0], [55.3, 47642.0], [55.4, 47687.0], [55.5, 47687.0], [55.6, 47687.0], [55.7, 47687.0], [55.8, 47687.0], [55.9, 48433.0], [56.0, 48433.0], [56.1, 48433.0], [56.2, 48433.0], [56.3, 48522.0], [56.4, 48522.0], [56.5, 48522.0], [56.6, 48522.0], [56.7, 48522.0], [56.8, 48579.0], [56.9, 48579.0], [57.0, 48579.0], [57.1, 48579.0], [57.2, 48579.0], [57.3, 48749.0], [57.4, 48749.0], [57.5, 48749.0], [57.6, 48749.0], [57.7, 48769.0], [57.8, 48769.0], [57.9, 48769.0], [58.0, 48769.0], [58.1, 48769.0], [58.2, 49145.0], [58.3, 49145.0], [58.4, 49145.0], [58.5, 49145.0], [58.6, 49145.0], [58.7, 49399.0], [58.8, 49399.0], [58.9, 49399.0], [59.0, 49399.0], [59.1, 49401.0], [59.2, 49401.0], [59.3, 49401.0], [59.4, 49401.0], [59.5, 49401.0], [59.6, 49548.0], [59.7, 49548.0], [59.8, 49548.0], [59.9, 49548.0], [60.0, 49548.0], [60.1, 49638.0], [60.2, 49638.0], [60.3, 49638.0], [60.4, 49638.0], [60.5, 49762.0], [60.6, 49762.0], [60.7, 49762.0], [60.8, 49762.0], [60.9, 49762.0], [61.0, 49772.0], [61.1, 49772.0], [61.2, 49772.0], [61.3, 49772.0], [61.4, 49845.0], [61.5, 49845.0], [61.6, 49845.0], [61.7, 49845.0], [61.8, 49845.0], [61.9, 49858.0], [62.0, 49858.0], [62.1, 49858.0], [62.2, 49858.0], [62.3, 49858.0], [62.4, 49990.0], [62.5, 49990.0], [62.6, 49990.0], [62.7, 49990.0], [62.8, 50043.0], [62.9, 50043.0], [63.0, 50043.0], [63.1, 50043.0], [63.2, 50043.0], [63.3, 50363.0], [63.4, 50363.0], [63.5, 50363.0], [63.6, 50363.0], [63.7, 50363.0], [63.8, 50372.0], [63.9, 50372.0], [64.0, 50372.0], [64.1, 50372.0], [64.2, 50418.0], [64.3, 50418.0], [64.4, 50418.0], [64.5, 50418.0], [64.6, 50418.0], [64.7, 50492.0], [64.8, 50492.0], [64.9, 50492.0], [65.0, 50492.0], [65.1, 50492.0], [65.2, 50614.0], [65.3, 50614.0], [65.4, 50614.0], [65.5, 50614.0], [65.6, 50633.0], [65.7, 50633.0], [65.8, 50633.0], [65.9, 50633.0], [66.0, 50633.0], [66.1, 50766.0], [66.2, 50766.0], [66.3, 50766.0], [66.4, 50766.0], [66.5, 50766.0], [66.6, 51382.0], [66.7, 51382.0], [66.8, 51382.0], [66.9, 51382.0], [67.0, 51529.0], [67.1, 51529.0], [67.2, 51529.0], [67.3, 51529.0], [67.4, 51529.0], [67.5, 51544.0], [67.6, 51544.0], [67.7, 51544.0], [67.8, 51544.0], [67.9, 51544.0], [68.0, 51687.0], [68.1, 51687.0], [68.2, 51687.0], [68.3, 51687.0], [68.4, 51725.0], [68.5, 51725.0], [68.6, 51725.0], [68.7, 51725.0], [68.8, 51725.0], [68.9, 51789.0], [69.0, 51789.0], [69.1, 51789.0], [69.2, 51789.0], [69.3, 51789.0], [69.4, 51800.0], [69.5, 51800.0], [69.6, 51800.0], [69.7, 51800.0], [69.8, 51809.0], [69.9, 51809.0], [70.0, 51809.0], [70.1, 51809.0], [70.2, 51809.0], [70.3, 51824.0], [70.4, 51824.0], [70.5, 51824.0], [70.6, 51824.0], [70.7, 51835.0], [70.8, 51835.0], [70.9, 51835.0], [71.0, 51835.0], [71.1, 51835.0], [71.2, 51857.0], [71.3, 51857.0], [71.4, 51857.0], [71.5, 51857.0], [71.6, 51857.0], [71.7, 51910.0], [71.8, 51910.0], [71.9, 51910.0], [72.0, 51910.0], [72.1, 52078.0], [72.2, 52078.0], [72.3, 52078.0], [72.4, 52078.0], [72.5, 52078.0], [72.6, 52183.0], [72.7, 52183.0], [72.8, 52183.0], [72.9, 52183.0], [73.0, 52183.0], [73.1, 52211.0], [73.2, 52211.0], [73.3, 52211.0], [73.4, 52211.0], [73.5, 52436.0], [73.6, 52436.0], [73.7, 52436.0], [73.8, 52436.0], [73.9, 52436.0], [74.0, 52639.0], [74.1, 52639.0], [74.2, 52639.0], [74.3, 52639.0], [74.4, 52639.0], [74.5, 52773.0], [74.6, 52773.0], [74.7, 52773.0], [74.8, 52773.0], [74.9, 52777.0], [75.0, 52777.0], [75.1, 52777.0], [75.2, 52777.0], [75.3, 52777.0], [75.4, 53201.0], [75.5, 53201.0], [75.6, 53201.0], [75.7, 53201.0], [75.8, 53201.0], [75.9, 54445.0], [76.0, 54445.0], [76.1, 54445.0], [76.2, 54445.0], [76.3, 54575.0], [76.4, 54575.0], [76.5, 54575.0], [76.6, 54575.0], [76.7, 54575.0], [76.8, 55291.0], [76.9, 55291.0], [77.0, 55291.0], [77.1, 55291.0], [77.2, 55291.0], [77.3, 56660.0], [77.4, 56660.0], [77.5, 56660.0], [77.6, 56660.0], [77.7, 60228.0], [77.8, 60228.0], [77.9, 60228.0], [78.0, 60228.0], [78.1, 60228.0], [78.2, 89070.0], [78.3, 89070.0], [78.4, 89070.0], [78.5, 89070.0], [78.6, 89070.0], [78.7, 95567.0], [78.8, 95567.0], [78.9, 95567.0], [79.0, 95567.0], [79.1, 99046.0], [79.2, 99046.0], [79.3, 99046.0], [79.4, 99046.0], [79.5, 99046.0], [79.6, 106217.0], [79.7, 106217.0], [79.8, 106217.0], [79.9, 106217.0], [80.0, 111146.0], [80.1, 111146.0], [80.2, 111146.0], [80.3, 111146.0], [80.4, 111146.0], [80.5, 111736.0], [80.6, 111736.0], [80.7, 111736.0], [80.8, 111736.0], [80.9, 111736.0], [81.0, 113563.0], [81.1, 113563.0], [81.2, 113563.0], [81.3, 113563.0], [81.4, 114064.0], [81.5, 114064.0], [81.6, 114064.0], [81.7, 114064.0], [81.8, 114064.0], [81.9, 114148.0], [82.0, 114148.0], [82.1, 114148.0], [82.2, 114148.0], [82.3, 114148.0], [82.4, 117088.0], [82.5, 117088.0], [82.6, 117088.0], [82.7, 117088.0], [82.8, 118281.0], [82.9, 118281.0], [83.0, 118281.0], [83.1, 118281.0], [83.2, 118281.0], [83.3, 118723.0], [83.4, 118723.0], [83.5, 118723.0], [83.6, 118723.0], [83.7, 118723.0], [83.8, 119098.0], [83.9, 119098.0], [84.0, 119098.0], [84.1, 119098.0], [84.2, 119099.0], [84.3, 119099.0], [84.4, 119099.0], [84.5, 119099.0], [84.6, 119099.0], [84.7, 119529.0], [84.8, 119529.0], [84.9, 119529.0], [85.0, 119529.0], [85.1, 119529.0], [85.2, 120885.0], [85.3, 120885.0], [85.4, 120885.0], [85.5, 120885.0], [85.6, 121274.0], [85.7, 121274.0], [85.8, 121274.0], [85.9, 121274.0], [86.0, 121274.0], [86.1, 121849.0], [86.2, 121849.0], [86.3, 121849.0], [86.4, 121849.0], [86.5, 121849.0], [86.6, 122478.0], [86.7, 122478.0], [86.8, 122478.0], [86.9, 122478.0], [87.0, 122485.0], [87.1, 122485.0], [87.2, 122485.0], [87.3, 122485.0], [87.4, 122485.0], [87.5, 123018.0], [87.6, 123018.0], [87.7, 123018.0], [87.8, 123018.0], [87.9, 123018.0], [88.0, 123052.0], [88.1, 123052.0], [88.2, 123052.0], [88.3, 123052.0], [88.4, 123726.0], [88.5, 123726.0], [88.6, 123726.0], [88.7, 123726.0], [88.8, 123726.0], [88.9, 123968.0], [89.0, 123968.0], [89.1, 123968.0], [89.2, 123968.0], [89.3, 123968.0], [89.4, 123979.0], [89.5, 123979.0], [89.6, 123979.0], [89.7, 123979.0], [89.8, 124239.0], [89.9, 124239.0], [90.0, 124239.0], [90.1, 124239.0], [90.2, 124239.0], [90.3, 124294.0], [90.4, 124294.0], [90.5, 124294.0], [90.6, 124294.0], [90.7, 124702.0], [90.8, 124702.0], [90.9, 124702.0], [91.0, 124702.0], [91.1, 124702.0], [91.2, 125170.0], [91.3, 125170.0], [91.4, 125170.0], [91.5, 125170.0], [91.6, 125170.0], [91.7, 125292.0], [91.8, 125292.0], [91.9, 125292.0], [92.0, 125292.0], [92.1, 125576.0], [92.2, 125576.0], [92.3, 125576.0], [92.4, 125576.0], [92.5, 125576.0], [92.6, 125664.0], [92.7, 125664.0], [92.8, 125664.0], [92.9, 125664.0], [93.0, 125664.0], [93.1, 125705.0], [93.2, 125705.0], [93.3, 125705.0], [93.4, 125705.0], [93.5, 125895.0], [93.6, 125895.0], [93.7, 125895.0], [93.8, 125895.0], [93.9, 125895.0], [94.0, 125976.0], [94.1, 125976.0], [94.2, 125976.0], [94.3, 125976.0], [94.4, 125976.0], [94.5, 126353.0], [94.6, 126353.0], [94.7, 126353.0], [94.8, 126353.0], [94.9, 126446.0], [95.0, 126446.0], [95.1, 126446.0], [95.2, 126446.0], [95.3, 126446.0], [95.4, 126604.0], [95.5, 126604.0], [95.6, 126604.0], [95.7, 126604.0], [95.8, 126604.0], [95.9, 126814.0], [96.0, 126814.0], [96.1, 126814.0], [96.2, 126814.0], [96.3, 127977.0], [96.4, 127977.0], [96.5, 127977.0], [96.6, 127977.0], [96.7, 127977.0], [96.8, 128006.0], [96.9, 128006.0], [97.0, 128006.0], [97.1, 128006.0], [97.2, 128006.0], [97.3, 128078.0], [97.4, 128078.0], [97.5, 128078.0], [97.6, 128078.0], [97.7, 128305.0], [97.8, 128305.0], [97.9, 128305.0], [98.0, 128305.0], [98.1, 128305.0], [98.2, 129979.0], [98.3, 129979.0], [98.4, 129979.0], [98.5, 129979.0], [98.6, 129979.0], [98.7, 130103.0], [98.8, 130103.0], [98.9, 130103.0], [99.0, 130103.0], [99.1, 134205.0], [99.2, 134205.0], [99.3, 134205.0], [99.4, 134205.0], [99.5, 134205.0], [99.6, 138206.0], [99.7, 138206.0], [99.8, 138206.0], [99.9, 138206.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[0.0, 6.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 14.0], [1.7, 14.0], [1.8, 14.0], [1.9, 14.0], [2.0, 14.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 27.0], [2.5, 27.0], [2.6, 38.0], [2.7, 38.0], [2.8, 38.0], [2.9, 38.0], [3.0, 38.0], [3.1, 68.0], [3.2, 68.0], [3.3, 68.0], [3.4, 68.0], [3.5, 68.0], [3.6, 69.0], [3.7, 69.0], [3.8, 69.0], [3.9, 69.0], [4.0, 69.0], [4.1, 69.0], [4.2, 104.0], [4.3, 104.0], [4.4, 104.0], [4.5, 104.0], [4.6, 104.0], [4.7, 107.0], [4.8, 107.0], [4.9, 107.0], [5.0, 107.0], [5.1, 107.0], [5.2, 124.0], [5.3, 124.0], [5.4, 124.0], [5.5, 124.0], [5.6, 124.0], [5.7, 144.0], [5.8, 144.0], [5.9, 144.0], [6.0, 144.0], [6.1, 144.0], [6.2, 147.0], [6.3, 147.0], [6.4, 147.0], [6.5, 147.0], [6.6, 147.0], [6.7, 151.0], [6.8, 151.0], [6.9, 151.0], [7.0, 151.0], [7.1, 151.0], [7.2, 171.0], [7.3, 171.0], [7.4, 171.0], [7.5, 171.0], [7.6, 171.0], [7.7, 174.0], [7.8, 174.0], [7.9, 174.0], [8.0, 174.0], [8.1, 174.0], [8.2, 174.0], [8.3, 194.0], [8.4, 194.0], [8.5, 194.0], [8.6, 194.0], [8.7, 194.0], [8.8, 195.0], [8.9, 195.0], [9.0, 195.0], [9.1, 195.0], [9.2, 195.0], [9.3, 197.0], [9.4, 197.0], [9.5, 197.0], [9.6, 197.0], [9.7, 197.0], [9.8, 213.0], [9.9, 213.0], [10.0, 213.0], [10.1, 213.0], [10.2, 213.0], [10.3, 214.0], [10.4, 214.0], [10.5, 214.0], [10.6, 214.0], [10.7, 214.0], [10.8, 235.0], [10.9, 235.0], [11.0, 235.0], [11.1, 235.0], [11.2, 235.0], [11.3, 257.0], [11.4, 257.0], [11.5, 257.0], [11.6, 257.0], [11.7, 257.0], [11.8, 272.0], [11.9, 272.0], [12.0, 272.0], [12.1, 272.0], [12.2, 272.0], [12.3, 272.0], [12.4, 276.0], [12.5, 276.0], [12.6, 276.0], [12.7, 276.0], [12.8, 276.0], [12.9, 291.0], [13.0, 291.0], [13.1, 291.0], [13.2, 291.0], [13.3, 291.0], [13.4, 335.0], [13.5, 335.0], [13.6, 335.0], [13.7, 335.0], [13.8, 335.0], [13.9, 335.0], [14.0, 335.0], [14.1, 335.0], [14.2, 335.0], [14.3, 335.0], [14.4, 350.0], [14.5, 350.0], [14.6, 350.0], [14.7, 350.0], [14.8, 350.0], [14.9, 375.0], [15.0, 375.0], [15.1, 375.0], [15.2, 375.0], [15.3, 375.0], [15.4, 396.0], [15.5, 396.0], [15.6, 396.0], [15.7, 396.0], [15.8, 396.0], [15.9, 425.0], [16.0, 425.0], [16.1, 425.0], [16.2, 425.0], [16.3, 425.0], [16.4, 425.0], [16.5, 458.0], [16.6, 458.0], [16.7, 458.0], [16.8, 458.0], [16.9, 458.0], [17.0, 498.0], [17.1, 498.0], [17.2, 498.0], [17.3, 498.0], [17.4, 498.0], [17.5, 560.0], [17.6, 560.0], [17.7, 560.0], [17.8, 560.0], [17.9, 560.0], [18.0, 580.0], [18.1, 580.0], [18.2, 580.0], [18.3, 580.0], [18.4, 580.0], [18.5, 754.0], [18.6, 754.0], [18.7, 754.0], [18.8, 754.0], [18.9, 754.0], [19.0, 781.0], [19.1, 781.0], [19.2, 781.0], [19.3, 781.0], [19.4, 781.0], [19.5, 866.0], [19.6, 866.0], [19.7, 866.0], [19.8, 866.0], [19.9, 866.0], [20.0, 1350.0], [20.1, 1350.0], [20.2, 1350.0], [20.3, 1350.0], [20.4, 1350.0], [20.5, 1350.0], [20.6, 15542.0], [20.7, 15542.0], [20.8, 15542.0], [20.9, 15542.0], [21.0, 15542.0], [21.1, 15699.0], [21.2, 15699.0], [21.3, 15699.0], [21.4, 15699.0], [21.5, 15699.0], [21.6, 15751.0], [21.7, 15751.0], [21.8, 15751.0], [21.9, 15751.0], [22.0, 15751.0], [22.1, 16383.0], [22.2, 16383.0], [22.3, 16383.0], [22.4, 16383.0], [22.5, 16383.0], [22.6, 16402.0], [22.7, 16402.0], [22.8, 16402.0], [22.9, 16402.0], [23.0, 16402.0], [23.1, 16819.0], [23.2, 16819.0], [23.3, 16819.0], [23.4, 16819.0], [23.5, 16819.0], [23.6, 17216.0], [23.7, 17216.0], [23.8, 17216.0], [23.9, 17216.0], [24.0, 17216.0], [24.1, 17216.0], [24.2, 17507.0], [24.3, 17507.0], [24.4, 17507.0], [24.5, 17507.0], [24.6, 17507.0], [24.7, 17573.0], [24.8, 17573.0], [24.9, 17573.0], [25.0, 17573.0], [25.1, 17573.0], [25.2, 17580.0], [25.3, 17580.0], [25.4, 17580.0], [25.5, 17580.0], [25.6, 17580.0], [25.7, 18103.0], [25.8, 18103.0], [25.9, 18103.0], [26.0, 18103.0], [26.1, 18103.0], [26.2, 20494.0], [26.3, 20494.0], [26.4, 20494.0], [26.5, 20494.0], [26.6, 20494.0], [26.7, 21022.0], [26.8, 21022.0], [26.9, 21022.0], [27.0, 21022.0], [27.1, 21022.0], [27.2, 21120.0], [27.3, 21120.0], [27.4, 21120.0], [27.5, 21120.0], [27.6, 21120.0], [27.7, 21255.0], [27.8, 21255.0], [27.9, 21255.0], [28.0, 21255.0], [28.1, 21255.0], [28.2, 21255.0], [28.3, 21657.0], [28.4, 21657.0], [28.5, 21657.0], [28.6, 21657.0], [28.7, 21657.0], [28.8, 21779.0], [28.9, 21779.0], [29.0, 21779.0], [29.1, 21779.0], [29.2, 21779.0], [29.3, 21866.0], [29.4, 21866.0], [29.5, 21866.0], [29.6, 21866.0], [29.7, 21866.0], [29.8, 21913.0], [29.9, 21913.0], [30.0, 21913.0], [30.1, 21913.0], [30.2, 21913.0], [30.3, 22285.0], [30.4, 22285.0], [30.5, 22285.0], [30.6, 22285.0], [30.7, 22285.0], [30.8, 22369.0], [30.9, 22369.0], [31.0, 22369.0], [31.1, 22369.0], [31.2, 22369.0], [31.3, 22532.0], [31.4, 22532.0], [31.5, 22532.0], [31.6, 22532.0], [31.7, 22532.0], [31.8, 22553.0], [31.9, 22553.0], [32.0, 22553.0], [32.1, 22553.0], [32.2, 22553.0], [32.3, 22553.0], [32.4, 22570.0], [32.5, 22570.0], [32.6, 22570.0], [32.7, 22570.0], [32.8, 22570.0], [32.9, 22928.0], [33.0, 22928.0], [33.1, 22928.0], [33.2, 22928.0], [33.3, 22928.0], [33.4, 22992.0], [33.5, 22992.0], [33.6, 22992.0], [33.7, 22992.0], [33.8, 22992.0], [33.9, 23066.0], [34.0, 23066.0], [34.1, 23066.0], [34.2, 23066.0], [34.3, 23066.0], [34.4, 23388.0], [34.5, 23388.0], [34.6, 23388.0], [34.7, 23388.0], [34.8, 23388.0], [34.9, 23609.0], [35.0, 23609.0], [35.1, 23609.0], [35.2, 23609.0], [35.3, 23609.0], [35.4, 23730.0], [35.5, 23730.0], [35.6, 23730.0], [35.7, 23730.0], [35.8, 23730.0], [35.9, 23847.0], [36.0, 23847.0], [36.1, 23847.0], [36.2, 23847.0], [36.3, 23847.0], [36.4, 23847.0], [36.5, 24151.0], [36.6, 24151.0], [36.7, 24151.0], [36.8, 24151.0], [36.9, 24151.0], [37.0, 24182.0], [37.1, 24182.0], [37.2, 24182.0], [37.3, 24182.0], [37.4, 24182.0], [37.5, 24190.0], [37.6, 24190.0], [37.7, 24190.0], [37.8, 24190.0], [37.9, 24190.0], [38.0, 24314.0], [38.1, 24314.0], [38.2, 24314.0], [38.3, 24314.0], [38.4, 24314.0], [38.5, 24320.0], [38.6, 24320.0], [38.7, 24320.0], [38.8, 24320.0], [38.9, 24320.0], [39.0, 24367.0], [39.1, 24367.0], [39.2, 24367.0], [39.3, 24367.0], [39.4, 24367.0], [39.5, 25114.0], [39.6, 25114.0], [39.7, 25114.0], [39.8, 25114.0], [39.9, 25114.0], [40.0, 25239.0], [40.1, 25239.0], [40.2, 25239.0], [40.3, 25239.0], [40.4, 25239.0], [40.5, 25239.0], [40.6, 25477.0], [40.7, 25477.0], [40.8, 25477.0], [40.9, 25477.0], [41.0, 25477.0], [41.1, 25490.0], [41.2, 25490.0], [41.3, 25490.0], [41.4, 25490.0], [41.5, 25490.0], [41.6, 25510.0], [41.7, 25510.0], [41.8, 25510.0], [41.9, 25510.0], [42.0, 25510.0], [42.1, 25578.0], [42.2, 25578.0], [42.3, 25578.0], [42.4, 25578.0], [42.5, 25578.0], [42.6, 25596.0], [42.7, 25596.0], [42.8, 25596.0], [42.9, 25596.0], [43.0, 25596.0], [43.1, 25602.0], [43.2, 25602.0], [43.3, 25602.0], [43.4, 25602.0], [43.5, 25602.0], [43.6, 25650.0], [43.7, 25650.0], [43.8, 25650.0], [43.9, 25650.0], [44.0, 25650.0], [44.1, 25650.0], [44.2, 25654.0], [44.3, 25654.0], [44.4, 25654.0], [44.5, 25654.0], [44.6, 25654.0], [44.7, 25655.0], [44.8, 25655.0], [44.9, 25655.0], [45.0, 25655.0], [45.1, 25655.0], [45.2, 25713.0], [45.3, 25713.0], [45.4, 25713.0], [45.5, 25713.0], [45.6, 25713.0], [45.7, 25806.0], [45.8, 25806.0], [45.9, 25806.0], [46.0, 25806.0], [46.1, 25806.0], [46.2, 25842.0], [46.3, 25842.0], [46.4, 25842.0], [46.5, 25842.0], [46.6, 25842.0], [46.7, 25885.0], [46.8, 25885.0], [46.9, 25885.0], [47.0, 25885.0], [47.1, 25885.0], [47.2, 25963.0], [47.3, 25963.0], [47.4, 25963.0], [47.5, 25963.0], [47.6, 25963.0], [47.7, 26164.0], [47.8, 26164.0], [47.9, 26164.0], [48.0, 26164.0], [48.1, 26164.0], [48.2, 26164.0], [48.3, 26500.0], [48.4, 26500.0], [48.5, 26500.0], [48.6, 26500.0], [48.7, 26500.0], [48.8, 26891.0], [48.9, 26891.0], [49.0, 26891.0], [49.1, 26891.0], [49.2, 26891.0], [49.3, 26892.0], [49.4, 26892.0], [49.5, 26892.0], [49.6, 26892.0], [49.7, 26892.0], [49.8, 26943.0], [49.9, 26943.0], [50.0, 26943.0], [50.1, 26943.0], [50.2, 26943.0], [50.3, 27180.0], [50.4, 27180.0], [50.5, 27180.0], [50.6, 27180.0], [50.7, 27180.0], [50.8, 27331.0], [50.9, 27331.0], [51.0, 27331.0], [51.1, 27331.0], [51.2, 27331.0], [51.3, 27428.0], [51.4, 27428.0], [51.5, 27428.0], [51.6, 27428.0], [51.7, 27428.0], [51.8, 27629.0], [51.9, 27629.0], [52.0, 27629.0], [52.1, 27629.0], [52.2, 27629.0], [52.3, 27629.0], [52.4, 27908.0], [52.5, 27908.0], [52.6, 27908.0], [52.7, 27908.0], [52.8, 27908.0], [52.9, 28026.0], [53.0, 28026.0], [53.1, 28026.0], [53.2, 28026.0], [53.3, 28026.0], [53.4, 28092.0], [53.5, 28092.0], [53.6, 28092.0], [53.7, 28092.0], [53.8, 28092.0], [53.9, 28266.0], [54.0, 28266.0], [54.1, 28266.0], [54.2, 28266.0], [54.3, 28266.0], [54.4, 28363.0], [54.5, 28363.0], [54.6, 28363.0], [54.7, 28363.0], [54.8, 28363.0], [54.9, 28479.0], [55.0, 28479.0], [55.1, 28479.0], [55.2, 28479.0], [55.3, 28479.0], [55.4, 28707.0], [55.5, 28707.0], [55.6, 28707.0], [55.7, 28707.0], [55.8, 28707.0], [55.9, 28849.0], [56.0, 28849.0], [56.1, 28849.0], [56.2, 28849.0], [56.3, 28849.0], [56.4, 28849.0], [56.5, 28893.0], [56.6, 28893.0], [56.7, 28893.0], [56.8, 28893.0], [56.9, 28893.0], [57.0, 28917.0], [57.1, 28917.0], [57.2, 28917.0], [57.3, 28917.0], [57.4, 28917.0], [57.5, 29102.0], [57.6, 29102.0], [57.7, 29102.0], [57.8, 29102.0], [57.9, 29102.0], [58.0, 29150.0], [58.1, 29150.0], [58.2, 29150.0], [58.3, 29150.0], [58.4, 29150.0], [58.5, 29492.0], [58.6, 29492.0], [58.7, 29492.0], [58.8, 29492.0], [58.9, 29492.0], [59.0, 29577.0], [59.1, 29577.0], [59.2, 29577.0], [59.3, 29577.0], [59.4, 29577.0], [59.5, 29673.0], [59.6, 29673.0], [59.7, 29673.0], [59.8, 29673.0], [59.9, 29673.0], [60.0, 29830.0], [60.1, 29830.0], [60.2, 29830.0], [60.3, 29830.0], [60.4, 29830.0], [60.5, 29830.0], [60.6, 31191.0], [60.7, 31191.0], [60.8, 31191.0], [60.9, 31191.0], [61.0, 31191.0], [61.1, 31240.0], [61.2, 31240.0], [61.3, 31240.0], [61.4, 31240.0], [61.5, 31240.0], [61.6, 31362.0], [61.7, 31362.0], [61.8, 31362.0], [61.9, 31362.0], [62.0, 31362.0], [62.1, 31520.0], [62.2, 31520.0], [62.3, 31520.0], [62.4, 31520.0], [62.5, 31520.0], [62.6, 31573.0], [62.7, 31573.0], [62.8, 31573.0], [62.9, 31573.0], [63.0, 31573.0], [63.1, 31740.0], [63.2, 31740.0], [63.3, 31740.0], [63.4, 31740.0], [63.5, 31740.0], [63.6, 31936.0], [63.7, 31936.0], [63.8, 31936.0], [63.9, 31936.0], [64.0, 31936.0], [64.1, 31936.0], [64.2, 32027.0], [64.3, 32027.0], [64.4, 32027.0], [64.5, 32027.0], [64.6, 32027.0], [64.7, 32433.0], [64.8, 32433.0], [64.9, 32433.0], [65.0, 32433.0], [65.1, 32433.0], [65.2, 32991.0], [65.3, 32991.0], [65.4, 32991.0], [65.5, 32991.0], [65.6, 32991.0], [65.7, 33181.0], [65.8, 33181.0], [65.9, 33181.0], [66.0, 33181.0], [66.1, 33181.0], [66.2, 33377.0], [66.3, 33377.0], [66.4, 33377.0], [66.5, 33377.0], [66.6, 33377.0], [66.7, 33816.0], [66.8, 33816.0], [66.9, 33816.0], [67.0, 33816.0], [67.1, 33816.0], [67.2, 34259.0], [67.3, 34259.0], [67.4, 34259.0], [67.5, 34259.0], [67.6, 34259.0], [67.7, 34606.0], [67.8, 34606.0], [67.9, 34606.0], [68.0, 34606.0], [68.1, 34606.0], [68.2, 34606.0], [68.3, 34877.0], [68.4, 34877.0], [68.5, 34877.0], [68.6, 34877.0], [68.7, 34877.0], [68.8, 35360.0], [68.9, 35360.0], [69.0, 35360.0], [69.1, 35360.0], [69.2, 35360.0], [69.3, 35806.0], [69.4, 35806.0], [69.5, 35806.0], [69.6, 35806.0], [69.7, 35806.0], [69.8, 35929.0], [69.9, 35929.0], [70.0, 35929.0], [70.1, 35929.0], [70.2, 35929.0], [70.3, 36336.0], [70.4, 36336.0], [70.5, 36336.0], [70.6, 36336.0], [70.7, 36336.0], [70.8, 37138.0], [70.9, 37138.0], [71.0, 37138.0], [71.1, 37138.0], [71.2, 37138.0], [71.3, 37156.0], [71.4, 37156.0], [71.5, 37156.0], [71.6, 37156.0], [71.7, 37156.0], [71.8, 37745.0], [71.9, 37745.0], [72.0, 37745.0], [72.1, 37745.0], [72.2, 37745.0], [72.3, 37745.0], [72.4, 38834.0], [72.5, 38834.0], [72.6, 38834.0], [72.7, 38834.0], [72.8, 38834.0], [72.9, 39168.0], [73.0, 39168.0], [73.1, 39168.0], [73.2, 39168.0], [73.3, 39168.0], [73.4, 39344.0], [73.5, 39344.0], [73.6, 39344.0], [73.7, 39344.0], [73.8, 39344.0], [73.9, 39437.0], [74.0, 39437.0], [74.1, 39437.0], [74.2, 39437.0], [74.3, 39437.0], [74.4, 39785.0], [74.5, 39785.0], [74.6, 39785.0], [74.7, 39785.0], [74.8, 39785.0], [74.9, 39952.0], [75.0, 39952.0], [75.1, 39952.0], [75.2, 39952.0], [75.3, 39952.0], [75.4, 40938.0], [75.5, 40938.0], [75.6, 40938.0], [75.7, 40938.0], [75.8, 40938.0], [75.9, 41053.0], [76.0, 41053.0], [76.1, 41053.0], [76.2, 41053.0], [76.3, 41053.0], [76.4, 41053.0], [76.5, 41177.0], [76.6, 41177.0], [76.7, 41177.0], [76.8, 41177.0], [76.9, 41177.0], [77.0, 41214.0], [77.1, 41214.0], [77.2, 41214.0], [77.3, 41214.0], [77.4, 41214.0], [77.5, 41622.0], [77.6, 41622.0], [77.7, 41622.0], [77.8, 41622.0], [77.9, 41622.0], [78.0, 41944.0], [78.1, 41944.0], [78.2, 41944.0], [78.3, 41944.0], [78.4, 41944.0], [78.5, 42003.0], [78.6, 42003.0], [78.7, 42003.0], [78.8, 42003.0], [78.9, 42003.0], [79.0, 42017.0], [79.1, 42017.0], [79.2, 42017.0], [79.3, 42017.0], [79.4, 42017.0], [79.5, 42082.0], [79.6, 42082.0], [79.7, 42082.0], [79.8, 42082.0], [79.9, 42082.0], [80.0, 42197.0], [80.1, 42197.0], [80.2, 42197.0], [80.3, 42197.0], [80.4, 42197.0], [80.5, 42197.0], [80.6, 42371.0], [80.7, 42371.0], [80.8, 42371.0], [80.9, 42371.0], [81.0, 42371.0], [81.1, 42471.0], [81.2, 42471.0], [81.3, 42471.0], [81.4, 42471.0], [81.5, 42471.0], [81.6, 42729.0], [81.7, 42729.0], [81.8, 42729.0], [81.9, 42729.0], [82.0, 42729.0], [82.1, 42756.0], [82.2, 42756.0], [82.3, 42756.0], [82.4, 42756.0], [82.5, 42756.0], [82.6, 42840.0], [82.7, 42840.0], [82.8, 42840.0], [82.9, 42840.0], [83.0, 42840.0], [83.1, 43026.0], [83.2, 43026.0], [83.3, 43026.0], [83.4, 43026.0], [83.5, 43026.0], [83.6, 43361.0], [83.7, 43361.0], [83.8, 43361.0], [83.9, 43361.0], [84.0, 43361.0], [84.1, 43361.0], [84.2, 43467.0], [84.3, 43467.0], [84.4, 43467.0], [84.5, 43467.0], [84.6, 43467.0], [84.7, 43589.0], [84.8, 43589.0], [84.9, 43589.0], [85.0, 43589.0], [85.1, 43589.0], [85.2, 43620.0], [85.3, 43620.0], [85.4, 43620.0], [85.5, 43620.0], [85.6, 43620.0], [85.7, 43679.0], [85.8, 43679.0], [85.9, 43679.0], [86.0, 43679.0], [86.1, 43679.0], [86.2, 44060.0], [86.3, 44060.0], [86.4, 44060.0], [86.5, 44060.0], [86.6, 44060.0], [86.7, 44267.0], [86.8, 44267.0], [86.9, 44267.0], [87.0, 44267.0], [87.1, 44267.0], [87.2, 44602.0], [87.3, 44602.0], [87.4, 44602.0], [87.5, 44602.0], [87.6, 44602.0], [87.7, 44662.0], [87.8, 44662.0], [87.9, 44662.0], [88.0, 44662.0], [88.1, 44662.0], [88.2, 44662.0], [88.3, 44726.0], [88.4, 44726.0], [88.5, 44726.0], [88.6, 44726.0], [88.7, 44726.0], [88.8, 44874.0], [88.9, 44874.0], [89.0, 44874.0], [89.1, 44874.0], [89.2, 44874.0], [89.3, 44986.0], [89.4, 44986.0], [89.5, 44986.0], [89.6, 44986.0], [89.7, 44986.0], [89.8, 45437.0], [89.9, 45437.0], [90.0, 45437.0], [90.1, 45437.0], [90.2, 45437.0], [90.3, 45845.0], [90.4, 45845.0], [90.5, 45845.0], [90.6, 45845.0], [90.7, 45845.0], [90.8, 46063.0], [90.9, 46063.0], [91.0, 46063.0], [91.1, 46063.0], [91.2, 46063.0], [91.3, 46769.0], [91.4, 46769.0], [91.5, 46769.0], [91.6, 46769.0], [91.7, 46769.0], [91.8, 47074.0], [91.9, 47074.0], [92.0, 47074.0], [92.1, 47074.0], [92.2, 47074.0], [92.3, 47074.0], [92.4, 47121.0], [92.5, 47121.0], [92.6, 47121.0], [92.7, 47121.0], [92.8, 47121.0], [92.9, 47234.0], [93.0, 47234.0], [93.1, 47234.0], [93.2, 47234.0], [93.3, 47234.0], [93.4, 47321.0], [93.5, 47321.0], [93.6, 47321.0], [93.7, 47321.0], [93.8, 47321.0], [93.9, 47859.0], [94.0, 47859.0], [94.1, 47859.0], [94.2, 47859.0], [94.3, 47859.0], [94.4, 47965.0], [94.5, 47965.0], [94.6, 47965.0], [94.7, 47965.0], [94.8, 47965.0], [94.9, 48669.0], [95.0, 48669.0], [95.1, 48669.0], [95.2, 48669.0], [95.3, 48669.0], [95.4, 49129.0], [95.5, 49129.0], [95.6, 49129.0], [95.7, 49129.0], [95.8, 49129.0], [95.9, 49507.0], [96.0, 49507.0], [96.1, 49507.0], [96.2, 49507.0], [96.3, 49507.0], [96.4, 49507.0], [96.5, 49564.0], [96.6, 49564.0], [96.7, 49564.0], [96.8, 49564.0], [96.9, 49564.0], [97.0, 49597.0], [97.1, 49597.0], [97.2, 49597.0], [97.3, 49597.0], [97.4, 49597.0], [97.5, 52986.0], [97.6, 52986.0], [97.7, 52986.0], [97.8, 52986.0], [97.9, 52986.0], [98.0, 53996.0], [98.1, 53996.0], [98.2, 53996.0], [98.3, 53996.0], [98.4, 53996.0], [98.5, 63973.0], [98.6, 63973.0], [98.7, 63973.0], [98.8, 63973.0], [98.9, 63973.0], [99.0, 67325.0], [99.1, 67325.0], [99.2, 67325.0], [99.3, 67325.0], [99.4, 67325.0], [99.5, 68300.0], [99.6, 68300.0], [99.7, 68300.0], [99.8, 68300.0], [99.9, 68300.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15.0, "series": [{"data": [[0.0, 5.0], [149600.0, 1.0], [151200.0, 1.0], [152000.0, 1.0], [133700.0, 1.0], [142500.0, 1.0], [148100.0, 1.0], [149700.0, 1.0], [156100.0, 1.0], [66300.0, 2.0], [65900.0, 1.0], [75900.0, 1.0], [74700.0, 1.0], [79900.0, 1.0], [79100.0, 1.0], [77900.0, 1.0], [82700.0, 1.0], [82300.0, 1.0], [85100.0, 1.0], [93900.0, 1.0], [97500.0, 1.0], [94700.0, 1.0], [104700.0, 1.0], [142600.0, 1.0], [146600.0, 1.0], [148200.0, 1.0], [149800.0, 1.0], [100.0, 1.0], [145100.0, 1.0], [146700.0, 1.0], [35900.0, 1.0], [149900.0, 2.0], [151500.0, 2.0], [40900.0, 1.0], [40700.0, 1.0], [40500.0, 1.0], [39100.0, 2.0], [42300.0, 1.0], [44100.0, 1.0], [44500.0, 1.0], [45100.0, 1.0], [200.0, 2.0], [63300.0, 1.0], [63100.0, 2.0], [64700.0, 1.0], [63700.0, 1.0], [69400.0, 1.0], [67800.0, 1.0], [68600.0, 1.0], [300.0, 5.0], [74200.0, 1.0], [75800.0, 1.0], [79800.0, 1.0], [81000.0, 1.0], [81800.0, 1.0], [83800.0, 1.0], [84200.0, 1.0], [84600.0, 1.0], [88200.0, 1.0], [93400.0, 1.0], [95000.0, 1.0], [98600.0, 1.0], [400.0, 5.0], [500.0, 3.0], [146800.0, 1.0], [150800.0, 3.0], [600.0, 5.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 1.0], [1300.0, 1.0], [145300.0, 1.0], [146900.0, 1.0], [150100.0, 2.0], [150900.0, 4.0], [3300.0, 2.0], [3700.0, 1.0], [4300.0, 2.0], [68500.0, 1.0], [66500.0, 1.0], [68900.0, 2.0], [69300.0, 2.0], [73300.0, 1.0], [69700.0, 1.0], [75700.0, 1.0], [74900.0, 4.0], [77700.0, 1.0], [77300.0, 2.0], [74100.0, 1.0], [76900.0, 1.0], [78100.0, 2.0], [84900.0, 1.0], [88500.0, 1.0], [86900.0, 1.0], [87300.0, 1.0], [86100.0, 2.0], [90900.0, 1.0], [95300.0, 1.0], [99300.0, 1.0], [140600.0, 1.0], [147800.0, 2.0], [150200.0, 1.0], [151000.0, 2.0], [151800.0, 2.0], [167000.0, 1.0], [24100.0, 1.0], [27800.0, 1.0], [28400.0, 1.0], [28000.0, 1.0], [31300.0, 1.0], [31400.0, 1.0], [32000.0, 1.0], [31800.0, 1.0], [137500.0, 1.0], [33600.0, 1.0], [146300.0, 1.0], [147900.0, 1.0], [151100.0, 5.0], [37400.0, 1.0], [40400.0, 1.0], [40800.0, 1.0], [39200.0, 1.0], [40200.0, 1.0], [42800.0, 1.0], [42400.0, 1.0], [44800.0, 2.0], [44400.0, 1.0], [43400.0, 1.0], [49800.0, 1.0], [58600.0, 1.0], [60400.0, 1.0], [59800.0, 1.0], [61600.0, 2.0], [63400.0, 1.0], [63200.0, 2.0], [64200.0, 1.0], [64400.0, 1.0], [64800.0, 1.0], [65000.0, 1.0], [69600.0, 1.0], [65600.0, 1.0], [67600.0, 1.0], [72800.0, 2.0], [73600.0, 1.0], [70800.0, 1.0], [71600.0, 2.0], [77200.0, 1.0], [74400.0, 1.0], [76400.0, 1.0], [80000.0, 1.0], [80800.0, 1.0], [82000.0, 1.0], [86400.0, 1.0], [88800.0, 1.0], [96400.0, 1.0], [97600.0, 1.0], [97200.0, 1.0], [99200.0, 1.0], [101200.0, 1.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[0.0, 15.0], [95500.0, 1.0], [113500.0, 1.0], [111100.0, 1.0], [118700.0, 1.0], [119500.0, 1.0], [123900.0, 2.0], [124700.0, 1.0], [125900.0, 1.0], [126300.0, 1.0], [125500.0, 1.0], [125100.0, 1.0], [128300.0, 1.0], [129900.0, 1.0], [127900.0, 1.0], [100.0, 11.0], [33300.0, 1.0], [40700.0, 1.0], [40500.0, 1.0], [39100.0, 2.0], [41700.0, 1.0], [42300.0, 1.0], [43500.0, 1.0], [44100.0, 1.0], [44500.0, 1.0], [44300.0, 1.0], [45700.0, 2.0], [46700.0, 1.0], [45100.0, 1.0], [48700.0, 2.0], [47300.0, 1.0], [47500.0, 1.0], [48500.0, 2.0], [49100.0, 1.0], [49700.0, 2.0], [49500.0, 1.0], [49300.0, 1.0], [49900.0, 1.0], [50300.0, 2.0], [50700.0, 1.0], [52700.0, 2.0], [200.0, 9.0], [51500.0, 2.0], [51300.0, 1.0], [51700.0, 2.0], [52100.0, 1.0], [51900.0, 1.0], [54500.0, 1.0], [89000.0, 1.0], [99000.0, 1.0], [106200.0, 1.0], [400.0, 1.0], [117000.0, 1.0], [118200.0, 1.0], [119000.0, 2.0], [121800.0, 1.0], [125800.0, 1.0], [124200.0, 2.0], [123000.0, 2.0], [126600.0, 1.0], [500.0, 3.0], [600.0, 2.0], [700.0, 1.0], [1000.0, 1.0], [2600.0, 1.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [4000.0, 2.0], [114100.0, 1.0], [111700.0, 1.0], [125700.0, 1.0], [123700.0, 1.0], [130100.0, 1.0], [134200.0, 1.0], [138200.0, 1.0], [12000.0, 1.0], [12500.0, 1.0], [12700.0, 1.0], [20300.0, 1.0], [21100.0, 1.0], [22900.0, 1.0], [23500.0, 2.0], [24300.0, 1.0], [23600.0, 1.0], [23700.0, 1.0], [23900.0, 1.0], [25300.0, 1.0], [25400.0, 2.0], [24800.0, 1.0], [25100.0, 1.0], [26300.0, 1.0], [26100.0, 1.0], [27100.0, 1.0], [27400.0, 1.0], [28700.0, 1.0], [30600.0, 1.0], [30700.0, 1.0], [30200.0, 1.0], [31600.0, 1.0], [31200.0, 1.0], [32700.0, 1.0], [32200.0, 1.0], [32400.0, 1.0], [32500.0, 1.0], [32800.0, 1.0], [33800.0, 1.0], [33600.0, 1.0], [38400.0, 1.0], [37400.0, 1.0], [38000.0, 1.0], [38200.0, 1.0], [37200.0, 1.0], [40600.0, 1.0], [40000.0, 1.0], [39200.0, 1.0], [39400.0, 1.0], [42200.0, 1.0], [41800.0, 1.0], [42800.0, 1.0], [42400.0, 1.0], [43200.0, 1.0], [43400.0, 1.0], [46800.0, 1.0], [45200.0, 1.0], [47600.0, 2.0], [47200.0, 1.0], [48400.0, 1.0], [49400.0, 1.0], [49800.0, 2.0], [49600.0, 1.0], [50600.0, 2.0], [50400.0, 2.0], [50000.0, 1.0], [52200.0, 1.0], [51800.0, 5.0], [52000.0, 1.0], [51600.0, 1.0], [53200.0, 1.0], [52400.0, 1.0], [52600.0, 1.0], [54400.0, 1.0], [55200.0, 1.0], [56600.0, 1.0], [60200.0, 1.0], [114000.0, 1.0], [121200.0, 1.0], [122400.0, 2.0], [120800.0, 1.0], [126800.0, 1.0], [126400.0, 1.0], [125200.0, 1.0], [125600.0, 1.0], [128000.0, 2.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[0.0, 8.0], [68300.0, 1.0], [100.0, 11.0], [33100.0, 1.0], [32900.0, 1.0], [33300.0, 1.0], [36300.0, 1.0], [35300.0, 1.0], [35900.0, 1.0], [37700.0, 1.0], [37100.0, 2.0], [39100.0, 1.0], [39700.0, 1.0], [40900.0, 1.0], [39900.0, 1.0], [39300.0, 1.0], [41900.0, 1.0], [42700.0, 2.0], [42100.0, 1.0], [42300.0, 1.0], [41100.0, 1.0], [44700.0, 1.0], [43300.0, 1.0], [44900.0, 1.0], [43500.0, 1.0], [47100.0, 1.0], [46700.0, 1.0], [49100.0, 1.0], [47900.0, 1.0], [47300.0, 1.0], [49500.0, 3.0], [200.0, 7.0], [52900.0, 1.0], [53900.0, 1.0], [63900.0, 1.0], [300.0, 5.0], [400.0, 3.0], [500.0, 2.0], [700.0, 2.0], [800.0, 1.0], [1300.0, 1.0], [67300.0, 1.0], [15500.0, 1.0], [15700.0, 1.0], [15600.0, 1.0], [16300.0, 1.0], [16800.0, 1.0], [17200.0, 1.0], [16400.0, 1.0], [17500.0, 3.0], [18100.0, 1.0], [20400.0, 1.0], [21000.0, 1.0], [21200.0, 1.0], [21100.0, 1.0], [22500.0, 3.0], [21900.0, 1.0], [22200.0, 1.0], [21600.0, 1.0], [21700.0, 1.0], [22300.0, 1.0], [21800.0, 1.0], [22900.0, 2.0], [23000.0, 1.0], [23300.0, 1.0], [24300.0, 3.0], [24100.0, 3.0], [23600.0, 1.0], [23700.0, 1.0], [23800.0, 1.0], [25100.0, 1.0], [25400.0, 2.0], [25500.0, 3.0], [25200.0, 1.0], [25700.0, 1.0], [25600.0, 4.0], [26100.0, 1.0], [25800.0, 3.0], [26500.0, 1.0], [25900.0, 1.0], [27300.0, 1.0], [26900.0, 1.0], [26800.0, 2.0], [27400.0, 1.0], [27100.0, 1.0], [27600.0, 1.0], [28000.0, 2.0], [28200.0, 1.0], [27900.0, 1.0], [28400.0, 1.0], [28300.0, 1.0], [29100.0, 2.0], [28800.0, 2.0], [29400.0, 1.0], [28700.0, 1.0], [29600.0, 1.0], [29500.0, 1.0], [28900.0, 1.0], [29800.0, 1.0], [31100.0, 1.0], [31200.0, 1.0], [31500.0, 2.0], [31700.0, 1.0], [31300.0, 1.0], [31900.0, 1.0], [32400.0, 1.0], [32000.0, 1.0], [34800.0, 1.0], [33800.0, 1.0], [34200.0, 1.0], [34600.0, 1.0], [35800.0, 1.0], [38800.0, 1.0], [39400.0, 1.0], [41600.0, 1.0], [42000.0, 3.0], [41200.0, 1.0], [42800.0, 1.0], [41000.0, 1.0], [42400.0, 1.0], [43000.0, 1.0], [44800.0, 1.0], [44600.0, 2.0], [43400.0, 1.0], [44200.0, 1.0], [43600.0, 2.0], [44000.0, 1.0], [45800.0, 1.0], [46000.0, 1.0], [47000.0, 1.0], [45400.0, 1.0], [47200.0, 1.0], [47800.0, 1.0], [48600.0, 1.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 167000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 72.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 387.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 72.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 387.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 14.859999999999998, "minX": 1.61628054E12, "maxY": 50.0, "series": [{"data": [[1.6162809E12, 14.859999999999998], [1.61628072E12, 50.0], [1.61628078E12, 50.0], [1.6162806E12, 50.0], [1.61628066E12, 50.0], [1.61628054E12, 50.0], [1.61628084E12, 46.026666666666664]], "isOverall": false, "label": "Thread Group 50", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6162809E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 23837.198795180717, "minX": 1.0, "maxY": 88297.0, "series": [{"data": [[33.0, 66586.0], [32.0, 68907.0], [2.0, 66370.0], [35.0, 65615.0], [34.0, 68592.0], [37.0, 63722.0], [36.0, 63207.0], [39.0, 60769.5], [41.0, 76992.0], [40.0, 84649.0], [43.0, 76045.5], [45.0, 69644.0], [44.0, 40927.0], [47.0, 70859.0], [46.0, 71644.0], [49.0, 88297.0], [48.0, 64831.0], [3.0, 39173.0], [50.0, 78760.97590361442], [10.0, 40208.0], [11.0, 39283.0], [12.0, 41321.0], [13.0, 38325.0], [14.0, 53808.5], [15.0, 31513.0], [16.0, 67685.0], [1.0, 28064.0], [17.0, 68986.0], [18.0, 72887.0], [21.0, 41462.666666666664], [22.0, 40598.0], [23.0, 42869.0], [24.0, 69317.0], [25.0, 68617.0], [26.0, 40705.0], [27.0, 69743.0], [28.0, 42336.0], [29.0, 69336.0], [30.0, 65017.0], [31.0, 44512.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[44.52558139534884, 73545.5395348837]], "isOverall": false, "label": "SELECT Test-Aggregated", "isController": true}, {"data": [[39.0, 44195.0], [10.0, 39407.0], [44.0, 40745.0], [11.0, 39271.0], [12.0, 41307.5], [3.0, 39173.0], [50.0, 50620.11282051285], [13.0, 36842.5], [15.0, 31462.5], [1.0, 27450.0], [21.0, 41354.333333333336], [22.0, 40596.0], [23.0, 42867.0], [26.0, 40688.0], [28.0, 42318.0], [31.0, 44510.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[47.120930232558145, 49560.13953488371]], "isOverall": false, "label": "(POST) Admin Login-Aggregated", "isController": false}, {"data": [[33.0, 41214.0], [32.0, 42840.0], [2.0, 41177.0], [35.0, 42003.0], [34.0, 42197.0], [37.0, 39952.0], [36.0, 42082.0], [39.0, 43679.0], [41.0, 42756.0], [40.0, 42729.0], [43.0, 42602.5], [45.0, 38834.0], [47.0, 37156.0], [46.0, 39785.0], [49.0, 37745.0], [48.0, 35360.0], [50.0, 23837.198795180717], [14.0, 37470.333333333336], [15.0, 31362.0], [16.0, 44060.0], [17.0, 45437.0], [18.0, 42371.0], [24.0, 43026.0], [25.0, 43589.0], [27.0, 42471.0], [29.0, 43620.0], [30.0, 41053.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}, {"data": [[47.14358974358973, 26364.558974358963]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 71121.98333333334, "minX": 1.61628054E12, "maxY": 1.8946017005E8, "series": [{"data": [[1.6162809E12, 4619715.4], [1.61628072E12, 6912749.466666667], [1.61628078E12, 4972647.266666667], [1.6162806E12, 199584.13333333333], [1.61628066E12, 1.8946017005E8], [1.61628054E12, 1.2059212833333334E7], [1.61628084E12, 9275765.983333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6162809E12, 1092520.4333333333], [1.61628072E12, 1956537.6], [1.61628078E12, 1325165.4166666667], [1.6162806E12, 77205.73333333334], [1.61628066E12, 1325306.6], [1.61628054E12, 71121.98333333334], [1.61628084E12, 2675093.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6162809E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12427.666666666666, "minX": 1.61628054E12, "maxY": 139438.6, "series": [{"data": [[1.6162809E12, 46728.72], [1.61628072E12, 96144.64788732394], [1.61628078E12, 63852.754385964916], [1.6162806E12, 78960.33333333333], [1.61628066E12, 139438.6], [1.61628084E12, 60076.333333333336]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.6162809E12, 38136.799999999996], [1.61628072E12, 29200.378787878788], [1.61628078E12, 27691.205882352948], [1.61628066E12, 117166.44000000003], [1.61628054E12, 12427.666666666666], [1.61628084E12, 28064.82978723404]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.6162809E12, 40343.299999999996], [1.61628072E12, 20081.943661971836], [1.61628078E12, 27035.631578947363], [1.6162806E12, 66532.66666666667], [1.61628066E12, 38746.0], [1.61628084E12, 28111.816326530618]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6162809E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61628054E12, "maxY": 12764.333333333334, "series": [{"data": [[1.6162809E12, 0.0], [1.61628072E12, 0.0], [1.61628078E12, 0.0], [1.6162806E12, 0.0], [1.61628066E12, 0.0], [1.61628084E12, 0.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.6162809E12, 507.8666666666667], [1.61628072E12, 959.318181818182], [1.61628078E12, 1764.205882352941], [1.61628066E12, 4910.759999999999], [1.61628054E12, 549.3333333333334], [1.61628084E12, 776.4255319148934]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.6162809E12, 1916.0], [1.61628072E12, 985.5352112676053], [1.61628078E12, 2000.333333333333], [1.6162806E12, 12764.333333333334], [1.61628066E12, 667.6], [1.61628084E12, 1025.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6162809E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61628054E12, "maxY": 1134.6000000000001, "series": [{"data": [[1.6162809E12, 0.0], [1.61628072E12, 0.0], [1.61628078E12, 0.0], [1.6162806E12, 0.0], [1.61628066E12, 0.0], [1.61628084E12, 0.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.6162809E12, 295.26666666666665], [1.61628072E12, 170.48484848484847], [1.61628078E12, 137.5], [1.61628066E12, 33.74], [1.61628054E12, 22.0], [1.61628084E12, 151.04255319148936]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.6162809E12, 1134.6000000000001], [1.61628072E12, 139.6901408450704], [1.61628078E12, 162.19298245614036], [1.6162806E12, 13.333333333333334], [1.61628066E12, 177.6], [1.61628084E12, 131.14285714285717]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6162809E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12000.0, "minX": 1.61628054E12, "maxY": 138206.0, "series": [{"data": [[1.61628072E12, 34877.0], [1.61628078E12, 20494.0], [1.6162806E12, 68300.0], [1.61628066E12, 138206.0], [1.61628054E12, 12751.0], [1.61628084E12, 23559.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61628072E12, 24320.0], [1.61628078E12, 15751.0], [1.6162806E12, 63973.0], [1.61628066E12, 29102.0], [1.61628054E12, 12000.0], [1.61628084E12, 21119.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61628072E12, 114089.5], [1.61628078E12, 113972.5], [1.6162806E12, 68300.0], [1.61628066E12, 128100.7], [1.61628054E12, 12751.0], [1.61628084E12, 113621.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61628072E12, 117088.0], [1.61628078E12, 117088.0], [1.6162806E12, 68300.0], [1.61628066E12, 138206.0], [1.61628054E12, 12751.0], [1.61628084E12, 117088.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61628072E12, 116941.0], [1.61628078E12, 116647.0], [1.6162806E12, 68300.0], [1.61628066E12, 130308.09999999999], [1.61628054E12, 12751.0], [1.61628084E12, 115764.99999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61628084E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 28871.0, "minX": 1000.0, "maxY": 118502.0, "series": [{"data": [[1000.0, 118502.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3000.0, 49401.0], [6000.0, 39173.0], [1000.0, 28871.0], [2000.0, 40402.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 6000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1000.0, "maxY": 3060.0, "series": [{"data": [[1000.0, 3060.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3000.0, 1018.0], [6000.0, 15.0], [1000.0, 645.0], [2000.0, 57.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 6000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61628054E12, "maxY": 2.433333333333333, "series": [{"data": [[1.61628072E12, 1.8166666666666667], [1.61628078E12, 2.433333333333333], [1.6162806E12, 0.05], [1.61628066E12, 0.9], [1.61628054E12, 0.8833333333333333], [1.61628084E12, 1.5666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61628084E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.61628054E12, "maxY": 1.7333333333333334, "series": [{"data": [[1.6162809E12, 0.7833333333333333], [1.61628072E12, 1.5166666666666666], [1.61628078E12, 1.0666666666666667], [1.6162806E12, 0.05], [1.61628066E12, 0.9166666666666666], [1.61628054E12, 0.05], [1.61628084E12, 1.7333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6162809E12, 0.05], [1.61628072E12, 0.7666666666666667], [1.61628078E12, 0.45], [1.61628084E12, 0.26666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.NoRouteToHostException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6162809E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61628054E12, "maxY": 1.1166666666666667, "series": [{"data": [[1.61628072E12, 0.06666666666666667], [1.61628078E12, 0.03333333333333333], [1.6162806E12, 0.05], [1.61628066E12, 0.06666666666666667], [1.61628084E12, 0.06666666666666667]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-success", "isController": false}, {"data": [[1.6162809E12, 0.16666666666666666], [1.61628072E12, 1.1166666666666667], [1.61628078E12, 0.9166666666666666], [1.61628066E12, 0.016666666666666666], [1.61628084E12, 0.75]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-failure", "isController": false}, {"data": [[1.6162809E12, 0.4166666666666667], [1.61628072E12, 1.1166666666666667], [1.61628078E12, 0.95], [1.61628066E12, 0.016666666666666666], [1.61628084E12, 0.9]], "isOverall": false, "label": "SELECT Test-failure", "isController": true}, {"data": [[1.61628072E12, 0.06666666666666667], [1.6162806E12, 0.05], [1.61628066E12, 0.06666666666666667]], "isOverall": false, "label": "SELECT Test-success", "isController": true}, {"data": [[1.61628066E12, 0.8333333333333334], [1.61628054E12, 0.05], [1.61628084E12, 0.03333333333333333]], "isOverall": false, "label": "(POST) Admin Login-success", "isController": false}, {"data": [[1.6162809E12, 0.25], [1.61628072E12, 1.1], [1.61628078E12, 0.5666666666666667], [1.61628084E12, 0.75]], "isOverall": false, "label": "(POST) Admin Login-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6162809E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61628054E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.61628072E12, 0.13333333333333333], [1.61628078E12, 0.03333333333333333], [1.6162806E12, 0.1], [1.61628066E12, 0.9666666666666667], [1.61628054E12, 0.05], [1.61628084E12, 0.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6162809E12, 0.8333333333333334], [1.61628072E12, 3.3333333333333335], [1.61628078E12, 2.433333333333333], [1.61628066E12, 0.03333333333333333], [1.61628084E12, 2.4]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6162809E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

