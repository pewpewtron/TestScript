/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2214.0, "minX": 0.0, "maxY": 23979.0, "series": [{"data": [[0.0, 2649.0], [0.1, 2649.0], [0.2, 2728.0], [0.3, 2729.0], [0.4, 2729.0], [0.5, 2736.0], [0.6, 2799.0], [0.7, 2799.0], [0.8, 2814.0], [0.9, 2850.0], [1.0, 2894.0], [1.1, 2894.0], [1.2, 2914.0], [1.3, 2955.0], [1.4, 2955.0], [1.5, 2960.0], [1.6, 2961.0], [1.7, 2961.0], [1.8, 3228.0], [1.9, 3471.0], [2.0, 3696.0], [2.1, 3696.0], [2.2, 4111.0], [2.3, 5415.0], [2.4, 5415.0], [2.5, 5417.0], [2.6, 5419.0], [2.7, 5419.0], [2.8, 5436.0], [2.9, 5440.0], [3.0, 5446.0], [3.1, 5446.0], [3.2, 5465.0], [3.3, 5474.0], [3.4, 5474.0], [3.5, 5482.0], [3.6, 5490.0], [3.7, 5490.0], [3.8, 5491.0], [3.9, 5494.0], [4.0, 5497.0], [4.1, 5497.0], [4.2, 5502.0], [4.3, 5505.0], [4.4, 5505.0], [4.5, 5519.0], [4.6, 5519.0], [4.7, 5519.0], [4.8, 5533.0], [4.9, 5534.0], [5.0, 5535.0], [5.1, 5535.0], [5.2, 5538.0], [5.3, 5550.0], [5.4, 5550.0], [5.5, 5551.0], [5.6, 5552.0], [5.7, 5552.0], [5.8, 5556.0], [5.9, 5559.0], [6.0, 5559.0], [6.1, 5559.0], [6.2, 5560.0], [6.3, 5560.0], [6.4, 5560.0], [6.5, 5563.0], [6.6, 5566.0], [6.7, 5566.0], [6.8, 5567.0], [6.9, 5567.0], [7.0, 5567.0], [7.1, 5568.0], [7.2, 5572.0], [7.3, 5577.0], [7.4, 5577.0], [7.5, 5578.0], [7.6, 5581.0], [7.7, 5581.0], [7.8, 5583.0], [7.9, 5592.0], [8.0, 5592.0], [8.1, 5593.0], [8.2, 5595.0], [8.3, 5597.0], [8.4, 5597.0], [8.5, 5599.0], [8.6, 5600.0], [8.7, 5600.0], [8.8, 5600.0], [8.9, 5608.0], [9.0, 5608.0], [9.1, 5608.0], [9.2, 5613.0], [9.3, 5615.0], [9.4, 5615.0], [9.5, 5619.0], [9.6, 5621.0], [9.7, 5621.0], [9.8, 5622.0], [9.9, 5624.0], [10.0, 5624.0], [10.1, 5628.0], [10.2, 5632.0], [10.3, 5633.0], [10.4, 5633.0], [10.5, 5634.0], [10.6, 5635.0], [10.7, 5635.0], [10.8, 5636.0], [10.9, 5636.0], [11.0, 5637.0], [11.1, 5637.0], [11.2, 5640.0], [11.3, 5642.0], [11.4, 5642.0], [11.5, 5643.0], [11.6, 5644.0], [11.7, 5644.0], [11.8, 5644.0], [11.9, 5644.0], [12.0, 5646.0], [12.1, 5646.0], [12.2, 5646.0], [12.3, 5651.0], [12.4, 5651.0], [12.5, 5652.0], [12.6, 5653.0], [12.7, 5653.0], [12.8, 5653.0], [12.9, 5654.0], [13.0, 5655.0], [13.1, 5655.0], [13.2, 5655.0], [13.3, 5656.0], [13.4, 5656.0], [13.5, 5658.0], [13.6, 5658.0], [13.7, 5658.0], [13.8, 5659.0], [13.9, 5665.0], [14.0, 5666.0], [14.1, 5666.0], [14.2, 5667.0], [14.3, 5668.0], [14.4, 5668.0], [14.5, 5669.0], [14.6, 5670.0], [14.7, 5670.0], [14.8, 5673.0], [14.9, 5674.0], [15.0, 5675.0], [15.1, 5675.0], [15.2, 5677.0], [15.3, 5678.0], [15.4, 5678.0], [15.5, 5679.0], [15.6, 5681.0], [15.7, 5681.0], [15.8, 5682.0], [15.9, 5682.0], [16.0, 5685.0], [16.1, 5685.0], [16.2, 5686.0], [16.3, 5687.0], [16.4, 5687.0], [16.5, 5687.0], [16.6, 5687.0], [16.7, 5687.0], [16.8, 5687.0], [16.9, 5688.0], [17.0, 5689.0], [17.1, 5689.0], [17.2, 5690.0], [17.3, 5690.0], [17.4, 5690.0], [17.5, 5691.0], [17.6, 5693.0], [17.7, 5693.0], [17.8, 5693.0], [17.9, 5694.0], [18.0, 5694.0], [18.1, 5694.0], [18.2, 5695.0], [18.3, 5696.0], [18.4, 5696.0], [18.5, 5696.0], [18.6, 5699.0], [18.7, 5699.0], [18.8, 5701.0], [18.9, 5701.0], [19.0, 5701.0], [19.1, 5701.0], [19.2, 5705.0], [19.3, 5705.0], [19.4, 5705.0], [19.5, 5706.0], [19.6, 5706.0], [19.7, 5706.0], [19.8, 5706.0], [19.9, 5706.0], [20.0, 5709.0], [20.1, 5709.0], [20.2, 5712.0], [20.3, 5714.0], [20.4, 5714.0], [20.5, 5715.0], [20.6, 5717.0], [20.7, 5717.0], [20.8, 5719.0], [20.9, 5720.0], [21.0, 5720.0], [21.1, 5720.0], [21.2, 5721.0], [21.3, 5725.0], [21.4, 5725.0], [21.5, 5727.0], [21.6, 5730.0], [21.7, 5730.0], [21.8, 5732.0], [21.9, 5733.0], [22.0, 5733.0], [22.1, 5733.0], [22.2, 5734.0], [22.3, 5736.0], [22.4, 5736.0], [22.5, 5736.0], [22.6, 5738.0], [22.7, 5738.0], [22.8, 5741.0], [22.9, 5743.0], [23.0, 5745.0], [23.1, 5745.0], [23.2, 5747.0], [23.3, 5747.0], [23.4, 5747.0], [23.5, 5748.0], [23.6, 5750.0], [23.7, 5750.0], [23.8, 5751.0], [23.9, 5752.0], [24.0, 5754.0], [24.1, 5754.0], [24.2, 5756.0], [24.3, 5756.0], [24.4, 5756.0], [24.5, 5757.0], [24.6, 5757.0], [24.7, 5757.0], [24.8, 5761.0], [24.9, 5762.0], [25.0, 5762.0], [25.1, 5762.0], [25.2, 5764.0], [25.3, 5765.0], [25.4, 5765.0], [25.5, 5765.0], [25.6, 5766.0], [25.7, 5766.0], [25.8, 5769.0], [25.9, 5771.0], [26.0, 5771.0], [26.1, 5771.0], [26.2, 5771.0], [26.3, 5776.0], [26.4, 5776.0], [26.5, 5776.0], [26.6, 5777.0], [26.7, 5777.0], [26.8, 5777.0], [26.9, 5781.0], [27.0, 5781.0], [27.1, 5781.0], [27.2, 5781.0], [27.3, 5787.0], [27.4, 5787.0], [27.5, 5789.0], [27.6, 5790.0], [27.7, 5790.0], [27.8, 5794.0], [27.9, 5794.0], [28.0, 5797.0], [28.1, 5797.0], [28.2, 5798.0], [28.3, 5798.0], [28.4, 5798.0], [28.5, 5799.0], [28.6, 5803.0], [28.7, 5803.0], [28.8, 5803.0], [28.9, 5803.0], [29.0, 5806.0], [29.1, 5806.0], [29.2, 5807.0], [29.3, 5808.0], [29.4, 5808.0], [29.5, 5810.0], [29.6, 5811.0], [29.7, 5811.0], [29.8, 5815.0], [29.9, 5816.0], [30.0, 5820.0], [30.1, 5820.0], [30.2, 5823.0], [30.3, 5824.0], [30.4, 5824.0], [30.5, 5824.0], [30.6, 5824.0], [30.7, 5824.0], [30.8, 5827.0], [30.9, 5830.0], [31.0, 5832.0], [31.1, 5832.0], [31.2, 5835.0], [31.3, 5836.0], [31.4, 5836.0], [31.5, 5838.0], [31.6, 5839.0], [31.7, 5839.0], [31.8, 5841.0], [31.9, 5842.0], [32.0, 5842.0], [32.1, 5842.0], [32.2, 5850.0], [32.3, 5850.0], [32.4, 5850.0], [32.5, 5851.0], [32.6, 5852.0], [32.7, 5852.0], [32.8, 5855.0], [32.9, 5858.0], [33.0, 5859.0], [33.1, 5859.0], [33.2, 5859.0], [33.3, 5859.0], [33.4, 5859.0], [33.5, 5860.0], [33.6, 5861.0], [33.7, 5861.0], [33.8, 5862.0], [33.9, 5863.0], [34.0, 5868.0], [34.1, 5868.0], [34.2, 5868.0], [34.3, 5868.0], [34.4, 5868.0], [34.5, 5871.0], [34.6, 5871.0], [34.7, 5871.0], [34.8, 5872.0], [34.9, 5877.0], [35.0, 5878.0], [35.1, 5878.0], [35.2, 5878.0], [35.3, 5880.0], [35.4, 5880.0], [35.5, 5881.0], [35.6, 5882.0], [35.7, 5882.0], [35.8, 5886.0], [35.9, 5887.0], [36.0, 5888.0], [36.1, 5888.0], [36.2, 5891.0], [36.3, 5894.0], [36.4, 5894.0], [36.5, 5895.0], [36.6, 5896.0], [36.7, 5896.0], [36.8, 5899.0], [36.9, 5901.0], [37.0, 5901.0], [37.1, 5901.0], [37.2, 5903.0], [37.3, 5904.0], [37.4, 5904.0], [37.5, 5904.0], [37.6, 5904.0], [37.7, 5904.0], [37.8, 5905.0], [37.9, 5905.0], [38.0, 5905.0], [38.1, 5908.0], [38.2, 5912.0], [38.3, 5912.0], [38.4, 5912.0], [38.5, 5915.0], [38.6, 5917.0], [38.7, 5917.0], [38.8, 5918.0], [38.9, 5919.0], [39.0, 5919.0], [39.1, 5921.0], [39.2, 5921.0], [39.3, 5922.0], [39.4, 5922.0], [39.5, 5922.0], [39.6, 5923.0], [39.7, 5923.0], [39.8, 5929.0], [39.9, 5930.0], [40.0, 5930.0], [40.1, 5930.0], [40.2, 5934.0], [40.3, 5936.0], [40.4, 5936.0], [40.5, 5940.0], [40.6, 5942.0], [40.7, 5942.0], [40.8, 5942.0], [40.9, 5952.0], [41.0, 5952.0], [41.1, 5955.0], [41.2, 5957.0], [41.3, 5958.0], [41.4, 5958.0], [41.5, 5963.0], [41.6, 5964.0], [41.7, 5964.0], [41.8, 5965.0], [41.9, 5980.0], [42.0, 5980.0], [42.1, 5988.0], [42.2, 5988.0], [42.3, 5989.0], [42.4, 5989.0], [42.5, 5990.0], [42.6, 5993.0], [42.7, 5993.0], [42.8, 5994.0], [42.9, 5997.0], [43.0, 5997.0], [43.1, 6003.0], [43.2, 6003.0], [43.3, 6004.0], [43.4, 6004.0], [43.5, 6006.0], [43.6, 6006.0], [43.7, 6006.0], [43.8, 6009.0], [43.9, 6009.0], [44.0, 6009.0], [44.1, 6010.0], [44.2, 6011.0], [44.3, 6016.0], [44.4, 6016.0], [44.5, 6016.0], [44.6, 6020.0], [44.7, 6020.0], [44.8, 6020.0], [44.9, 6023.0], [45.0, 6023.0], [45.1, 6025.0], [45.2, 6027.0], [45.3, 6028.0], [45.4, 6028.0], [45.5, 6029.0], [45.6, 6029.0], [45.7, 6029.0], [45.8, 6031.0], [45.9, 6038.0], [46.0, 6038.0], [46.1, 6038.0], [46.2, 6040.0], [46.3, 6044.0], [46.4, 6044.0], [46.5, 6046.0], [46.6, 6047.0], [46.7, 6047.0], [46.8, 6049.0], [46.9, 6050.0], [47.0, 6050.0], [47.1, 6051.0], [47.2, 6056.0], [47.3, 6057.0], [47.4, 6057.0], [47.5, 6058.0], [47.6, 6058.0], [47.7, 6058.0], [47.8, 6059.0], [47.9, 6064.0], [48.0, 6064.0], [48.1, 6064.0], [48.2, 6067.0], [48.3, 6067.0], [48.4, 6067.0], [48.5, 6073.0], [48.6, 6074.0], [48.7, 6074.0], [48.8, 6082.0], [48.9, 6090.0], [49.0, 6090.0], [49.1, 6090.0], [49.2, 6101.0], [49.3, 6102.0], [49.4, 6102.0], [49.5, 6102.0], [49.6, 6103.0], [49.7, 6103.0], [49.8, 6106.0], [49.9, 6112.0], [50.0, 6112.0], [50.1, 6113.0], [50.2, 6113.0], [50.3, 6120.0], [50.4, 6120.0], [50.5, 6130.0], [50.6, 6133.0], [50.7, 6133.0], [50.8, 6134.0], [50.9, 6136.0], [51.0, 6136.0], [51.1, 6140.0], [51.2, 6142.0], [51.3, 6154.0], [51.4, 6154.0], [51.5, 6157.0], [51.6, 6163.0], [51.7, 6163.0], [51.8, 6164.0], [51.9, 6169.0], [52.0, 6169.0], [52.1, 6174.0], [52.2, 6180.0], [52.3, 6182.0], [52.4, 6182.0], [52.5, 6185.0], [52.6, 6188.0], [52.7, 6188.0], [52.8, 6189.0], [52.9, 6192.0], [53.0, 6192.0], [53.1, 6197.0], [53.2, 6197.0], [53.3, 6204.0], [53.4, 6204.0], [53.5, 6207.0], [53.6, 6207.0], [53.7, 6207.0], [53.8, 6207.0], [53.9, 6210.0], [54.0, 6210.0], [54.1, 6212.0], [54.2, 6212.0], [54.3, 6213.0], [54.4, 6213.0], [54.5, 6222.0], [54.6, 6224.0], [54.7, 6224.0], [54.8, 6227.0], [54.9, 6230.0], [55.0, 6230.0], [55.1, 6233.0], [55.2, 6239.0], [55.3, 6240.0], [55.4, 6240.0], [55.5, 6240.0], [55.6, 6240.0], [55.7, 6240.0], [55.8, 6249.0], [55.9, 6255.0], [56.0, 6255.0], [56.1, 6256.0], [56.2, 6267.0], [56.3, 6270.0], [56.4, 6270.0], [56.5, 6272.0], [56.6, 6272.0], [56.7, 6272.0], [56.8, 6277.0], [56.9, 6278.0], [57.0, 6278.0], [57.1, 6281.0], [57.2, 6283.0], [57.3, 6284.0], [57.4, 6284.0], [57.5, 6285.0], [57.6, 6286.0], [57.7, 6286.0], [57.8, 6288.0], [57.9, 6289.0], [58.0, 6289.0], [58.1, 6295.0], [58.2, 6300.0], [58.3, 6303.0], [58.4, 6303.0], [58.5, 6306.0], [58.6, 6313.0], [58.7, 6313.0], [58.8, 6313.0], [58.9, 6317.0], [59.0, 6317.0], [59.1, 6323.0], [59.2, 6329.0], [59.3, 6333.0], [59.4, 6333.0], [59.5, 6338.0], [59.6, 6339.0], [59.7, 6339.0], [59.8, 6343.0], [59.9, 6344.0], [60.0, 6344.0], [60.1, 6348.0], [60.2, 6351.0], [60.3, 6353.0], [60.4, 6353.0], [60.5, 6361.0], [60.6, 6361.0], [60.7, 6361.0], [60.8, 6370.0], [60.9, 6370.0], [61.0, 6370.0], [61.1, 6372.0], [61.2, 6373.0], [61.3, 6376.0], [61.4, 6376.0], [61.5, 6376.0], [61.6, 6386.0], [61.7, 6386.0], [61.8, 6386.0], [61.9, 6388.0], [62.0, 6388.0], [62.1, 6390.0], [62.2, 6391.0], [62.3, 6391.0], [62.4, 6391.0], [62.5, 6394.0], [62.6, 6397.0], [62.7, 6397.0], [62.8, 6401.0], [62.9, 6403.0], [63.0, 6403.0], [63.1, 6407.0], [63.2, 6411.0], [63.3, 6416.0], [63.4, 6416.0], [63.5, 6417.0], [63.6, 6418.0], [63.7, 6418.0], [63.8, 6418.0], [63.9, 6420.0], [64.0, 6420.0], [64.1, 6420.0], [64.2, 6423.0], [64.3, 6425.0], [64.4, 6425.0], [64.5, 6425.0], [64.6, 6426.0], [64.7, 6426.0], [64.8, 6432.0], [64.9, 6433.0], [65.0, 6433.0], [65.1, 6434.0], [65.2, 6435.0], [65.3, 6437.0], [65.4, 6437.0], [65.5, 6440.0], [65.6, 6441.0], [65.7, 6441.0], [65.8, 6443.0], [65.9, 6444.0], [66.0, 6444.0], [66.1, 6444.0], [66.2, 6445.0], [66.3, 6446.0], [66.4, 6446.0], [66.5, 6446.0], [66.6, 6446.0], [66.7, 6446.0], [66.8, 6450.0], [66.9, 6454.0], [67.0, 6454.0], [67.1, 6455.0], [67.2, 6455.0], [67.3, 6455.0], [67.4, 6455.0], [67.5, 6456.0], [67.6, 6456.0], [67.7, 6456.0], [67.8, 6457.0], [67.9, 6457.0], [68.0, 6457.0], [68.1, 6458.0], [68.2, 6459.0], [68.3, 6459.0], [68.4, 6459.0], [68.5, 6459.0], [68.6, 6461.0], [68.7, 6461.0], [68.8, 6462.0], [68.9, 6465.0], [69.0, 6465.0], [69.1, 6468.0], [69.2, 6469.0], [69.3, 6470.0], [69.4, 6470.0], [69.5, 6470.0], [69.6, 6471.0], [69.7, 6471.0], [69.8, 6471.0], [69.9, 6473.0], [70.0, 6473.0], [70.1, 6475.0], [70.2, 6476.0], [70.3, 6478.0], [70.4, 6478.0], [70.5, 6479.0], [70.6, 6481.0], [70.7, 6481.0], [70.8, 6483.0], [70.9, 6484.0], [71.0, 6484.0], [71.1, 6484.0], [71.2, 6487.0], [71.3, 6487.0], [71.4, 6487.0], [71.5, 6488.0], [71.6, 6489.0], [71.7, 6489.0], [71.8, 6491.0], [71.9, 6492.0], [72.0, 6492.0], [72.1, 6495.0], [72.2, 6495.0], [72.3, 6496.0], [72.4, 6496.0], [72.5, 6497.0], [72.6, 6499.0], [72.7, 6499.0], [72.8, 6500.0], [72.9, 6501.0], [73.0, 6501.0], [73.1, 6501.0], [73.2, 6502.0], [73.3, 6503.0], [73.4, 6503.0], [73.5, 6504.0], [73.6, 6505.0], [73.7, 6505.0], [73.8, 6507.0], [73.9, 6507.0], [74.0, 6507.0], [74.1, 6507.0], [74.2, 6512.0], [74.3, 6512.0], [74.4, 6512.0], [74.5, 6514.0], [74.6, 6514.0], [74.7, 6514.0], [74.8, 6515.0], [74.9, 6516.0], [75.0, 6516.0], [75.1, 6522.0], [75.2, 6524.0], [75.3, 6524.0], [75.4, 6524.0], [75.5, 6524.0], [75.6, 6525.0], [75.7, 6525.0], [75.8, 6529.0], [75.9, 6530.0], [76.0, 6530.0], [76.1, 6530.0], [76.2, 6535.0], [76.3, 6536.0], [76.4, 6536.0], [76.5, 6541.0], [76.6, 6541.0], [76.7, 6541.0], [76.8, 6541.0], [76.9, 6542.0], [77.0, 6542.0], [77.1, 6549.0], [77.2, 6549.0], [77.3, 6551.0], [77.4, 6551.0], [77.5, 6552.0], [77.6, 6554.0], [77.7, 6554.0], [77.8, 6554.0], [77.9, 6554.0], [78.0, 6554.0], [78.1, 6555.0], [78.2, 6556.0], [78.3, 6556.0], [78.4, 6556.0], [78.5, 6556.0], [78.6, 6556.0], [78.7, 6556.0], [78.8, 6557.0], [78.9, 6558.0], [79.0, 6558.0], [79.1, 6560.0], [79.2, 6560.0], [79.3, 6561.0], [79.4, 6561.0], [79.5, 6561.0], [79.6, 6562.0], [79.7, 6562.0], [79.8, 6563.0], [79.9, 6564.0], [80.0, 6564.0], [80.1, 6565.0], [80.2, 6565.0], [80.3, 6568.0], [80.4, 6568.0], [80.5, 6569.0], [80.6, 6570.0], [80.7, 6570.0], [80.8, 6572.0], [80.9, 6575.0], [81.0, 6575.0], [81.1, 6578.0], [81.2, 6579.0], [81.3, 6580.0], [81.4, 6580.0], [81.5, 6580.0], [81.6, 6580.0], [81.7, 6580.0], [81.8, 6580.0], [81.9, 6584.0], [82.0, 6584.0], [82.1, 6584.0], [82.2, 6585.0], [82.3, 6587.0], [82.4, 6587.0], [82.5, 6587.0], [82.6, 6590.0], [82.7, 6590.0], [82.8, 6591.0], [82.9, 6591.0], [83.0, 6591.0], [83.1, 6591.0], [83.2, 6593.0], [83.3, 6595.0], [83.4, 6595.0], [83.5, 6596.0], [83.6, 6597.0], [83.7, 6597.0], [83.8, 6598.0], [83.9, 6598.0], [84.0, 6598.0], [84.1, 6600.0], [84.2, 6602.0], [84.3, 6604.0], [84.4, 6604.0], [84.5, 6607.0], [84.6, 6609.0], [84.7, 6609.0], [84.8, 6609.0], [84.9, 6610.0], [85.0, 6610.0], [85.1, 6610.0], [85.2, 6611.0], [85.3, 6614.0], [85.4, 6614.0], [85.5, 6616.0], [85.6, 6616.0], [85.7, 6616.0], [85.8, 6617.0], [85.9, 6617.0], [86.0, 6617.0], [86.1, 6617.0], [86.2, 6617.0], [86.3, 6620.0], [86.4, 6620.0], [86.5, 6621.0], [86.6, 6621.0], [86.7, 6621.0], [86.8, 6622.0], [86.9, 6623.0], [87.0, 6623.0], [87.1, 6625.0], [87.2, 6626.0], [87.3, 6627.0], [87.4, 6627.0], [87.5, 6627.0], [87.6, 6627.0], [87.7, 6627.0], [87.8, 6630.0], [87.9, 6631.0], [88.0, 6631.0], [88.1, 6633.0], [88.2, 6635.0], [88.3, 6636.0], [88.4, 6636.0], [88.5, 6636.0], [88.6, 6637.0], [88.7, 6637.0], [88.8, 6638.0], [88.9, 6639.0], [89.0, 6639.0], [89.1, 6640.0], [89.2, 6643.0], [89.3, 6645.0], [89.4, 6645.0], [89.5, 6648.0], [89.6, 6649.0], [89.7, 6649.0], [89.8, 6651.0], [89.9, 6653.0], [90.0, 6653.0], [90.1, 6653.0], [90.2, 6653.0], [90.3, 6658.0], [90.4, 6658.0], [90.5, 6661.0], [90.6, 6664.0], [90.7, 6664.0], [90.8, 6668.0], [90.9, 6673.0], [91.0, 6673.0], [91.1, 6674.0], [91.2, 6674.0], [91.3, 6687.0], [91.4, 6687.0], [91.5, 6689.0], [91.6, 6693.0], [91.7, 6693.0], [91.8, 6694.0], [91.9, 6694.0], [92.0, 6694.0], [92.1, 6696.0], [92.2, 6699.0], [92.3, 6700.0], [92.4, 6700.0], [92.5, 6704.0], [92.6, 6704.0], [92.7, 6704.0], [92.8, 6705.0], [92.9, 6706.0], [93.0, 6706.0], [93.1, 6706.0], [93.2, 6707.0], [93.3, 6711.0], [93.4, 6711.0], [93.5, 6717.0], [93.6, 6718.0], [93.7, 6718.0], [93.8, 6720.0], [93.9, 6725.0], [94.0, 6725.0], [94.1, 6728.0], [94.2, 6731.0], [94.3, 6733.0], [94.4, 6733.0], [94.5, 6737.0], [94.6, 6738.0], [94.7, 6738.0], [94.8, 6742.0], [94.9, 6744.0], [95.0, 6744.0], [95.1, 6747.0], [95.2, 6753.0], [95.3, 6769.0], [95.4, 6769.0], [95.5, 6771.0], [95.6, 6773.0], [95.7, 6773.0], [95.8, 6778.0], [95.9, 6780.0], [96.0, 6780.0], [96.1, 6784.0], [96.2, 6784.0], [96.3, 6787.0], [96.4, 6787.0], [96.5, 6788.0], [96.6, 6789.0], [96.7, 6789.0], [96.8, 6790.0], [96.9, 6790.0], [97.0, 6790.0], [97.1, 6795.0], [97.2, 6796.0], [97.3, 6803.0], [97.4, 6803.0], [97.5, 6810.0], [97.6, 6817.0], [97.7, 6817.0], [97.8, 6819.0], [97.9, 6819.0], [98.0, 6819.0], [98.1, 6850.0], [98.2, 6857.0], [98.3, 6880.0], [98.4, 6880.0], [98.5, 6890.0], [98.6, 6893.0], [98.7, 6893.0], [98.8, 6915.0], [98.9, 6985.0], [99.0, 7020.0], [99.1, 7020.0], [99.2, 7023.0], [99.3, 7056.0], [99.4, 7056.0], [99.5, 7233.0], [99.6, 7305.0], [99.7, 7305.0], [99.8, 7311.0], [99.9, 7393.0]], "isOverall": false, "label": "(POST) User Login", "isController": false}, {"data": [[0.0, 5656.0], [0.1, 5656.0], [0.2, 5680.0], [0.3, 5683.0], [0.4, 5683.0], [0.5, 5746.0], [0.6, 5747.0], [0.7, 5747.0], [0.8, 5750.0], [0.9, 5798.0], [1.0, 5800.0], [1.1, 5800.0], [1.2, 5812.0], [1.3, 5841.0], [1.4, 5841.0], [1.5, 5854.0], [1.6, 5859.0], [1.7, 5859.0], [1.8, 5859.0], [1.9, 5862.0], [2.0, 5863.0], [2.1, 5863.0], [2.2, 5873.0], [2.3, 5877.0], [2.4, 5877.0], [2.5, 5881.0], [2.6, 5881.0], [2.7, 5881.0], [2.8, 5885.0], [2.9, 5887.0], [3.0, 5893.0], [3.1, 5893.0], [3.2, 5894.0], [3.3, 5896.0], [3.4, 5896.0], [3.5, 5897.0], [3.6, 5910.0], [3.7, 5910.0], [3.8, 5913.0], [3.9, 5913.0], [4.0, 5920.0], [4.1, 5920.0], [4.2, 5922.0], [4.3, 5924.0], [4.4, 5924.0], [4.5, 5925.0], [4.6, 5934.0], [4.7, 5934.0], [4.8, 5936.0], [4.9, 5937.0], [5.0, 5937.0], [5.1, 5940.0], [5.2, 5942.0], [5.3, 5943.0], [5.4, 5943.0], [5.5, 5944.0], [5.6, 5947.0], [5.7, 5947.0], [5.8, 5950.0], [5.9, 5953.0], [6.0, 5953.0], [6.1, 5954.0], [6.2, 5956.0], [6.3, 5957.0], [6.4, 5957.0], [6.5, 5958.0], [6.6, 5960.0], [6.7, 5960.0], [6.8, 5963.0], [6.9, 5963.0], [7.0, 5963.0], [7.1, 5964.0], [7.2, 5965.0], [7.3, 5968.0], [7.4, 5968.0], [7.5, 5969.0], [7.6, 5969.0], [7.7, 5969.0], [7.8, 5969.0], [7.9, 5969.0], [8.0, 5969.0], [8.1, 5970.0], [8.2, 5971.0], [8.3, 5972.0], [8.4, 5972.0], [8.5, 5972.0], [8.6, 5972.0], [8.7, 5972.0], [8.8, 5974.0], [8.9, 5975.0], [9.0, 5975.0], [9.1, 5976.0], [9.2, 5977.0], [9.3, 5978.0], [9.4, 5978.0], [9.5, 5979.0], [9.6, 5983.0], [9.7, 5983.0], [9.8, 5986.0], [9.9, 5987.0], [10.0, 5987.0], [10.1, 5989.0], [10.2, 5990.0], [10.3, 5991.0], [10.4, 5991.0], [10.5, 5993.0], [10.6, 5993.0], [10.7, 5993.0], [10.8, 5995.0], [10.9, 6007.0], [11.0, 6008.0], [11.1, 6008.0], [11.2, 6010.0], [11.3, 6011.0], [11.4, 6011.0], [11.5, 6012.0], [11.6, 6013.0], [11.7, 6013.0], [11.8, 6013.0], [11.9, 6015.0], [12.0, 6015.0], [12.1, 6015.0], [12.2, 6015.0], [12.3, 6016.0], [12.4, 6016.0], [12.5, 6017.0], [12.6, 6020.0], [12.7, 6020.0], [12.8, 6021.0], [12.9, 6022.0], [13.0, 6023.0], [13.1, 6023.0], [13.2, 6024.0], [13.3, 6024.0], [13.4, 6024.0], [13.5, 6024.0], [13.6, 6024.0], [13.7, 6024.0], [13.8, 6026.0], [13.9, 6026.0], [14.0, 6026.0], [14.1, 6026.0], [14.2, 6026.0], [14.3, 6027.0], [14.4, 6027.0], [14.5, 6029.0], [14.6, 6031.0], [14.7, 6031.0], [14.8, 6033.0], [14.9, 6033.0], [15.0, 6038.0], [15.1, 6038.0], [15.2, 6038.0], [15.3, 6041.0], [15.4, 6041.0], [15.5, 6044.0], [15.6, 6044.0], [15.7, 6044.0], [15.8, 6046.0], [15.9, 6047.0], [16.0, 6048.0], [16.1, 6048.0], [16.2, 6049.0], [16.3, 6051.0], [16.4, 6051.0], [16.5, 6056.0], [16.6, 6060.0], [16.7, 6060.0], [16.8, 6062.0], [16.9, 6062.0], [17.0, 6063.0], [17.1, 6063.0], [17.2, 6065.0], [17.3, 6066.0], [17.4, 6066.0], [17.5, 6068.0], [17.6, 6068.0], [17.7, 6068.0], [17.8, 6069.0], [17.9, 6071.0], [18.0, 6073.0], [18.1, 6073.0], [18.2, 6073.0], [18.3, 6074.0], [18.4, 6074.0], [18.5, 6075.0], [18.6, 6075.0], [18.7, 6075.0], [18.8, 6078.0], [18.9, 6078.0], [19.0, 6081.0], [19.1, 6081.0], [19.2, 6082.0], [19.3, 6082.0], [19.4, 6082.0], [19.5, 6084.0], [19.6, 6085.0], [19.7, 6085.0], [19.8, 6086.0], [19.9, 6086.0], [20.0, 6088.0], [20.1, 6088.0], [20.2, 6089.0], [20.3, 6093.0], [20.4, 6093.0], [20.5, 6101.0], [20.6, 6101.0], [20.7, 6101.0], [20.8, 6104.0], [20.9, 6105.0], [21.0, 6107.0], [21.1, 6107.0], [21.2, 6108.0], [21.3, 6108.0], [21.4, 6108.0], [21.5, 6110.0], [21.6, 6110.0], [21.7, 6110.0], [21.8, 6112.0], [21.9, 6114.0], [22.0, 6115.0], [22.1, 6115.0], [22.2, 6115.0], [22.3, 6117.0], [22.4, 6117.0], [22.5, 6117.0], [22.6, 6118.0], [22.7, 6118.0], [22.8, 6119.0], [22.9, 6120.0], [23.0, 6120.0], [23.1, 6120.0], [23.2, 6121.0], [23.3, 6121.0], [23.4, 6121.0], [23.5, 6122.0], [23.6, 6123.0], [23.7, 6123.0], [23.8, 6126.0], [23.9, 6128.0], [24.0, 6129.0], [24.1, 6129.0], [24.2, 6129.0], [24.3, 6130.0], [24.4, 6130.0], [24.5, 6130.0], [24.6, 6130.0], [24.7, 6130.0], [24.8, 6132.0], [24.9, 6135.0], [25.0, 6135.0], [25.1, 6135.0], [25.2, 6136.0], [25.3, 6136.0], [25.4, 6136.0], [25.5, 6138.0], [25.6, 6138.0], [25.7, 6138.0], [25.8, 6139.0], [25.9, 6139.0], [26.0, 6139.0], [26.1, 6139.0], [26.2, 6140.0], [26.3, 6141.0], [26.4, 6141.0], [26.5, 6142.0], [26.6, 6142.0], [26.7, 6142.0], [26.8, 6143.0], [26.9, 6145.0], [27.0, 6146.0], [27.1, 6146.0], [27.2, 6147.0], [27.3, 6150.0], [27.4, 6150.0], [27.5, 6151.0], [27.6, 6152.0], [27.7, 6152.0], [27.8, 6153.0], [27.9, 6155.0], [28.0, 6157.0], [28.1, 6157.0], [28.2, 6158.0], [28.3, 6158.0], [28.4, 6158.0], [28.5, 6159.0], [28.6, 6162.0], [28.7, 6162.0], [28.8, 6163.0], [28.9, 6163.0], [29.0, 6164.0], [29.1, 6164.0], [29.2, 6168.0], [29.3, 6168.0], [29.4, 6168.0], [29.5, 6171.0], [29.6, 6172.0], [29.7, 6172.0], [29.8, 6172.0], [29.9, 6172.0], [30.0, 6173.0], [30.1, 6173.0], [30.2, 6175.0], [30.3, 6176.0], [30.4, 6176.0], [30.5, 6177.0], [30.6, 6177.0], [30.7, 6177.0], [30.8, 6181.0], [30.9, 6182.0], [31.0, 6183.0], [31.1, 6183.0], [31.2, 6183.0], [31.3, 6185.0], [31.4, 6185.0], [31.5, 6185.0], [31.6, 6189.0], [31.7, 6189.0], [31.8, 6191.0], [31.9, 6191.0], [32.0, 6192.0], [32.1, 6192.0], [32.2, 6193.0], [32.3, 6193.0], [32.4, 6193.0], [32.5, 6194.0], [32.6, 6194.0], [32.7, 6194.0], [32.8, 6195.0], [32.9, 6195.0], [33.0, 6195.0], [33.1, 6195.0], [33.2, 6195.0], [33.3, 6196.0], [33.4, 6196.0], [33.5, 6200.0], [33.6, 6201.0], [33.7, 6201.0], [33.8, 6203.0], [33.9, 6203.0], [34.0, 6204.0], [34.1, 6204.0], [34.2, 6205.0], [34.3, 6206.0], [34.4, 6206.0], [34.5, 6209.0], [34.6, 6210.0], [34.7, 6210.0], [34.8, 6211.0], [34.9, 6211.0], [35.0, 6213.0], [35.1, 6213.0], [35.2, 6215.0], [35.3, 6216.0], [35.4, 6216.0], [35.5, 6217.0], [35.6, 6217.0], [35.7, 6217.0], [35.8, 6219.0], [35.9, 6223.0], [36.0, 6224.0], [36.1, 6224.0], [36.2, 6225.0], [36.3, 6225.0], [36.4, 6225.0], [36.5, 6226.0], [36.6, 6226.0], [36.7, 6226.0], [36.8, 6226.0], [36.9, 6229.0], [37.0, 6231.0], [37.1, 6231.0], [37.2, 6232.0], [37.3, 6232.0], [37.4, 6232.0], [37.5, 6232.0], [37.6, 6236.0], [37.7, 6236.0], [37.8, 6237.0], [37.9, 6237.0], [38.0, 6237.0], [38.1, 6237.0], [38.2, 6238.0], [38.3, 6239.0], [38.4, 6239.0], [38.5, 6244.0], [38.6, 6244.0], [38.7, 6244.0], [38.8, 6244.0], [38.9, 6245.0], [39.0, 6246.0], [39.1, 6246.0], [39.2, 6247.0], [39.3, 6248.0], [39.4, 6248.0], [39.5, 6248.0], [39.6, 6248.0], [39.7, 6248.0], [39.8, 6249.0], [39.9, 6249.0], [40.0, 6249.0], [40.1, 6252.0], [40.2, 6254.0], [40.3, 6256.0], [40.4, 6256.0], [40.5, 6260.0], [40.6, 6260.0], [40.7, 6260.0], [40.8, 6260.0], [40.9, 6262.0], [41.0, 6262.0], [41.1, 6262.0], [41.2, 6264.0], [41.3, 6264.0], [41.4, 6264.0], [41.5, 6264.0], [41.6, 6266.0], [41.7, 6266.0], [41.8, 6272.0], [41.9, 6273.0], [42.0, 6273.0], [42.1, 6274.0], [42.2, 6275.0], [42.3, 6277.0], [42.4, 6277.0], [42.5, 6278.0], [42.6, 6279.0], [42.7, 6279.0], [42.8, 6280.0], [42.9, 6284.0], [43.0, 6284.0], [43.1, 6285.0], [43.2, 6286.0], [43.3, 6287.0], [43.4, 6287.0], [43.5, 6287.0], [43.6, 6290.0], [43.7, 6290.0], [43.8, 6292.0], [43.9, 6292.0], [44.0, 6292.0], [44.1, 6293.0], [44.2, 6293.0], [44.3, 6294.0], [44.4, 6294.0], [44.5, 6298.0], [44.6, 6302.0], [44.7, 6302.0], [44.8, 6303.0], [44.9, 6303.0], [45.0, 6303.0], [45.1, 6304.0], [45.2, 6306.0], [45.3, 6307.0], [45.4, 6307.0], [45.5, 6308.0], [45.6, 6308.0], [45.7, 6308.0], [45.8, 6308.0], [45.9, 6310.0], [46.0, 6310.0], [46.1, 6310.0], [46.2, 6311.0], [46.3, 6312.0], [46.4, 6312.0], [46.5, 6313.0], [46.6, 6314.0], [46.7, 6314.0], [46.8, 6319.0], [46.9, 6321.0], [47.0, 6321.0], [47.1, 6321.0], [47.2, 6322.0], [47.3, 6322.0], [47.4, 6322.0], [47.5, 6323.0], [47.6, 6323.0], [47.7, 6323.0], [47.8, 6324.0], [47.9, 6324.0], [48.0, 6324.0], [48.1, 6326.0], [48.2, 6327.0], [48.3, 6331.0], [48.4, 6331.0], [48.5, 6331.0], [48.6, 6333.0], [48.7, 6333.0], [48.8, 6333.0], [48.9, 6333.0], [49.0, 6333.0], [49.1, 6333.0], [49.2, 6334.0], [49.3, 6334.0], [49.4, 6334.0], [49.5, 6335.0], [49.6, 6335.0], [49.7, 6335.0], [49.8, 6335.0], [49.9, 6336.0], [50.0, 6336.0], [50.1, 6337.0], [50.2, 6339.0], [50.3, 6340.0], [50.4, 6340.0], [50.5, 6343.0], [50.6, 6344.0], [50.7, 6344.0], [50.8, 6344.0], [50.9, 6345.0], [51.0, 6345.0], [51.1, 6346.0], [51.2, 6347.0], [51.3, 6348.0], [51.4, 6348.0], [51.5, 6349.0], [51.6, 6349.0], [51.7, 6349.0], [51.8, 6351.0], [51.9, 6351.0], [52.0, 6351.0], [52.1, 6352.0], [52.2, 6353.0], [52.3, 6354.0], [52.4, 6354.0], [52.5, 6356.0], [52.6, 6357.0], [52.7, 6357.0], [52.8, 6357.0], [52.9, 6358.0], [53.0, 6358.0], [53.1, 6360.0], [53.2, 6361.0], [53.3, 6363.0], [53.4, 6363.0], [53.5, 6365.0], [53.6, 6366.0], [53.7, 6366.0], [53.8, 6369.0], [53.9, 6370.0], [54.0, 6370.0], [54.1, 6373.0], [54.2, 6375.0], [54.3, 6377.0], [54.4, 6377.0], [54.5, 6379.0], [54.6, 6380.0], [54.7, 6380.0], [54.8, 6380.0], [54.9, 6380.0], [55.0, 6380.0], [55.1, 6380.0], [55.2, 6380.0], [55.3, 6382.0], [55.4, 6382.0], [55.5, 6383.0], [55.6, 6386.0], [55.7, 6386.0], [55.8, 6387.0], [55.9, 6391.0], [56.0, 6391.0], [56.1, 6394.0], [56.2, 6395.0], [56.3, 6397.0], [56.4, 6397.0], [56.5, 6397.0], [56.6, 6398.0], [56.7, 6398.0], [56.8, 6398.0], [56.9, 6399.0], [57.0, 6399.0], [57.1, 6400.0], [57.2, 6401.0], [57.3, 6404.0], [57.4, 6404.0], [57.5, 6404.0], [57.6, 6405.0], [57.7, 6405.0], [57.8, 6406.0], [57.9, 6407.0], [58.0, 6407.0], [58.1, 6407.0], [58.2, 6408.0], [58.3, 6408.0], [58.4, 6408.0], [58.5, 6408.0], [58.6, 6409.0], [58.7, 6409.0], [58.8, 6411.0], [58.9, 6411.0], [59.0, 6411.0], [59.1, 6412.0], [59.2, 6412.0], [59.3, 6413.0], [59.4, 6413.0], [59.5, 6415.0], [59.6, 6415.0], [59.7, 6415.0], [59.8, 6416.0], [59.9, 6417.0], [60.0, 6417.0], [60.1, 6417.0], [60.2, 6419.0], [60.3, 6419.0], [60.4, 6419.0], [60.5, 6420.0], [60.6, 6420.0], [60.7, 6420.0], [60.8, 6420.0], [60.9, 6420.0], [61.0, 6420.0], [61.1, 6422.0], [61.2, 6423.0], [61.3, 6424.0], [61.4, 6424.0], [61.5, 6425.0], [61.6, 6426.0], [61.7, 6426.0], [61.8, 6429.0], [61.9, 6430.0], [62.0, 6430.0], [62.1, 6431.0], [62.2, 6438.0], [62.3, 6439.0], [62.4, 6439.0], [62.5, 6439.0], [62.6, 6440.0], [62.7, 6440.0], [62.8, 6441.0], [62.9, 6441.0], [63.0, 6441.0], [63.1, 6442.0], [63.2, 6442.0], [63.3, 6442.0], [63.4, 6442.0], [63.5, 6444.0], [63.6, 6454.0], [63.7, 6454.0], [63.8, 6455.0], [63.9, 6455.0], [64.0, 6455.0], [64.1, 6457.0], [64.2, 6459.0], [64.3, 6461.0], [64.4, 6461.0], [64.5, 6461.0], [64.6, 6462.0], [64.7, 6462.0], [64.8, 6463.0], [64.9, 6467.0], [65.0, 6467.0], [65.1, 6467.0], [65.2, 6468.0], [65.3, 6469.0], [65.4, 6469.0], [65.5, 6470.0], [65.6, 6472.0], [65.7, 6472.0], [65.8, 6474.0], [65.9, 6474.0], [66.0, 6474.0], [66.1, 6475.0], [66.2, 6475.0], [66.3, 6476.0], [66.4, 6476.0], [66.5, 6478.0], [66.6, 6481.0], [66.7, 6481.0], [66.8, 6483.0], [66.9, 6485.0], [67.0, 6485.0], [67.1, 6487.0], [67.2, 6487.0], [67.3, 6488.0], [67.4, 6488.0], [67.5, 6490.0], [67.6, 6490.0], [67.7, 6490.0], [67.8, 6493.0], [67.9, 6497.0], [68.0, 6497.0], [68.1, 6498.0], [68.2, 6501.0], [68.3, 6502.0], [68.4, 6502.0], [68.5, 6504.0], [68.6, 6507.0], [68.7, 6507.0], [68.8, 6507.0], [68.9, 6509.0], [69.0, 6509.0], [69.1, 6510.0], [69.2, 6510.0], [69.3, 6513.0], [69.4, 6513.0], [69.5, 6514.0], [69.6, 6517.0], [69.7, 6517.0], [69.8, 6517.0], [69.9, 6518.0], [70.0, 6518.0], [70.1, 6518.0], [70.2, 6520.0], [70.3, 6521.0], [70.4, 6521.0], [70.5, 6522.0], [70.6, 6522.0], [70.7, 6522.0], [70.8, 6522.0], [70.9, 6535.0], [71.0, 6535.0], [71.1, 6535.0], [71.2, 6539.0], [71.3, 6540.0], [71.4, 6540.0], [71.5, 6543.0], [71.6, 6546.0], [71.7, 6546.0], [71.8, 6546.0], [71.9, 6547.0], [72.0, 6547.0], [72.1, 6548.0], [72.2, 6548.0], [72.3, 6554.0], [72.4, 6554.0], [72.5, 6554.0], [72.6, 6558.0], [72.7, 6558.0], [72.8, 6559.0], [72.9, 6563.0], [73.0, 6563.0], [73.1, 6565.0], [73.2, 6566.0], [73.3, 6567.0], [73.4, 6567.0], [73.5, 6571.0], [73.6, 6571.0], [73.7, 6571.0], [73.8, 6571.0], [73.9, 6574.0], [74.0, 6574.0], [74.1, 6576.0], [74.2, 6576.0], [74.3, 6578.0], [74.4, 6578.0], [74.5, 6579.0], [74.6, 6580.0], [74.7, 6580.0], [74.8, 6584.0], [74.9, 6584.0], [75.0, 6584.0], [75.1, 6585.0], [75.2, 6588.0], [75.3, 6591.0], [75.4, 6591.0], [75.5, 6597.0], [75.6, 6598.0], [75.7, 6598.0], [75.8, 6598.0], [75.9, 6602.0], [76.0, 6602.0], [76.1, 6602.0], [76.2, 6607.0], [76.3, 6609.0], [76.4, 6609.0], [76.5, 6610.0], [76.6, 6612.0], [76.7, 6612.0], [76.8, 6614.0], [76.9, 6615.0], [77.0, 6615.0], [77.1, 6617.0], [77.2, 6618.0], [77.3, 6620.0], [77.4, 6620.0], [77.5, 6626.0], [77.6, 6627.0], [77.7, 6627.0], [77.8, 6629.0], [77.9, 6630.0], [78.0, 6630.0], [78.1, 6640.0], [78.2, 6646.0], [78.3, 6647.0], [78.4, 6647.0], [78.5, 6648.0], [78.6, 6656.0], [78.7, 6656.0], [78.8, 6658.0], [78.9, 6663.0], [79.0, 6663.0], [79.1, 6666.0], [79.2, 6668.0], [79.3, 6670.0], [79.4, 6670.0], [79.5, 6671.0], [79.6, 6676.0], [79.7, 6676.0], [79.8, 6677.0], [79.9, 6679.0], [80.0, 6679.0], [80.1, 6681.0], [80.2, 6693.0], [80.3, 6694.0], [80.4, 6694.0], [80.5, 6696.0], [80.6, 6699.0], [80.7, 6699.0], [80.8, 6706.0], [80.9, 6706.0], [81.0, 6706.0], [81.1, 6706.0], [81.2, 6709.0], [81.3, 6715.0], [81.4, 6715.0], [81.5, 6723.0], [81.6, 6723.0], [81.7, 6723.0], [81.8, 6725.0], [81.9, 6742.0], [82.0, 6742.0], [82.1, 6743.0], [82.2, 6745.0], [82.3, 6746.0], [82.4, 6746.0], [82.5, 6751.0], [82.6, 6753.0], [82.7, 6753.0], [82.8, 6758.0], [82.9, 6760.0], [83.0, 6760.0], [83.1, 6760.0], [83.2, 6762.0], [83.3, 6766.0], [83.4, 6766.0], [83.5, 6771.0], [83.6, 6772.0], [83.7, 6772.0], [83.8, 6775.0], [83.9, 6778.0], [84.0, 6787.0], [84.1, 6787.0], [84.2, 6799.0], [84.3, 6802.0], [84.4, 6802.0], [84.5, 6805.0], [84.6, 6806.0], [84.7, 6806.0], [84.8, 6807.0], [84.9, 6809.0], [85.0, 6809.0], [85.1, 6809.0], [85.2, 6809.0], [85.3, 6811.0], [85.4, 6811.0], [85.5, 6819.0], [85.6, 6819.0], [85.7, 6819.0], [85.8, 6820.0], [85.9, 6821.0], [86.0, 6824.0], [86.1, 6824.0], [86.2, 6826.0], [86.3, 6831.0], [86.4, 6831.0], [86.5, 6832.0], [86.6, 6832.0], [86.7, 6832.0], [86.8, 6848.0], [86.9, 6853.0], [87.0, 6855.0], [87.1, 6855.0], [87.2, 6866.0], [87.3, 6868.0], [87.4, 6868.0], [87.5, 6870.0], [87.6, 6875.0], [87.7, 6875.0], [87.8, 6880.0], [87.9, 6881.0], [88.0, 6888.0], [88.1, 6888.0], [88.2, 6901.0], [88.3, 6902.0], [88.4, 6902.0], [88.5, 6904.0], [88.6, 6906.0], [88.7, 6906.0], [88.8, 6911.0], [88.9, 6918.0], [89.0, 6918.0], [89.1, 6918.0], [89.2, 6918.0], [89.3, 6922.0], [89.4, 6922.0], [89.5, 6929.0], [89.6, 6930.0], [89.7, 6930.0], [89.8, 6931.0], [89.9, 6933.0], [90.0, 6935.0], [90.1, 6935.0], [90.2, 6959.0], [90.3, 6960.0], [90.4, 6960.0], [90.5, 6960.0], [90.6, 6964.0], [90.7, 6964.0], [90.8, 6969.0], [90.9, 6972.0], [91.0, 6977.0], [91.1, 6977.0], [91.2, 6978.0], [91.3, 6981.0], [91.4, 6981.0], [91.5, 6985.0], [91.6, 6988.0], [91.7, 6988.0], [91.8, 6989.0], [91.9, 6989.0], [92.0, 6990.0], [92.1, 6990.0], [92.2, 6990.0], [92.3, 6996.0], [92.4, 6996.0], [92.5, 7004.0], [92.6, 7006.0], [92.7, 7006.0], [92.8, 7011.0], [92.9, 7015.0], [93.0, 7016.0], [93.1, 7016.0], [93.2, 7019.0], [93.3, 7023.0], [93.4, 7023.0], [93.5, 7029.0], [93.6, 7030.0], [93.7, 7030.0], [93.8, 7042.0], [93.9, 7044.0], [94.0, 7047.0], [94.1, 7047.0], [94.2, 7051.0], [94.3, 7053.0], [94.4, 7053.0], [94.5, 7055.0], [94.6, 7056.0], [94.7, 7056.0], [94.8, 7059.0], [94.9, 7061.0], [95.0, 7067.0], [95.1, 7067.0], [95.2, 7071.0], [95.3, 7075.0], [95.4, 7075.0], [95.5, 7082.0], [95.6, 7083.0], [95.7, 7083.0], [95.8, 7085.0], [95.9, 7085.0], [96.0, 7086.0], [96.1, 7086.0], [96.2, 7099.0], [96.3, 7102.0], [96.4, 7102.0], [96.5, 7108.0], [96.6, 7109.0], [96.7, 7109.0], [96.8, 7114.0], [96.9, 7122.0], [97.0, 7125.0], [97.1, 7125.0], [97.2, 7126.0], [97.3, 7132.0], [97.4, 7132.0], [97.5, 7134.0], [97.6, 7135.0], [97.7, 7135.0], [97.8, 7167.0], [97.9, 7181.0], [98.0, 7194.0], [98.1, 7194.0], [98.2, 7203.0], [98.3, 7206.0], [98.4, 7206.0], [98.5, 7245.0], [98.6, 7247.0], [98.7, 7247.0], [98.8, 7248.0], [98.9, 7259.0], [99.0, 7261.0], [99.1, 7261.0], [99.2, 7274.0], [99.3, 7275.0], [99.4, 7275.0], [99.5, 7282.0], [99.6, 7313.0], [99.7, 7313.0], [99.8, 7318.0], [99.9, 7327.0]], "isOverall": false, "label": "(POST) UPDATE User Data", "isController": false}, {"data": [[0.0, 4451.0], [0.1, 4451.0], [0.2, 4531.0], [0.3, 4619.0], [0.4, 4619.0], [0.5, 4649.0], [0.6, 4660.0], [0.7, 4783.0], [0.8, 4783.0], [0.9, 4872.0], [1.0, 4877.0], [1.1, 4878.0], [1.2, 4878.0], [1.3, 4889.0], [1.4, 4906.0], [1.5, 4920.0], [1.6, 4920.0], [1.7, 5018.0], [1.8, 5019.0], [1.9, 5019.0], [2.0, 5077.0], [2.1, 5077.0], [2.2, 5091.0], [2.3, 5091.0], [2.4, 5129.0], [2.5, 5177.0], [2.6, 5321.0], [2.7, 5321.0], [2.8, 5341.0], [2.9, 5581.0], [3.0, 5676.0], [3.1, 5676.0], [3.2, 5842.0], [3.3, 5908.0], [3.4, 5908.0], [3.5, 5932.0], [3.6, 6044.0], [3.7, 6051.0], [3.8, 6051.0], [3.9, 6079.0], [4.0, 6111.0], [4.1, 6111.0], [4.2, 6111.0], [4.3, 6187.0], [4.4, 6215.0], [4.5, 6228.0], [4.6, 6228.0], [4.7, 6335.0], [4.8, 16486.0], [4.9, 16772.0], [5.0, 16772.0], [5.1, 16970.0], [5.2, 17266.0], [5.3, 17266.0], [5.4, 17446.0], [5.5, 17660.0], [5.6, 17731.0], [5.7, 17731.0], [5.8, 17764.0], [5.9, 17946.0], [6.0, 18273.0], [6.1, 18273.0], [6.2, 18330.0], [6.3, 18464.0], [6.4, 18476.0], [6.5, 18476.0], [6.6, 18947.0], [6.7, 19316.0], [6.8, 19316.0], [6.9, 19826.0], [7.0, 20448.0], [7.1, 20593.0], [7.2, 20593.0], [7.3, 20657.0], [7.4, 20677.0], [7.5, 20679.0], [7.6, 20679.0], [7.7, 20680.0], [7.8, 20713.0], [7.9, 20740.0], [8.0, 20740.0], [8.1, 20744.0], [8.2, 20755.0], [8.3, 20762.0], [8.4, 20762.0], [8.5, 20780.0], [8.6, 20781.0], [8.7, 20781.0], [8.8, 20781.0], [8.9, 20794.0], [9.0, 20795.0], [9.1, 20795.0], [9.2, 20797.0], [9.3, 20797.0], [9.4, 20806.0], [9.5, 20806.0], [9.6, 20807.0], [9.7, 20811.0], [9.8, 20819.0], [9.9, 20819.0], [10.0, 20820.0], [10.1, 20822.0], [10.2, 20822.0], [10.3, 20824.0], [10.4, 20827.0], [10.5, 20828.0], [10.6, 20828.0], [10.7, 20830.0], [10.8, 20839.0], [10.9, 20840.0], [11.0, 20840.0], [11.1, 20840.0], [11.2, 20841.0], [11.3, 20842.0], [11.4, 20842.0], [11.5, 20844.0], [11.6, 20849.0], [11.7, 20849.0], [11.8, 20850.0], [11.9, 20851.0], [12.0, 20858.0], [12.1, 20858.0], [12.2, 20860.0], [12.3, 20867.0], [12.4, 20868.0], [12.5, 20868.0], [12.6, 20873.0], [12.7, 20876.0], [12.8, 20880.0], [12.9, 20880.0], [13.0, 20882.0], [13.1, 20888.0], [13.2, 20892.0], [13.3, 20892.0], [13.4, 20893.0], [13.5, 20893.0], [13.6, 20893.0], [13.7, 20897.0], [13.8, 20899.0], [13.9, 20902.0], [14.0, 20902.0], [14.1, 20902.0], [14.2, 20904.0], [14.3, 20907.0], [14.4, 20907.0], [14.5, 20908.0], [14.6, 20909.0], [14.7, 20909.0], [14.8, 20909.0], [14.9, 20909.0], [15.0, 20909.0], [15.1, 20909.0], [15.2, 20912.0], [15.3, 20912.0], [15.4, 20914.0], [15.5, 20914.0], [15.6, 20915.0], [15.7, 20920.0], [15.8, 20921.0], [15.9, 20921.0], [16.0, 20923.0], [16.1, 20923.0], [16.2, 20927.0], [16.3, 20927.0], [16.4, 20927.0], [16.5, 20929.0], [16.6, 20929.0], [16.7, 20929.0], [16.8, 20930.0], [16.9, 20931.0], [17.0, 20931.0], [17.1, 20940.0], [17.2, 20941.0], [17.3, 20942.0], [17.4, 20942.0], [17.5, 20945.0], [17.6, 20946.0], [17.7, 20947.0], [17.8, 20947.0], [17.9, 20947.0], [18.0, 20952.0], [18.1, 20957.0], [18.2, 20957.0], [18.3, 20958.0], [18.4, 20960.0], [18.5, 20960.0], [18.6, 20962.0], [18.7, 20966.0], [18.8, 20968.0], [18.9, 20968.0], [19.0, 20971.0], [19.1, 20971.0], [19.2, 20971.0], [19.3, 20971.0], [19.4, 20973.0], [19.5, 20973.0], [19.6, 20974.0], [19.7, 20974.0], [19.8, 20974.0], [19.9, 20980.0], [20.0, 20982.0], [20.1, 20982.0], [20.2, 20983.0], [20.3, 20983.0], [20.4, 20983.0], [20.5, 20985.0], [20.6, 20986.0], [20.7, 20987.0], [20.8, 20987.0], [20.9, 20988.0], [21.0, 20991.0], [21.1, 20991.0], [21.2, 20991.0], [21.3, 20991.0], [21.4, 20992.0], [21.5, 20994.0], [21.6, 20994.0], [21.7, 20996.0], [21.8, 20997.0], [21.9, 20997.0], [22.0, 21001.0], [22.1, 21002.0], [22.2, 21005.0], [22.3, 21005.0], [22.4, 21013.0], [22.5, 21017.0], [22.6, 21020.0], [22.7, 21020.0], [22.8, 21020.0], [22.9, 21020.0], [23.0, 21021.0], [23.1, 21021.0], [23.2, 21022.0], [23.3, 21024.0], [23.4, 21024.0], [23.5, 21025.0], [23.6, 21026.0], [23.7, 21031.0], [23.8, 21031.0], [23.9, 21036.0], [24.0, 21039.0], [24.1, 21039.0], [24.2, 21039.0], [24.3, 21040.0], [24.4, 21041.0], [24.5, 21044.0], [24.6, 21044.0], [24.7, 21044.0], [24.8, 21046.0], [24.9, 21049.0], [25.0, 21049.0], [25.1, 21050.0], [25.2, 21050.0], [25.3, 21050.0], [25.4, 21051.0], [25.5, 21051.0], [25.6, 21052.0], [25.7, 21052.0], [25.8, 21052.0], [25.9, 21054.0], [26.0, 21057.0], [26.1, 21057.0], [26.2, 21058.0], [26.3, 21059.0], [26.4, 21062.0], [26.5, 21062.0], [26.6, 21065.0], [26.7, 21066.0], [26.8, 21066.0], [26.9, 21066.0], [27.0, 21067.0], [27.1, 21067.0], [27.2, 21067.0], [27.3, 21067.0], [27.4, 21069.0], [27.5, 21070.0], [27.6, 21070.0], [27.7, 21072.0], [27.8, 21073.0], [27.9, 21073.0], [28.0, 21073.0], [28.1, 21075.0], [28.2, 21076.0], [28.3, 21078.0], [28.4, 21078.0], [28.5, 21080.0], [28.6, 21081.0], [28.7, 21081.0], [28.8, 21081.0], [28.9, 21082.0], [29.0, 21083.0], [29.1, 21083.0], [29.2, 21085.0], [29.3, 21085.0], [29.4, 21087.0], [29.5, 21087.0], [29.6, 21088.0], [29.7, 21089.0], [29.8, 21091.0], [29.9, 21091.0], [30.0, 21092.0], [30.1, 21093.0], [30.2, 21093.0], [30.3, 21094.0], [30.4, 21095.0], [30.5, 21095.0], [30.6, 21095.0], [30.7, 21096.0], [30.8, 21096.0], [30.9, 21098.0], [31.0, 21098.0], [31.1, 21099.0], [31.2, 21100.0], [31.3, 21101.0], [31.4, 21101.0], [31.5, 21103.0], [31.6, 21104.0], [31.7, 21104.0], [31.8, 21104.0], [31.9, 21108.0], [32.0, 21110.0], [32.1, 21110.0], [32.2, 21111.0], [32.3, 21113.0], [32.4, 21113.0], [32.5, 21113.0], [32.6, 21116.0], [32.7, 21117.0], [32.8, 21118.0], [32.9, 21118.0], [33.0, 21119.0], [33.1, 21121.0], [33.2, 21124.0], [33.3, 21124.0], [33.4, 21126.0], [33.5, 21126.0], [33.6, 21126.0], [33.7, 21134.0], [33.8, 21135.0], [33.9, 21135.0], [34.0, 21135.0], [34.1, 21135.0], [34.2, 21136.0], [34.3, 21137.0], [34.4, 21137.0], [34.5, 21137.0], [34.6, 21139.0], [34.7, 21141.0], [34.8, 21141.0], [34.9, 21141.0], [35.0, 21142.0], [35.1, 21142.0], [35.2, 21143.0], [35.3, 21143.0], [35.4, 21143.0], [35.5, 21143.0], [35.6, 21145.0], [35.7, 21146.0], [35.8, 21146.0], [35.9, 21146.0], [36.0, 21147.0], [36.1, 21149.0], [36.2, 21150.0], [36.3, 21150.0], [36.4, 21150.0], [36.5, 21151.0], [36.6, 21152.0], [36.7, 21152.0], [36.8, 21152.0], [36.9, 21157.0], [37.0, 21157.0], [37.1, 21163.0], [37.2, 21165.0], [37.3, 21165.0], [37.4, 21165.0], [37.5, 21167.0], [37.6, 21167.0], [37.7, 21168.0], [37.8, 21168.0], [37.9, 21168.0], [38.0, 21169.0], [38.1, 21174.0], [38.2, 21174.0], [38.3, 21174.0], [38.4, 21176.0], [38.5, 21176.0], [38.6, 21176.0], [38.7, 21176.0], [38.8, 21176.0], [38.9, 21176.0], [39.0, 21178.0], [39.1, 21178.0], [39.2, 21185.0], [39.3, 21185.0], [39.4, 21186.0], [39.5, 21189.0], [39.6, 21192.0], [39.7, 21192.0], [39.8, 21193.0], [39.9, 21194.0], [40.0, 21194.0], [40.1, 21194.0], [40.2, 21197.0], [40.3, 21199.0], [40.4, 21199.0], [40.5, 21199.0], [40.6, 21199.0], [40.7, 21200.0], [40.8, 21200.0], [40.9, 21200.0], [41.0, 21204.0], [41.1, 21206.0], [41.2, 21206.0], [41.3, 21207.0], [41.4, 21208.0], [41.5, 21209.0], [41.6, 21209.0], [41.7, 21209.0], [41.8, 21210.0], [41.9, 21210.0], [42.0, 21210.0], [42.1, 21212.0], [42.2, 21212.0], [42.3, 21212.0], [42.4, 21214.0], [42.5, 21215.0], [42.6, 21217.0], [42.7, 21217.0], [42.8, 21218.0], [42.9, 21218.0], [43.0, 21219.0], [43.1, 21219.0], [43.2, 21219.0], [43.3, 21220.0], [43.4, 21220.0], [43.5, 21221.0], [43.6, 21221.0], [43.7, 21222.0], [43.8, 21222.0], [43.9, 21222.0], [44.0, 21224.0], [44.1, 21224.0], [44.2, 21224.0], [44.3, 21225.0], [44.4, 21225.0], [44.5, 21225.0], [44.6, 21225.0], [44.7, 21228.0], [44.8, 21232.0], [44.9, 21232.0], [45.0, 21232.0], [45.1, 21232.0], [45.2, 21234.0], [45.3, 21234.0], [45.4, 21237.0], [45.5, 21237.0], [45.6, 21238.0], [45.7, 21238.0], [45.8, 21239.0], [45.9, 21239.0], [46.0, 21243.0], [46.1, 21243.0], [46.2, 21243.0], [46.3, 21246.0], [46.4, 21247.0], [46.5, 21247.0], [46.6, 21248.0], [46.7, 21248.0], [46.8, 21248.0], [46.9, 21250.0], [47.0, 21251.0], [47.1, 21253.0], [47.2, 21253.0], [47.3, 21254.0], [47.4, 21258.0], [47.5, 21258.0], [47.6, 21258.0], [47.7, 21260.0], [47.8, 21261.0], [47.9, 21262.0], [48.0, 21262.0], [48.1, 21265.0], [48.2, 21266.0], [48.3, 21268.0], [48.4, 21268.0], [48.5, 21269.0], [48.6, 21271.0], [48.7, 21271.0], [48.8, 21273.0], [48.9, 21274.0], [49.0, 21275.0], [49.1, 21275.0], [49.2, 21278.0], [49.3, 21278.0], [49.4, 21280.0], [49.5, 21280.0], [49.6, 21282.0], [49.7, 21283.0], [49.8, 21283.0], [49.9, 21283.0], [50.0, 21284.0], [50.1, 21287.0], [50.2, 21287.0], [50.3, 21288.0], [50.4, 21290.0], [50.5, 21291.0], [50.6, 21291.0], [50.7, 21295.0], [50.8, 21296.0], [50.9, 21298.0], [51.0, 21298.0], [51.1, 21298.0], [51.2, 21299.0], [51.3, 21299.0], [51.4, 21299.0], [51.5, 21301.0], [51.6, 21301.0], [51.7, 21301.0], [51.8, 21301.0], [51.9, 21302.0], [52.0, 21303.0], [52.1, 21303.0], [52.2, 21310.0], [52.3, 21311.0], [52.4, 21312.0], [52.5, 21312.0], [52.6, 21312.0], [52.7, 21314.0], [52.8, 21314.0], [52.9, 21314.0], [53.0, 21316.0], [53.1, 21316.0], [53.2, 21316.0], [53.3, 21316.0], [53.4, 21316.0], [53.5, 21317.0], [53.6, 21317.0], [53.7, 21318.0], [53.8, 21319.0], [53.9, 21321.0], [54.0, 21321.0], [54.1, 21321.0], [54.2, 21322.0], [54.3, 21324.0], [54.4, 21324.0], [54.5, 21326.0], [54.6, 21326.0], [54.7, 21327.0], [54.8, 21327.0], [54.9, 21328.0], [55.0, 21328.0], [55.1, 21328.0], [55.2, 21331.0], [55.3, 21332.0], [55.4, 21332.0], [55.5, 21332.0], [55.6, 21333.0], [55.7, 21333.0], [55.8, 21333.0], [55.9, 21333.0], [56.0, 21333.0], [56.1, 21337.0], [56.2, 21337.0], [56.3, 21337.0], [56.4, 21338.0], [56.5, 21338.0], [56.6, 21338.0], [56.7, 21338.0], [56.8, 21339.0], [56.9, 21339.0], [57.0, 21339.0], [57.1, 21344.0], [57.2, 21346.0], [57.3, 21347.0], [57.4, 21347.0], [57.5, 21352.0], [57.6, 21354.0], [57.7, 21354.0], [57.8, 21354.0], [57.9, 21357.0], [58.0, 21360.0], [58.1, 21360.0], [58.2, 21360.0], [58.3, 21361.0], [58.4, 21364.0], [58.5, 21364.0], [58.6, 21365.0], [58.7, 21366.0], [58.8, 21366.0], [58.9, 21366.0], [59.0, 21366.0], [59.1, 21366.0], [59.2, 21366.0], [59.3, 21366.0], [59.4, 21366.0], [59.5, 21367.0], [59.6, 21368.0], [59.7, 21368.0], [59.8, 21368.0], [59.9, 21368.0], [60.0, 21372.0], [60.1, 21372.0], [60.2, 21374.0], [60.3, 21374.0], [60.4, 21374.0], [60.5, 21374.0], [60.6, 21375.0], [60.7, 21381.0], [60.8, 21381.0], [60.9, 21381.0], [61.0, 21384.0], [61.1, 21388.0], [61.2, 21388.0], [61.3, 21389.0], [61.4, 21393.0], [61.5, 21394.0], [61.6, 21394.0], [61.7, 21396.0], [61.8, 21399.0], [61.9, 21399.0], [62.0, 21402.0], [62.1, 21402.0], [62.2, 21406.0], [62.3, 21406.0], [62.4, 21406.0], [62.5, 21410.0], [62.6, 21410.0], [62.7, 21410.0], [62.8, 21410.0], [62.9, 21411.0], [63.0, 21413.0], [63.1, 21413.0], [63.2, 21414.0], [63.3, 21415.0], [63.4, 21415.0], [63.5, 21416.0], [63.6, 21417.0], [63.7, 21418.0], [63.8, 21418.0], [63.9, 21425.0], [64.0, 21427.0], [64.1, 21428.0], [64.2, 21428.0], [64.3, 21428.0], [64.4, 21428.0], [64.5, 21429.0], [64.6, 21429.0], [64.7, 21430.0], [64.8, 21432.0], [64.9, 21434.0], [65.0, 21434.0], [65.1, 21438.0], [65.2, 21438.0], [65.3, 21438.0], [65.4, 21439.0], [65.5, 21441.0], [65.6, 21447.0], [65.7, 21447.0], [65.8, 21448.0], [65.9, 21449.0], [66.0, 21452.0], [66.1, 21452.0], [66.2, 21453.0], [66.3, 21456.0], [66.4, 21457.0], [66.5, 21457.0], [66.6, 21459.0], [66.7, 21460.0], [66.8, 21460.0], [66.9, 21462.0], [67.0, 21464.0], [67.1, 21464.0], [67.2, 21464.0], [67.3, 21464.0], [67.4, 21464.0], [67.5, 21465.0], [67.6, 21465.0], [67.7, 21465.0], [67.8, 21466.0], [67.9, 21468.0], [68.0, 21468.0], [68.1, 21469.0], [68.2, 21470.0], [68.3, 21471.0], [68.4, 21471.0], [68.5, 21471.0], [68.6, 21473.0], [68.7, 21473.0], [68.8, 21477.0], [68.9, 21481.0], [69.0, 21482.0], [69.1, 21482.0], [69.2, 21482.0], [69.3, 21483.0], [69.4, 21483.0], [69.5, 21483.0], [69.6, 21483.0], [69.7, 21485.0], [69.8, 21486.0], [69.9, 21486.0], [70.0, 21487.0], [70.1, 21490.0], [70.2, 21490.0], [70.3, 21491.0], [70.4, 21495.0], [70.5, 21499.0], [70.6, 21499.0], [70.7, 21501.0], [70.8, 21503.0], [70.9, 21505.0], [71.0, 21505.0], [71.1, 21506.0], [71.2, 21509.0], [71.3, 21512.0], [71.4, 21512.0], [71.5, 21512.0], [71.6, 21517.0], [71.7, 21517.0], [71.8, 21517.0], [71.9, 21518.0], [72.0, 21520.0], [72.1, 21520.0], [72.2, 21522.0], [72.3, 21523.0], [72.4, 21525.0], [72.5, 21525.0], [72.6, 21525.0], [72.7, 21527.0], [72.8, 21531.0], [72.9, 21531.0], [73.0, 21532.0], [73.1, 21534.0], [73.2, 21536.0], [73.3, 21536.0], [73.4, 21537.0], [73.5, 21539.0], [73.6, 21539.0], [73.7, 21540.0], [73.8, 21540.0], [73.9, 21543.0], [74.0, 21543.0], [74.1, 21543.0], [74.2, 21544.0], [74.3, 21546.0], [74.4, 21546.0], [74.5, 21546.0], [74.6, 21547.0], [74.7, 21547.0], [74.8, 21547.0], [74.9, 21551.0], [75.0, 21558.0], [75.1, 21558.0], [75.2, 21558.0], [75.3, 21558.0], [75.4, 21559.0], [75.5, 21559.0], [75.6, 21562.0], [75.7, 21562.0], [75.8, 21568.0], [75.9, 21568.0], [76.0, 21571.0], [76.1, 21575.0], [76.2, 21576.0], [76.3, 21576.0], [76.4, 21577.0], [76.5, 21577.0], [76.6, 21578.0], [76.7, 21578.0], [76.8, 21579.0], [76.9, 21579.0], [77.0, 21579.0], [77.1, 21579.0], [77.2, 21580.0], [77.3, 21584.0], [77.4, 21584.0], [77.5, 21586.0], [77.6, 21586.0], [77.7, 21587.0], [77.8, 21587.0], [77.9, 21588.0], [78.0, 21588.0], [78.1, 21589.0], [78.2, 21589.0], [78.3, 21590.0], [78.4, 21591.0], [78.5, 21591.0], [78.6, 21593.0], [78.7, 21594.0], [78.8, 21597.0], [78.9, 21597.0], [79.0, 21597.0], [79.1, 21598.0], [79.2, 21599.0], [79.3, 21599.0], [79.4, 21601.0], [79.5, 21601.0], [79.6, 21602.0], [79.7, 21602.0], [79.8, 21604.0], [79.9, 21606.0], [80.0, 21607.0], [80.1, 21607.0], [80.2, 21609.0], [80.3, 21610.0], [80.4, 21610.0], [80.5, 21613.0], [80.6, 21614.0], [80.7, 21616.0], [80.8, 21616.0], [80.9, 21617.0], [81.0, 21621.0], [81.1, 21625.0], [81.2, 21625.0], [81.3, 21626.0], [81.4, 21626.0], [81.5, 21626.0], [81.6, 21626.0], [81.7, 21627.0], [81.8, 21627.0], [81.9, 21627.0], [82.0, 21629.0], [82.1, 21632.0], [82.2, 21633.0], [82.3, 21633.0], [82.4, 21635.0], [82.5, 21638.0], [82.6, 21639.0], [82.7, 21639.0], [82.8, 21640.0], [82.9, 21640.0], [83.0, 21640.0], [83.1, 21640.0], [83.2, 21641.0], [83.3, 21641.0], [83.4, 21641.0], [83.5, 21642.0], [83.6, 21643.0], [83.7, 21643.0], [83.8, 21643.0], [83.9, 21645.0], [84.0, 21645.0], [84.1, 21646.0], [84.2, 21646.0], [84.3, 21647.0], [84.4, 21649.0], [84.5, 21650.0], [84.6, 21650.0], [84.7, 21653.0], [84.8, 21653.0], [84.9, 21656.0], [85.0, 21656.0], [85.1, 21658.0], [85.2, 21658.0], [85.3, 21658.0], [85.4, 21660.0], [85.5, 21660.0], [85.6, 21662.0], [85.7, 21662.0], [85.8, 21664.0], [85.9, 21667.0], [86.0, 21667.0], [86.1, 21667.0], [86.2, 21669.0], [86.3, 21670.0], [86.4, 21673.0], [86.5, 21673.0], [86.6, 21674.0], [86.7, 21678.0], [86.8, 21678.0], [86.9, 21679.0], [87.0, 21684.0], [87.1, 21688.0], [87.2, 21688.0], [87.3, 21688.0], [87.4, 21688.0], [87.5, 21691.0], [87.6, 21691.0], [87.7, 21696.0], [87.8, 21697.0], [87.9, 21698.0], [88.0, 21698.0], [88.1, 21699.0], [88.2, 21700.0], [88.3, 21703.0], [88.4, 21703.0], [88.5, 21706.0], [88.6, 21715.0], [88.7, 21715.0], [88.8, 21719.0], [88.9, 21723.0], [89.0, 21725.0], [89.1, 21725.0], [89.2, 21727.0], [89.3, 21728.0], [89.4, 21730.0], [89.5, 21730.0], [89.6, 21731.0], [89.7, 21732.0], [89.8, 21733.0], [89.9, 21733.0], [90.0, 21735.0], [90.1, 21736.0], [90.2, 21736.0], [90.3, 21741.0], [90.4, 21745.0], [90.5, 21746.0], [90.6, 21746.0], [90.7, 21747.0], [90.8, 21748.0], [90.9, 21756.0], [91.0, 21756.0], [91.1, 21763.0], [91.2, 21765.0], [91.3, 21768.0], [91.4, 21768.0], [91.5, 21778.0], [91.6, 21781.0], [91.7, 21781.0], [91.8, 21781.0], [91.9, 21785.0], [92.0, 21789.0], [92.1, 21789.0], [92.2, 21789.0], [92.3, 21793.0], [92.4, 21798.0], [92.5, 21798.0], [92.6, 21798.0], [92.7, 21800.0], [92.8, 21801.0], [92.9, 21801.0], [93.0, 21806.0], [93.1, 21809.0], [93.2, 21811.0], [93.3, 21811.0], [93.4, 21812.0], [93.5, 21812.0], [93.6, 21812.0], [93.7, 21821.0], [93.8, 21822.0], [93.9, 21825.0], [94.0, 21825.0], [94.1, 21829.0], [94.2, 21832.0], [94.3, 21833.0], [94.4, 21833.0], [94.5, 21833.0], [94.6, 21838.0], [94.7, 21838.0], [94.8, 21838.0], [94.9, 21842.0], [95.0, 21843.0], [95.1, 21843.0], [95.2, 21849.0], [95.3, 21849.0], [95.4, 21860.0], [95.5, 21860.0], [95.6, 21864.0], [95.7, 21894.0], [95.8, 21914.0], [95.9, 21914.0], [96.0, 21934.0], [96.1, 21955.0], [96.2, 21961.0], [96.3, 21961.0], [96.4, 21982.0], [96.5, 21985.0], [96.6, 21993.0], [96.7, 21993.0], [96.8, 21997.0], [96.9, 21998.0], [97.0, 21998.0], [97.1, 22006.0], [97.2, 22009.0], [97.3, 22038.0], [97.4, 22038.0], [97.5, 22080.0], [97.6, 22201.0], [97.7, 22205.0], [97.8, 22205.0], [97.9, 22252.0], [98.0, 22338.0], [98.1, 22375.0], [98.2, 22375.0], [98.3, 22455.0], [98.4, 22492.0], [98.5, 22492.0], [98.6, 22615.0], [98.7, 22656.0], [98.8, 22702.0], [98.9, 22702.0], [99.0, 22815.0], [99.1, 22951.0], [99.2, 22987.0], [99.3, 22987.0], [99.4, 23063.0], [99.5, 23088.0], [99.6, 23403.0], [99.7, 23403.0], [99.8, 23630.0], [99.9, 23979.0]], "isOverall": false, "label": "UPDATE Test", "isController": true}, {"data": [[0.0, 4027.0], [0.1, 4027.0], [0.2, 4114.0], [0.3, 4165.0], [0.4, 4165.0], [0.5, 4257.0], [0.6, 4296.0], [0.7, 4442.0], [0.8, 4442.0], [0.9, 4451.0], [1.0, 4531.0], [1.1, 4560.0], [1.2, 4560.0], [1.3, 4561.0], [1.4, 4619.0], [1.5, 4649.0], [1.6, 4649.0], [1.7, 4657.0], [1.8, 4660.0], [1.9, 4660.0], [2.0, 4681.0], [2.1, 4782.0], [2.2, 4872.0], [2.3, 4872.0], [2.4, 4876.0], [2.5, 4878.0], [2.6, 4889.0], [2.7, 4889.0], [2.8, 4906.0], [2.9, 4920.0], [3.0, 5018.0], [3.1, 5018.0], [3.2, 5018.0], [3.3, 5076.0], [3.4, 5076.0], [3.5, 5077.0], [3.6, 5091.0], [3.7, 5128.0], [3.8, 5128.0], [3.9, 5176.0], [4.0, 5185.0], [4.1, 5248.0], [4.2, 5248.0], [4.3, 5279.0], [4.4, 5282.0], [4.5, 5308.0], [4.6, 5308.0], [4.7, 5321.0], [4.8, 5340.0], [4.9, 5354.0], [5.0, 5354.0], [5.1, 5383.0], [5.2, 5436.0], [5.3, 5436.0], [5.4, 5452.0], [5.5, 5455.0], [5.6, 5475.0], [5.7, 5475.0], [5.8, 5475.0], [5.9, 5478.0], [6.0, 5480.0], [6.1, 5480.0], [6.2, 5482.0], [6.3, 5486.0], [6.4, 5492.0], [6.5, 5492.0], [6.6, 5493.0], [6.7, 5495.0], [6.8, 5495.0], [6.9, 5497.0], [7.0, 5499.0], [7.1, 5503.0], [7.2, 5503.0], [7.3, 5507.0], [7.4, 5515.0], [7.5, 5518.0], [7.6, 5518.0], [7.7, 5518.0], [7.8, 5519.0], [7.9, 5533.0], [8.0, 5533.0], [8.1, 5538.0], [8.2, 5540.0], [8.3, 5541.0], [8.4, 5541.0], [8.5, 5541.0], [8.6, 5543.0], [8.7, 5543.0], [8.8, 5544.0], [8.9, 5545.0], [9.0, 5549.0], [9.1, 5549.0], [9.2, 5553.0], [9.3, 5560.0], [9.4, 5562.0], [9.5, 5562.0], [9.6, 5563.0], [9.7, 5564.0], [9.8, 5567.0], [9.9, 5567.0], [10.0, 5569.0], [10.1, 5569.0], [10.2, 5569.0], [10.3, 5573.0], [10.4, 5578.0], [10.5, 5578.0], [10.6, 5578.0], [10.7, 5579.0], [10.8, 5579.0], [10.9, 5580.0], [11.0, 5580.0], [11.1, 5583.0], [11.2, 5584.0], [11.3, 5588.0], [11.4, 5588.0], [11.5, 5588.0], [11.6, 5593.0], [11.7, 5593.0], [11.8, 5600.0], [11.9, 5611.0], [12.0, 5611.0], [12.1, 5611.0], [12.2, 5613.0], [12.3, 5614.0], [12.4, 5614.0], [12.5, 5614.0], [12.6, 5614.0], [12.7, 5615.0], [12.8, 5617.0], [12.9, 5617.0], [13.0, 5619.0], [13.1, 5619.0], [13.2, 5621.0], [13.3, 5621.0], [13.4, 5622.0], [13.5, 5627.0], [13.6, 5627.0], [13.7, 5628.0], [13.8, 5633.0], [13.9, 5633.0], [14.0, 5633.0], [14.1, 5634.0], [14.2, 5635.0], [14.3, 5636.0], [14.4, 5636.0], [14.5, 5643.0], [14.6, 5647.0], [14.7, 5648.0], [14.8, 5648.0], [14.9, 5649.0], [15.0, 5651.0], [15.1, 5651.0], [15.2, 5651.0], [15.3, 5652.0], [15.4, 5654.0], [15.5, 5654.0], [15.6, 5658.0], [15.7, 5660.0], [15.8, 5662.0], [15.9, 5662.0], [16.0, 5662.0], [16.1, 5667.0], [16.2, 5667.0], [16.3, 5667.0], [16.4, 5669.0], [16.5, 5669.0], [16.6, 5670.0], [16.7, 5670.0], [16.8, 5670.0], [16.9, 5671.0], [17.0, 5671.0], [17.1, 5673.0], [17.2, 5673.0], [17.3, 5676.0], [17.4, 5676.0], [17.5, 5676.0], [17.6, 5684.0], [17.7, 5684.0], [17.8, 5684.0], [17.9, 5684.0], [18.0, 5687.0], [18.1, 5689.0], [18.2, 5689.0], [18.3, 5690.0], [18.4, 5691.0], [18.5, 5691.0], [18.6, 5692.0], [18.7, 5693.0], [18.8, 5694.0], [18.9, 5694.0], [19.0, 5695.0], [19.1, 5696.0], [19.2, 5696.0], [19.3, 5696.0], [19.4, 5697.0], [19.5, 5700.0], [19.6, 5701.0], [19.7, 5701.0], [19.8, 5703.0], [19.9, 5704.0], [20.0, 5704.0], [20.1, 5704.0], [20.2, 5705.0], [20.3, 5708.0], [20.4, 5708.0], [20.5, 5709.0], [20.6, 5709.0], [20.7, 5710.0], [20.8, 5710.0], [20.9, 5710.0], [21.0, 5711.0], [21.1, 5711.0], [21.2, 5711.0], [21.3, 5712.0], [21.4, 5713.0], [21.5, 5715.0], [21.6, 5715.0], [21.7, 5716.0], [21.8, 5717.0], [21.9, 5717.0], [22.0, 5717.0], [22.1, 5719.0], [22.2, 5720.0], [22.3, 5720.0], [22.4, 5720.0], [22.5, 5722.0], [22.6, 5722.0], [22.7, 5722.0], [22.8, 5723.0], [22.9, 5724.0], [23.0, 5725.0], [23.1, 5725.0], [23.2, 5726.0], [23.3, 5728.0], [23.4, 5728.0], [23.5, 5729.0], [23.6, 5731.0], [23.7, 5731.0], [23.8, 5731.0], [23.9, 5733.0], [24.0, 5733.0], [24.1, 5734.0], [24.2, 5734.0], [24.3, 5735.0], [24.4, 5735.0], [24.5, 5737.0], [24.6, 5737.0], [24.7, 5738.0], [24.8, 5738.0], [24.9, 5738.0], [25.0, 5738.0], [25.1, 5740.0], [25.2, 5741.0], [25.3, 5741.0], [25.4, 5743.0], [25.5, 5746.0], [25.6, 5747.0], [25.7, 5747.0], [25.8, 5751.0], [25.9, 5754.0], [26.0, 5755.0], [26.1, 5755.0], [26.2, 5755.0], [26.3, 5758.0], [26.4, 5758.0], [26.5, 5758.0], [26.6, 5760.0], [26.7, 5761.0], [26.8, 5761.0], [26.9, 5761.0], [27.0, 5762.0], [27.1, 5762.0], [27.2, 5762.0], [27.3, 5763.0], [27.4, 5763.0], [27.5, 5767.0], [27.6, 5767.0], [27.7, 5768.0], [27.8, 5768.0], [27.9, 5769.0], [28.0, 5769.0], [28.1, 5769.0], [28.2, 5769.0], [28.3, 5769.0], [28.4, 5769.0], [28.5, 5770.0], [28.6, 5771.0], [28.7, 5771.0], [28.8, 5776.0], [28.9, 5779.0], [29.0, 5780.0], [29.1, 5780.0], [29.2, 5780.0], [29.3, 5780.0], [29.4, 5780.0], [29.5, 5780.0], [29.6, 5781.0], [29.7, 5781.0], [29.8, 5782.0], [29.9, 5782.0], [30.0, 5784.0], [30.1, 5785.0], [30.2, 5785.0], [30.3, 5787.0], [30.4, 5788.0], [30.5, 5792.0], [30.6, 5792.0], [30.7, 5792.0], [30.8, 5793.0], [30.9, 5795.0], [31.0, 5795.0], [31.1, 5796.0], [31.2, 5798.0], [31.3, 5799.0], [31.4, 5799.0], [31.5, 5799.0], [31.6, 5800.0], [31.7, 5800.0], [31.8, 5801.0], [31.9, 5801.0], [32.0, 5802.0], [32.1, 5802.0], [32.2, 5802.0], [32.3, 5805.0], [32.4, 5806.0], [32.5, 5806.0], [32.6, 5807.0], [32.7, 5807.0], [32.8, 5810.0], [32.9, 5810.0], [33.0, 5811.0], [33.1, 5813.0], [33.2, 5814.0], [33.3, 5814.0], [33.4, 5815.0], [33.5, 5815.0], [33.6, 5815.0], [33.7, 5816.0], [33.8, 5816.0], [33.9, 5817.0], [34.0, 5817.0], [34.1, 5818.0], [34.2, 5818.0], [34.3, 5819.0], [34.4, 5819.0], [34.5, 5819.0], [34.6, 5820.0], [34.7, 5820.0], [34.8, 5820.0], [34.9, 5820.0], [35.0, 5821.0], [35.1, 5821.0], [35.2, 5822.0], [35.3, 5822.0], [35.4, 5822.0], [35.5, 5822.0], [35.6, 5822.0], [35.7, 5823.0], [35.8, 5823.0], [35.9, 5823.0], [36.0, 5823.0], [36.1, 5824.0], [36.2, 5825.0], [36.3, 5825.0], [36.4, 5825.0], [36.5, 5826.0], [36.6, 5827.0], [36.7, 5827.0], [36.8, 5827.0], [36.9, 5827.0], [37.0, 5827.0], [37.1, 5828.0], [37.2, 5828.0], [37.3, 5828.0], [37.4, 5828.0], [37.5, 5829.0], [37.6, 5830.0], [37.7, 5830.0], [37.8, 5830.0], [37.9, 5832.0], [38.0, 5832.0], [38.1, 5833.0], [38.2, 5833.0], [38.3, 5834.0], [38.4, 5836.0], [38.5, 5836.0], [38.6, 5836.0], [38.7, 5837.0], [38.8, 5838.0], [38.9, 5838.0], [39.0, 5839.0], [39.1, 5839.0], [39.2, 5841.0], [39.3, 5841.0], [39.4, 5842.0], [39.5, 5842.0], [39.6, 5843.0], [39.7, 5843.0], [39.8, 5843.0], [39.9, 5846.0], [40.0, 5846.0], [40.1, 5846.0], [40.2, 5848.0], [40.3, 5848.0], [40.4, 5848.0], [40.5, 5848.0], [40.6, 5850.0], [40.7, 5850.0], [40.8, 5850.0], [40.9, 5852.0], [41.0, 5853.0], [41.1, 5854.0], [41.2, 5854.0], [41.3, 5855.0], [41.4, 5856.0], [41.5, 5856.0], [41.6, 5856.0], [41.7, 5856.0], [41.8, 5857.0], [41.9, 5857.0], [42.0, 5857.0], [42.1, 5861.0], [42.2, 5861.0], [42.3, 5861.0], [42.4, 5863.0], [42.5, 5864.0], [42.6, 5868.0], [42.7, 5868.0], [42.8, 5869.0], [42.9, 5869.0], [43.0, 5870.0], [43.1, 5870.0], [43.2, 5871.0], [43.3, 5871.0], [43.4, 5871.0], [43.5, 5873.0], [43.6, 5874.0], [43.7, 5874.0], [43.8, 5874.0], [43.9, 5875.0], [44.0, 5878.0], [44.1, 5879.0], [44.2, 5879.0], [44.3, 5880.0], [44.4, 5881.0], [44.5, 5883.0], [44.6, 5883.0], [44.7, 5883.0], [44.8, 5884.0], [44.9, 5884.0], [45.0, 5884.0], [45.1, 5884.0], [45.2, 5886.0], [45.3, 5886.0], [45.4, 5887.0], [45.5, 5889.0], [45.6, 5890.0], [45.7, 5890.0], [45.8, 5893.0], [45.9, 5893.0], [46.0, 5893.0], [46.1, 5893.0], [46.2, 5896.0], [46.3, 5898.0], [46.4, 5898.0], [46.5, 5898.0], [46.6, 5900.0], [46.7, 5901.0], [46.8, 5901.0], [46.9, 5902.0], [47.0, 5902.0], [47.1, 5904.0], [47.2, 5904.0], [47.3, 5904.0], [47.4, 5904.0], [47.5, 5905.0], [47.6, 5905.0], [47.7, 5905.0], [47.8, 5908.0], [47.9, 5909.0], [48.0, 5909.0], [48.1, 5911.0], [48.2, 5912.0], [48.3, 5914.0], [48.4, 5914.0], [48.5, 5915.0], [48.6, 5916.0], [48.7, 5916.0], [48.8, 5916.0], [48.9, 5917.0], [49.0, 5918.0], [49.1, 5918.0], [49.2, 5919.0], [49.3, 5919.0], [49.4, 5921.0], [49.5, 5921.0], [49.6, 5922.0], [49.7, 5922.0], [49.8, 5922.0], [49.9, 5922.0], [50.0, 5922.0], [50.1, 5925.0], [50.2, 5925.0], [50.3, 5926.0], [50.4, 5926.0], [50.5, 5927.0], [50.6, 5927.0], [50.7, 5928.0], [50.8, 5928.0], [50.9, 5931.0], [51.0, 5931.0], [51.1, 5932.0], [51.2, 5933.0], [51.3, 5937.0], [51.4, 5937.0], [51.5, 5940.0], [51.6, 5940.0], [51.7, 5940.0], [51.8, 5940.0], [51.9, 5942.0], [52.0, 5943.0], [52.1, 5943.0], [52.2, 5944.0], [52.3, 5945.0], [52.4, 5945.0], [52.5, 5945.0], [52.6, 5947.0], [52.7, 5948.0], [52.8, 5948.0], [52.9, 5948.0], [53.0, 5948.0], [53.1, 5951.0], [53.2, 5952.0], [53.3, 5952.0], [53.4, 5952.0], [53.5, 5952.0], [53.6, 5952.0], [53.7, 5952.0], [53.8, 5955.0], [53.9, 5956.0], [54.0, 5956.0], [54.1, 5956.0], [54.2, 5956.0], [54.3, 5956.0], [54.4, 5956.0], [54.5, 5957.0], [54.6, 5957.0], [54.7, 5957.0], [54.8, 5957.0], [54.9, 5959.0], [55.0, 5960.0], [55.1, 5960.0], [55.2, 5965.0], [55.3, 5966.0], [55.4, 5966.0], [55.5, 5966.0], [55.6, 5968.0], [55.7, 5969.0], [55.8, 5972.0], [55.9, 5972.0], [56.0, 5976.0], [56.1, 5977.0], [56.2, 5979.0], [56.3, 5979.0], [56.4, 5982.0], [56.5, 5982.0], [56.6, 5983.0], [56.7, 5983.0], [56.8, 5984.0], [56.9, 5985.0], [57.0, 5985.0], [57.1, 5986.0], [57.2, 5988.0], [57.3, 5989.0], [57.4, 5989.0], [57.5, 5992.0], [57.6, 5992.0], [57.7, 5993.0], [57.8, 5993.0], [57.9, 5994.0], [58.0, 5994.0], [58.1, 5994.0], [58.2, 5994.0], [58.3, 5995.0], [58.4, 5995.0], [58.5, 5995.0], [58.6, 5997.0], [58.7, 6000.0], [58.8, 6001.0], [58.9, 6001.0], [59.0, 6002.0], [59.1, 6007.0], [59.2, 6010.0], [59.3, 6010.0], [59.4, 6013.0], [59.5, 6019.0], [59.6, 6019.0], [59.7, 6019.0], [59.8, 6020.0], [59.9, 6021.0], [60.0, 6021.0], [60.1, 6021.0], [60.2, 6022.0], [60.3, 6022.0], [60.4, 6022.0], [60.5, 6023.0], [60.6, 6025.0], [60.7, 6025.0], [60.8, 6025.0], [60.9, 6025.0], [61.0, 6026.0], [61.1, 6027.0], [61.2, 6027.0], [61.3, 6028.0], [61.4, 6028.0], [61.5, 6029.0], [61.6, 6029.0], [61.7, 6031.0], [61.8, 6032.0], [61.9, 6032.0], [62.0, 6035.0], [62.1, 6036.0], [62.2, 6036.0], [62.3, 6036.0], [62.4, 6037.0], [62.5, 6039.0], [62.6, 6040.0], [62.7, 6040.0], [62.8, 6043.0], [62.9, 6043.0], [63.0, 6044.0], [63.1, 6044.0], [63.2, 6046.0], [63.3, 6048.0], [63.4, 6048.0], [63.5, 6049.0], [63.6, 6051.0], [63.7, 6054.0], [63.8, 6054.0], [63.9, 6058.0], [64.0, 6059.0], [64.1, 6060.0], [64.2, 6060.0], [64.3, 6062.0], [64.4, 6062.0], [64.5, 6062.0], [64.6, 6062.0], [64.7, 6063.0], [64.8, 6064.0], [64.9, 6064.0], [65.0, 6064.0], [65.1, 6065.0], [65.2, 6066.0], [65.3, 6066.0], [65.4, 6068.0], [65.5, 6076.0], [65.6, 6077.0], [65.7, 6077.0], [65.8, 6077.0], [65.9, 6077.0], [66.0, 6079.0], [66.1, 6079.0], [66.2, 6079.0], [66.3, 6079.0], [66.4, 6081.0], [66.5, 6081.0], [66.6, 6091.0], [66.7, 6095.0], [66.8, 6095.0], [66.9, 6096.0], [67.0, 6098.0], [67.1, 6098.0], [67.2, 6098.0], [67.3, 6098.0], [67.4, 6098.0], [67.5, 6100.0], [67.6, 6100.0], [67.7, 6100.0], [67.8, 6100.0], [67.9, 6101.0], [68.0, 6101.0], [68.1, 6107.0], [68.2, 6110.0], [68.3, 6111.0], [68.4, 6111.0], [68.5, 6111.0], [68.6, 6113.0], [68.7, 6113.0], [68.8, 6113.0], [68.9, 6114.0], [69.0, 6119.0], [69.1, 6119.0], [69.2, 6120.0], [69.3, 6120.0], [69.4, 6122.0], [69.5, 6122.0], [69.6, 6122.0], [69.7, 6124.0], [69.8, 6124.0], [69.9, 6124.0], [70.0, 6126.0], [70.1, 6127.0], [70.2, 6127.0], [70.3, 6129.0], [70.4, 6130.0], [70.5, 6130.0], [70.6, 6130.0], [70.7, 6130.0], [70.8, 6134.0], [70.9, 6135.0], [71.0, 6135.0], [71.1, 6140.0], [71.2, 6140.0], [71.3, 6146.0], [71.4, 6146.0], [71.5, 6147.0], [71.6, 6147.0], [71.7, 6147.0], [71.8, 6151.0], [71.9, 6155.0], [72.0, 6155.0], [72.1, 6155.0], [72.2, 6156.0], [72.3, 6158.0], [72.4, 6159.0], [72.5, 6159.0], [72.6, 6159.0], [72.7, 6159.0], [72.8, 6163.0], [72.9, 6163.0], [73.0, 6167.0], [73.1, 6171.0], [73.2, 6176.0], [73.3, 6176.0], [73.4, 6177.0], [73.5, 6177.0], [73.6, 6177.0], [73.7, 6178.0], [73.8, 6180.0], [73.9, 6183.0], [74.0, 6183.0], [74.1, 6184.0], [74.2, 6185.0], [74.3, 6186.0], [74.4, 6186.0], [74.5, 6187.0], [74.6, 6188.0], [74.7, 6188.0], [74.8, 6188.0], [74.9, 6188.0], [75.0, 6189.0], [75.1, 6189.0], [75.2, 6190.0], [75.3, 6191.0], [75.4, 6192.0], [75.5, 6192.0], [75.6, 6194.0], [75.7, 6197.0], [75.8, 6202.0], [75.9, 6202.0], [76.0, 6207.0], [76.1, 6209.0], [76.2, 6212.0], [76.3, 6212.0], [76.4, 6213.0], [76.5, 6213.0], [76.6, 6215.0], [76.7, 6215.0], [76.8, 6216.0], [76.9, 6219.0], [77.0, 6219.0], [77.1, 6222.0], [77.2, 6225.0], [77.3, 6228.0], [77.4, 6228.0], [77.5, 6228.0], [77.6, 6229.0], [77.7, 6231.0], [77.8, 6231.0], [77.9, 6231.0], [78.0, 6231.0], [78.1, 6232.0], [78.2, 6232.0], [78.3, 6235.0], [78.4, 6235.0], [78.5, 6235.0], [78.6, 6237.0], [78.7, 6239.0], [78.8, 6244.0], [78.9, 6244.0], [79.0, 6245.0], [79.1, 6248.0], [79.2, 6248.0], [79.3, 6248.0], [79.4, 6248.0], [79.5, 6249.0], [79.6, 6252.0], [79.7, 6252.0], [79.8, 6255.0], [79.9, 6256.0], [80.0, 6259.0], [80.1, 6259.0], [80.2, 6260.0], [80.3, 6264.0], [80.4, 6264.0], [80.5, 6264.0], [80.6, 6266.0], [80.7, 6267.0], [80.8, 6267.0], [80.9, 6268.0], [81.0, 6278.0], [81.1, 6280.0], [81.2, 6280.0], [81.3, 6281.0], [81.4, 6282.0], [81.5, 6283.0], [81.6, 6283.0], [81.7, 6288.0], [81.8, 6291.0], [81.9, 6291.0], [82.0, 6292.0], [82.1, 6293.0], [82.2, 6293.0], [82.3, 6293.0], [82.4, 6295.0], [82.5, 6298.0], [82.6, 6302.0], [82.7, 6302.0], [82.8, 6304.0], [82.9, 6307.0], [83.0, 6307.0], [83.1, 6307.0], [83.2, 6311.0], [83.3, 6312.0], [83.4, 6312.0], [83.5, 6312.0], [83.6, 6314.0], [83.7, 6321.0], [83.8, 6321.0], [83.9, 6321.0], [84.0, 6322.0], [84.1, 6322.0], [84.2, 6322.0], [84.3, 6327.0], [84.4, 6329.0], [84.5, 6330.0], [84.6, 6330.0], [84.7, 6332.0], [84.8, 6333.0], [84.9, 6334.0], [85.0, 6334.0], [85.1, 6335.0], [85.2, 6338.0], [85.3, 6338.0], [85.4, 6338.0], [85.5, 6338.0], [85.6, 6343.0], [85.7, 6343.0], [85.8, 6346.0], [85.9, 6351.0], [86.0, 6354.0], [86.1, 6354.0], [86.2, 6355.0], [86.3, 6357.0], [86.4, 6358.0], [86.5, 6358.0], [86.6, 6359.0], [86.7, 6360.0], [86.8, 6360.0], [86.9, 6364.0], [87.0, 6367.0], [87.1, 6368.0], [87.2, 6368.0], [87.3, 6374.0], [87.4, 6375.0], [87.5, 6379.0], [87.6, 6379.0], [87.7, 6382.0], [87.8, 6385.0], [87.9, 6386.0], [88.0, 6386.0], [88.1, 6391.0], [88.2, 6392.0], [88.3, 6392.0], [88.4, 6392.0], [88.5, 6393.0], [88.6, 6399.0], [88.7, 6399.0], [88.8, 6404.0], [88.9, 6404.0], [89.0, 6405.0], [89.1, 6405.0], [89.2, 6412.0], [89.3, 6415.0], [89.4, 6419.0], [89.5, 6419.0], [89.6, 6421.0], [89.7, 6422.0], [89.8, 6424.0], [89.9, 6424.0], [90.0, 6426.0], [90.1, 6428.0], [90.2, 6428.0], [90.3, 6431.0], [90.4, 6434.0], [90.5, 6438.0], [90.6, 6438.0], [90.7, 6441.0], [90.8, 6444.0], [90.9, 6444.0], [91.0, 6444.0], [91.1, 6446.0], [91.2, 6449.0], [91.3, 6455.0], [91.4, 6455.0], [91.5, 6456.0], [91.6, 6458.0], [91.7, 6458.0], [91.8, 6459.0], [91.9, 6460.0], [92.0, 6462.0], [92.1, 6462.0], [92.2, 6464.0], [92.3, 6466.0], [92.4, 6466.0], [92.5, 6466.0], [92.6, 6474.0], [92.7, 6478.0], [92.8, 6479.0], [92.9, 6479.0], [93.0, 6480.0], [93.1, 6483.0], [93.2, 6485.0], [93.3, 6485.0], [93.4, 6486.0], [93.5, 6488.0], [93.6, 6488.0], [93.7, 6499.0], [93.8, 6502.0], [93.9, 6503.0], [94.0, 6503.0], [94.1, 6504.0], [94.2, 6504.0], [94.3, 6504.0], [94.4, 6504.0], [94.5, 6505.0], [94.6, 6509.0], [94.7, 6509.0], [94.8, 6509.0], [94.9, 6513.0], [95.0, 6516.0], [95.1, 6516.0], [95.2, 6518.0], [95.3, 6520.0], [95.4, 6525.0], [95.5, 6525.0], [95.6, 6530.0], [95.7, 6537.0], [95.8, 6547.0], [95.9, 6547.0], [96.0, 6552.0], [96.1, 6557.0], [96.2, 6557.0], [96.3, 6557.0], [96.4, 6560.0], [96.5, 6560.0], [96.6, 6561.0], [96.7, 6561.0], [96.8, 6562.0], [96.9, 6562.0], [97.0, 6562.0], [97.1, 6566.0], [97.2, 6569.0], [97.3, 6577.0], [97.4, 6577.0], [97.5, 6580.0], [97.6, 6581.0], [97.7, 6597.0], [97.8, 6597.0], [97.9, 6633.0], [98.0, 6636.0], [98.1, 6652.0], [98.2, 6652.0], [98.3, 6660.0], [98.4, 6673.0], [98.5, 6673.0], [98.6, 6700.0], [98.7, 6709.0], [98.8, 6729.0], [98.9, 6729.0], [99.0, 6738.0], [99.1, 6746.0], [99.2, 6767.0], [99.3, 6767.0], [99.4, 6845.0], [99.5, 6861.0], [99.6, 6880.0], [99.7, 6880.0], [99.8, 6897.0], [99.9, 6941.0]], "isOverall": false, "label": "Request Login Page", "isController": false}, {"data": [[0.0, 2214.0], [0.1, 2214.0], [0.2, 2245.0], [0.3, 2254.0], [0.4, 2254.0], [0.5, 2262.0], [0.6, 2293.0], [0.7, 2293.0], [0.8, 2308.0], [0.9, 2320.0], [1.0, 2324.0], [1.1, 2324.0], [1.2, 2325.0], [1.3, 2331.0], [1.4, 2331.0], [1.5, 2333.0], [1.6, 2333.0], [1.7, 2333.0], [1.8, 2337.0], [1.9, 2347.0], [2.0, 2348.0], [2.1, 2348.0], [2.2, 2350.0], [2.3, 2353.0], [2.4, 2353.0], [2.5, 2355.0], [2.6, 2358.0], [2.7, 2358.0], [2.8, 2365.0], [2.9, 2368.0], [3.0, 2369.0], [3.1, 2369.0], [3.2, 2371.0], [3.3, 2373.0], [3.4, 2373.0], [3.5, 2374.0], [3.6, 2375.0], [3.7, 2375.0], [3.8, 2379.0], [3.9, 2385.0], [4.0, 2387.0], [4.1, 2387.0], [4.2, 2392.0], [4.3, 2393.0], [4.4, 2393.0], [4.5, 2401.0], [4.6, 2402.0], [4.7, 2402.0], [4.8, 2403.0], [4.9, 2403.0], [5.0, 2405.0], [5.1, 2405.0], [5.2, 2406.0], [5.3, 2408.0], [5.4, 2408.0], [5.5, 2408.0], [5.6, 2409.0], [5.7, 2409.0], [5.8, 2412.0], [5.9, 2414.0], [6.0, 2414.0], [6.1, 2415.0], [6.2, 2416.0], [6.3, 2421.0], [6.4, 2421.0], [6.5, 2423.0], [6.6, 2429.0], [6.7, 2429.0], [6.8, 2429.0], [6.9, 2431.0], [7.0, 2431.0], [7.1, 2432.0], [7.2, 2432.0], [7.3, 2436.0], [7.4, 2436.0], [7.5, 2437.0], [7.6, 2439.0], [7.7, 2439.0], [7.8, 2441.0], [7.9, 2443.0], [8.0, 2443.0], [8.1, 2443.0], [8.2, 2444.0], [8.3, 2445.0], [8.4, 2445.0], [8.5, 2449.0], [8.6, 2450.0], [8.7, 2450.0], [8.8, 2454.0], [8.9, 2455.0], [9.0, 2455.0], [9.1, 2457.0], [9.2, 2461.0], [9.3, 2464.0], [9.4, 2464.0], [9.5, 2464.0], [9.6, 2464.0], [9.7, 2464.0], [9.8, 2468.0], [9.9, 2469.0], [10.0, 2470.0], [10.1, 2470.0], [10.2, 2475.0], [10.3, 2475.0], [10.4, 2475.0], [10.5, 2475.0], [10.6, 2477.0], [10.7, 2477.0], [10.8, 2478.0], [10.9, 2479.0], [11.0, 2480.0], [11.1, 2480.0], [11.2, 2481.0], [11.3, 2482.0], [11.4, 2482.0], [11.5, 2483.0], [11.6, 2484.0], [11.7, 2484.0], [11.8, 2489.0], [11.9, 2490.0], [12.0, 2492.0], [12.1, 2492.0], [12.2, 2492.0], [12.3, 2494.0], [12.4, 2494.0], [12.5, 2494.0], [12.6, 2495.0], [12.7, 2495.0], [12.8, 2495.0], [12.9, 2496.0], [13.0, 2502.0], [13.1, 2502.0], [13.2, 2502.0], [13.3, 2503.0], [13.4, 2503.0], [13.5, 2504.0], [13.6, 2505.0], [13.7, 2505.0], [13.8, 2506.0], [13.9, 2507.0], [14.0, 2507.0], [14.1, 2507.0], [14.2, 2508.0], [14.3, 2509.0], [14.4, 2509.0], [14.5, 2510.0], [14.6, 2511.0], [14.7, 2511.0], [14.8, 2512.0], [14.9, 2513.0], [15.0, 2513.0], [15.1, 2513.0], [15.2, 2515.0], [15.3, 2516.0], [15.4, 2516.0], [15.5, 2518.0], [15.6, 2518.0], [15.7, 2518.0], [15.8, 2518.0], [15.9, 2519.0], [16.0, 2520.0], [16.1, 2520.0], [16.2, 2522.0], [16.3, 2523.0], [16.4, 2523.0], [16.5, 2523.0], [16.6, 2525.0], [16.7, 2525.0], [16.8, 2526.0], [16.9, 2527.0], [17.0, 2529.0], [17.1, 2529.0], [17.2, 2529.0], [17.3, 2531.0], [17.4, 2531.0], [17.5, 2531.0], [17.6, 2533.0], [17.7, 2533.0], [17.8, 2534.0], [17.9, 2535.0], [18.0, 2536.0], [18.1, 2536.0], [18.2, 2537.0], [18.3, 2538.0], [18.4, 2538.0], [18.5, 2542.0], [18.6, 2543.0], [18.7, 2543.0], [18.8, 2544.0], [18.9, 2545.0], [19.0, 2545.0], [19.1, 2545.0], [19.2, 2545.0], [19.3, 2546.0], [19.4, 2546.0], [19.5, 2548.0], [19.6, 2548.0], [19.7, 2548.0], [19.8, 2550.0], [19.9, 2550.0], [20.0, 2551.0], [20.1, 2551.0], [20.2, 2551.0], [20.3, 2552.0], [20.4, 2552.0], [20.5, 2552.0], [20.6, 2553.0], [20.7, 2553.0], [20.8, 2553.0], [20.9, 2554.0], [21.0, 2554.0], [21.1, 2554.0], [21.2, 2556.0], [21.3, 2557.0], [21.4, 2557.0], [21.5, 2558.0], [21.6, 2559.0], [21.7, 2559.0], [21.8, 2560.0], [21.9, 2562.0], [22.0, 2563.0], [22.1, 2563.0], [22.2, 2563.0], [22.3, 2565.0], [22.4, 2565.0], [22.5, 2566.0], [22.6, 2566.0], [22.7, 2566.0], [22.8, 2567.0], [22.9, 2571.0], [23.0, 2572.0], [23.1, 2572.0], [23.2, 2572.0], [23.3, 2572.0], [23.4, 2572.0], [23.5, 2575.0], [23.6, 2576.0], [23.7, 2576.0], [23.8, 2578.0], [23.9, 2580.0], [24.0, 2581.0], [24.1, 2581.0], [24.2, 2581.0], [24.3, 2584.0], [24.4, 2584.0], [24.5, 2585.0], [24.6, 2586.0], [24.7, 2586.0], [24.8, 2587.0], [24.9, 2588.0], [25.0, 2590.0], [25.1, 2590.0], [25.2, 2592.0], [25.3, 2593.0], [25.4, 2593.0], [25.5, 2594.0], [25.6, 2594.0], [25.7, 2594.0], [25.8, 2595.0], [25.9, 2595.0], [26.0, 2596.0], [26.1, 2596.0], [26.2, 2596.0], [26.3, 2596.0], [26.4, 2596.0], [26.5, 2597.0], [26.6, 2597.0], [26.7, 2597.0], [26.8, 2598.0], [26.9, 2601.0], [27.0, 2601.0], [27.1, 2601.0], [27.2, 2602.0], [27.3, 2602.0], [27.4, 2602.0], [27.5, 2603.0], [27.6, 2603.0], [27.7, 2603.0], [27.8, 2604.0], [27.9, 2610.0], [28.0, 2611.0], [28.1, 2611.0], [28.2, 2612.0], [28.3, 2612.0], [28.4, 2612.0], [28.5, 2612.0], [28.6, 2613.0], [28.7, 2613.0], [28.8, 2613.0], [28.9, 2613.0], [29.0, 2613.0], [29.1, 2613.0], [29.2, 2613.0], [29.3, 2614.0], [29.4, 2614.0], [29.5, 2615.0], [29.6, 2615.0], [29.7, 2615.0], [29.8, 2615.0], [29.9, 2616.0], [30.0, 2617.0], [30.1, 2617.0], [30.2, 2618.0], [30.3, 2618.0], [30.4, 2618.0], [30.5, 2619.0], [30.6, 2621.0], [30.7, 2621.0], [30.8, 2621.0], [30.9, 2621.0], [31.0, 2622.0], [31.1, 2622.0], [31.2, 2623.0], [31.3, 2629.0], [31.4, 2629.0], [31.5, 2630.0], [31.6, 2630.0], [31.7, 2630.0], [31.8, 2631.0], [31.9, 2631.0], [32.0, 2631.0], [32.1, 2631.0], [32.2, 2632.0], [32.3, 2633.0], [32.4, 2633.0], [32.5, 2634.0], [32.6, 2634.0], [32.7, 2634.0], [32.8, 2634.0], [32.9, 2635.0], [33.0, 2635.0], [33.1, 2635.0], [33.2, 2636.0], [33.3, 2636.0], [33.4, 2636.0], [33.5, 2638.0], [33.6, 2638.0], [33.7, 2638.0], [33.8, 2640.0], [33.9, 2641.0], [34.0, 2641.0], [34.1, 2641.0], [34.2, 2641.0], [34.3, 2642.0], [34.4, 2642.0], [34.5, 2643.0], [34.6, 2644.0], [34.7, 2644.0], [34.8, 2644.0], [34.9, 2645.0], [35.0, 2647.0], [35.1, 2647.0], [35.2, 2648.0], [35.3, 2648.0], [35.4, 2648.0], [35.5, 2648.0], [35.6, 2648.0], [35.7, 2648.0], [35.8, 2650.0], [35.9, 2650.0], [36.0, 2650.0], [36.1, 2650.0], [36.2, 2650.0], [36.3, 2650.0], [36.4, 2650.0], [36.5, 2651.0], [36.6, 2652.0], [36.7, 2652.0], [36.8, 2653.0], [36.9, 2653.0], [37.0, 2655.0], [37.1, 2655.0], [37.2, 2656.0], [37.3, 2661.0], [37.4, 2661.0], [37.5, 2663.0], [37.6, 2665.0], [37.7, 2665.0], [37.8, 2665.0], [37.9, 2666.0], [38.0, 2668.0], [38.1, 2668.0], [38.2, 2668.0], [38.3, 2669.0], [38.4, 2669.0], [38.5, 2670.0], [38.6, 2670.0], [38.7, 2670.0], [38.8, 2670.0], [38.9, 2671.0], [39.0, 2672.0], [39.1, 2672.0], [39.2, 2673.0], [39.3, 2674.0], [39.4, 2674.0], [39.5, 2675.0], [39.6, 2676.0], [39.7, 2676.0], [39.8, 2676.0], [39.9, 2677.0], [40.0, 2677.0], [40.1, 2677.0], [40.2, 2679.0], [40.3, 2679.0], [40.4, 2679.0], [40.5, 2681.0], [40.6, 2682.0], [40.7, 2682.0], [40.8, 2682.0], [40.9, 2683.0], [41.0, 2684.0], [41.1, 2684.0], [41.2, 2684.0], [41.3, 2684.0], [41.4, 2684.0], [41.5, 2685.0], [41.6, 2686.0], [41.7, 2686.0], [41.8, 2687.0], [41.9, 2687.0], [42.0, 2687.0], [42.1, 2688.0], [42.2, 2689.0], [42.3, 2689.0], [42.4, 2689.0], [42.5, 2690.0], [42.6, 2691.0], [42.7, 2691.0], [42.8, 2692.0], [42.9, 2692.0], [43.0, 2692.0], [43.1, 2693.0], [43.2, 2694.0], [43.3, 2694.0], [43.4, 2694.0], [43.5, 2695.0], [43.6, 2696.0], [43.7, 2696.0], [43.8, 2697.0], [43.9, 2697.0], [44.0, 2697.0], [44.1, 2697.0], [44.2, 2699.0], [44.3, 2700.0], [44.4, 2700.0], [44.5, 2701.0], [44.6, 2702.0], [44.7, 2702.0], [44.8, 2703.0], [44.9, 2703.0], [45.0, 2703.0], [45.1, 2704.0], [45.2, 2705.0], [45.3, 2705.0], [45.4, 2705.0], [45.5, 2707.0], [45.6, 2708.0], [45.7, 2708.0], [45.8, 2708.0], [45.9, 2708.0], [46.0, 2708.0], [46.1, 2709.0], [46.2, 2709.0], [46.3, 2710.0], [46.4, 2710.0], [46.5, 2710.0], [46.6, 2713.0], [46.7, 2713.0], [46.8, 2714.0], [46.9, 2716.0], [47.0, 2716.0], [47.1, 2716.0], [47.2, 2716.0], [47.3, 2716.0], [47.4, 2716.0], [47.5, 2717.0], [47.6, 2717.0], [47.7, 2717.0], [47.8, 2717.0], [47.9, 2718.0], [48.0, 2718.0], [48.1, 2719.0], [48.2, 2719.0], [48.3, 2720.0], [48.4, 2720.0], [48.5, 2720.0], [48.6, 2721.0], [48.7, 2721.0], [48.8, 2723.0], [48.9, 2723.0], [49.0, 2723.0], [49.1, 2724.0], [49.2, 2724.0], [49.3, 2724.0], [49.4, 2724.0], [49.5, 2725.0], [49.6, 2726.0], [49.7, 2726.0], [49.8, 2728.0], [49.9, 2728.0], [50.0, 2728.0], [50.1, 2729.0], [50.2, 2729.0], [50.3, 2732.0], [50.4, 2732.0], [50.5, 2732.0], [50.6, 2733.0], [50.7, 2733.0], [50.8, 2734.0], [50.9, 2735.0], [51.0, 2735.0], [51.1, 2737.0], [51.2, 2737.0], [51.3, 2739.0], [51.4, 2739.0], [51.5, 2739.0], [51.6, 2739.0], [51.7, 2739.0], [51.8, 2740.0], [51.9, 2742.0], [52.0, 2742.0], [52.1, 2743.0], [52.2, 2743.0], [52.3, 2745.0], [52.4, 2745.0], [52.5, 2745.0], [52.6, 2746.0], [52.7, 2746.0], [52.8, 2746.0], [52.9, 2748.0], [53.0, 2748.0], [53.1, 2748.0], [53.2, 2749.0], [53.3, 2750.0], [53.4, 2750.0], [53.5, 2750.0], [53.6, 2751.0], [53.7, 2751.0], [53.8, 2751.0], [53.9, 2751.0], [54.0, 2751.0], [54.1, 2752.0], [54.2, 2754.0], [54.3, 2755.0], [54.4, 2755.0], [54.5, 2755.0], [54.6, 2756.0], [54.7, 2756.0], [54.8, 2758.0], [54.9, 2759.0], [55.0, 2759.0], [55.1, 2759.0], [55.2, 2760.0], [55.3, 2761.0], [55.4, 2761.0], [55.5, 2762.0], [55.6, 2763.0], [55.7, 2763.0], [55.8, 2763.0], [55.9, 2764.0], [56.0, 2764.0], [56.1, 2765.0], [56.2, 2765.0], [56.3, 2765.0], [56.4, 2765.0], [56.5, 2769.0], [56.6, 2771.0], [56.7, 2771.0], [56.8, 2775.0], [56.9, 2775.0], [57.0, 2775.0], [57.1, 2777.0], [57.2, 2777.0], [57.3, 2778.0], [57.4, 2778.0], [57.5, 2778.0], [57.6, 2780.0], [57.7, 2780.0], [57.8, 2781.0], [57.9, 2782.0], [58.0, 2782.0], [58.1, 2782.0], [58.2, 2786.0], [58.3, 2787.0], [58.4, 2787.0], [58.5, 2789.0], [58.6, 2789.0], [58.7, 2789.0], [58.8, 2791.0], [58.9, 2792.0], [59.0, 2792.0], [59.1, 2793.0], [59.2, 2793.0], [59.3, 2794.0], [59.4, 2794.0], [59.5, 2796.0], [59.6, 2798.0], [59.7, 2798.0], [59.8, 2798.0], [59.9, 2800.0], [60.0, 2800.0], [60.1, 2802.0], [60.2, 2803.0], [60.3, 2803.0], [60.4, 2803.0], [60.5, 2803.0], [60.6, 2804.0], [60.7, 2804.0], [60.8, 2805.0], [60.9, 2805.0], [61.0, 2805.0], [61.1, 2806.0], [61.2, 2806.0], [61.3, 2807.0], [61.4, 2807.0], [61.5, 2808.0], [61.6, 2811.0], [61.7, 2811.0], [61.8, 2811.0], [61.9, 2812.0], [62.0, 2812.0], [62.1, 2812.0], [62.2, 2814.0], [62.3, 2814.0], [62.4, 2814.0], [62.5, 2814.0], [62.6, 2816.0], [62.7, 2816.0], [62.8, 2817.0], [62.9, 2819.0], [63.0, 2819.0], [63.1, 2819.0], [63.2, 2819.0], [63.3, 2822.0], [63.4, 2822.0], [63.5, 2824.0], [63.6, 2825.0], [63.7, 2825.0], [63.8, 2827.0], [63.9, 2829.0], [64.0, 2829.0], [64.1, 2829.0], [64.2, 2830.0], [64.3, 2830.0], [64.4, 2830.0], [64.5, 2830.0], [64.6, 2836.0], [64.7, 2836.0], [64.8, 2838.0], [64.9, 2840.0], [65.0, 2840.0], [65.1, 2840.0], [65.2, 2841.0], [65.3, 2845.0], [65.4, 2845.0], [65.5, 2848.0], [65.6, 2849.0], [65.7, 2849.0], [65.8, 2849.0], [65.9, 2851.0], [66.0, 2851.0], [66.1, 2853.0], [66.2, 2853.0], [66.3, 2853.0], [66.4, 2853.0], [66.5, 2856.0], [66.6, 2857.0], [66.7, 2857.0], [66.8, 2858.0], [66.9, 2859.0], [67.0, 2859.0], [67.1, 2861.0], [67.2, 2866.0], [67.3, 2866.0], [67.4, 2866.0], [67.5, 2867.0], [67.6, 2868.0], [67.7, 2868.0], [67.8, 2869.0], [67.9, 2869.0], [68.0, 2869.0], [68.1, 2870.0], [68.2, 2873.0], [68.3, 2873.0], [68.4, 2873.0], [68.5, 2874.0], [68.6, 2875.0], [68.7, 2875.0], [68.8, 2876.0], [68.9, 2879.0], [69.0, 2879.0], [69.1, 2883.0], [69.2, 2884.0], [69.3, 2886.0], [69.4, 2886.0], [69.5, 2886.0], [69.6, 2886.0], [69.7, 2886.0], [69.8, 2894.0], [69.9, 2896.0], [70.0, 2896.0], [70.1, 2897.0], [70.2, 2900.0], [70.3, 2904.0], [70.4, 2904.0], [70.5, 2906.0], [70.6, 2907.0], [70.7, 2907.0], [70.8, 2911.0], [70.9, 2911.0], [71.0, 2911.0], [71.1, 2915.0], [71.2, 2918.0], [71.3, 2921.0], [71.4, 2921.0], [71.5, 2922.0], [71.6, 2924.0], [71.7, 2924.0], [71.8, 2926.0], [71.9, 2926.0], [72.0, 2926.0], [72.1, 2926.0], [72.2, 2930.0], [72.3, 2931.0], [72.4, 2931.0], [72.5, 2936.0], [72.6, 2940.0], [72.7, 2940.0], [72.8, 2940.0], [72.9, 2942.0], [73.0, 2942.0], [73.1, 2945.0], [73.2, 2945.0], [73.3, 2945.0], [73.4, 2945.0], [73.5, 2948.0], [73.6, 2951.0], [73.7, 2951.0], [73.8, 2955.0], [73.9, 2958.0], [74.0, 2958.0], [74.1, 2960.0], [74.2, 2960.0], [74.3, 2961.0], [74.4, 2961.0], [74.5, 2964.0], [74.6, 2965.0], [74.7, 2965.0], [74.8, 2968.0], [74.9, 2968.0], [75.0, 2968.0], [75.1, 2968.0], [75.2, 2971.0], [75.3, 2972.0], [75.4, 2972.0], [75.5, 2978.0], [75.6, 2979.0], [75.7, 2979.0], [75.8, 2982.0], [75.9, 2985.0], [76.0, 2985.0], [76.1, 2987.0], [76.2, 2989.0], [76.3, 2995.0], [76.4, 2995.0], [76.5, 2999.0], [76.6, 3005.0], [76.7, 3005.0], [76.8, 3006.0], [76.9, 3010.0], [77.0, 3020.0], [77.1, 3020.0], [77.2, 3022.0], [77.3, 3023.0], [77.4, 3023.0], [77.5, 3028.0], [77.6, 3031.0], [77.7, 3031.0], [77.8, 3034.0], [77.9, 3035.0], [78.0, 3050.0], [78.1, 3050.0], [78.2, 3052.0], [78.3, 3052.0], [78.4, 3052.0], [78.5, 3058.0], [78.6, 3067.0], [78.7, 3067.0], [78.8, 3068.0], [78.9, 3077.0], [79.0, 3087.0], [79.1, 3087.0], [79.2, 3091.0], [79.3, 3091.0], [79.4, 3091.0], [79.5, 3096.0], [79.6, 3097.0], [79.7, 3097.0], [79.8, 3097.0], [79.9, 3099.0], [80.0, 3104.0], [80.1, 3104.0], [80.2, 3114.0], [80.3, 3122.0], [80.4, 3122.0], [80.5, 3124.0], [80.6, 3125.0], [80.7, 3125.0], [80.8, 3139.0], [80.9, 3141.0], [81.0, 3146.0], [81.1, 3146.0], [81.2, 3147.0], [81.3, 3147.0], [81.4, 3147.0], [81.5, 3150.0], [81.6, 3150.0], [81.7, 3150.0], [81.8, 3172.0], [81.9, 3176.0], [82.0, 3180.0], [82.1, 3180.0], [82.2, 3181.0], [82.3, 3181.0], [82.4, 3181.0], [82.5, 3182.0], [82.6, 3186.0], [82.7, 3186.0], [82.8, 3198.0], [82.9, 3212.0], [83.0, 3213.0], [83.1, 3213.0], [83.2, 3213.0], [83.3, 3215.0], [83.4, 3215.0], [83.5, 3220.0], [83.6, 3220.0], [83.7, 3220.0], [83.8, 3222.0], [83.9, 3241.0], [84.0, 3242.0], [84.1, 3242.0], [84.2, 3246.0], [84.3, 3248.0], [84.4, 3248.0], [84.5, 3249.0], [84.6, 3250.0], [84.7, 3250.0], [84.8, 3261.0], [84.9, 3262.0], [85.0, 3267.0], [85.1, 3267.0], [85.2, 3271.0], [85.3, 3283.0], [85.4, 3283.0], [85.5, 3283.0], [85.6, 3285.0], [85.7, 3285.0], [85.8, 3287.0], [85.9, 3294.0], [86.0, 3305.0], [86.1, 3305.0], [86.2, 3311.0], [86.3, 3312.0], [86.4, 3312.0], [86.5, 3314.0], [86.6, 3316.0], [86.7, 3316.0], [86.8, 3318.0], [86.9, 3322.0], [87.0, 3329.0], [87.1, 3329.0], [87.2, 3345.0], [87.3, 3348.0], [87.4, 3348.0], [87.5, 3349.0], [87.6, 3353.0], [87.7, 3353.0], [87.8, 3361.0], [87.9, 3362.0], [88.0, 3365.0], [88.1, 3365.0], [88.2, 3368.0], [88.3, 3371.0], [88.4, 3371.0], [88.5, 3374.0], [88.6, 3376.0], [88.7, 3376.0], [88.8, 3385.0], [88.9, 3389.0], [89.0, 3391.0], [89.1, 3391.0], [89.2, 3394.0], [89.3, 3395.0], [89.4, 3395.0], [89.5, 3397.0], [89.6, 3406.0], [89.7, 3406.0], [89.8, 3411.0], [89.9, 3423.0], [90.0, 3431.0], [90.1, 3431.0], [90.2, 3442.0], [90.3, 3445.0], [90.4, 3445.0], [90.5, 3447.0], [90.6, 3447.0], [90.7, 3447.0], [90.8, 3449.0], [90.9, 3454.0], [91.0, 3464.0], [91.1, 3464.0], [91.2, 3470.0], [91.3, 3472.0], [91.4, 3472.0], [91.5, 3480.0], [91.6, 3482.0], [91.7, 3482.0], [91.8, 3493.0], [91.9, 3494.0], [92.0, 3495.0], [92.1, 3495.0], [92.2, 3496.0], [92.3, 3499.0], [92.4, 3499.0], [92.5, 3502.0], [92.6, 3508.0], [92.7, 3508.0], [92.8, 3514.0], [92.9, 3516.0], [93.0, 3520.0], [93.1, 3520.0], [93.2, 3521.0], [93.3, 3524.0], [93.4, 3524.0], [93.5, 3524.0], [93.6, 3525.0], [93.7, 3525.0], [93.8, 3538.0], [93.9, 3539.0], [94.0, 3549.0], [94.1, 3549.0], [94.2, 3581.0], [94.3, 3581.0], [94.4, 3581.0], [94.5, 3584.0], [94.6, 3589.0], [94.7, 3589.0], [94.8, 3589.0], [94.9, 3591.0], [95.0, 3592.0], [95.1, 3592.0], [95.2, 3594.0], [95.3, 3596.0], [95.4, 3596.0], [95.5, 3607.0], [95.6, 3611.0], [95.7, 3611.0], [95.8, 3614.0], [95.9, 3617.0], [96.0, 3626.0], [96.1, 3626.0], [96.2, 3643.0], [96.3, 3654.0], [96.4, 3654.0], [96.5, 3655.0], [96.6, 3656.0], [96.7, 3656.0], [96.8, 3659.0], [96.9, 3663.0], [97.0, 3666.0], [97.1, 3666.0], [97.2, 3667.0], [97.3, 3669.0], [97.4, 3669.0], [97.5, 3674.0], [97.6, 3683.0], [97.7, 3683.0], [97.8, 3684.0], [97.9, 3685.0], [98.0, 3687.0], [98.1, 3687.0], [98.2, 3689.0], [98.3, 3692.0], [98.4, 3692.0], [98.5, 3692.0], [98.6, 3696.0], [98.7, 3696.0], [98.8, 3722.0], [98.9, 3726.0], [99.0, 3728.0], [99.1, 3728.0], [99.2, 3747.0], [99.3, 3763.0], [99.4, 3763.0], [99.5, 3791.0], [99.6, 3803.0], [99.7, 3803.0], [99.8, 3816.0], [99.9, 3840.0]], "isOverall": false, "label": "(GET) User edit form", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2200.0, "maxY": 122.0, "series": [{"data": [[2600.0, 1.0], [2800.0, 3.0], [2700.0, 4.0], [2900.0, 4.0], [3200.0, 1.0], [3400.0, 1.0], [3600.0, 1.0], [4100.0, 1.0], [5400.0, 13.0], [5600.0, 71.0], [5500.0, 31.0], [5700.0, 69.0], [5800.0, 58.0], [6000.0, 43.0], [6100.0, 29.0], [5900.0, 43.0], [6200.0, 34.0], [6300.0, 32.0], [6400.0, 70.0], [6600.0, 58.0], [6500.0, 79.0], [6800.0, 10.0], [6700.0, 35.0], [6900.0, 2.0], [7000.0, 3.0], [7200.0, 1.0], [7300.0, 3.0]], "isOverall": false, "label": "(POST) User Login", "isController": false}, {"data": [[5600.0, 3.0], [5800.0, 18.0], [5700.0, 4.0], [6000.0, 67.0], [5900.0, 51.0], [6100.0, 91.0], [6300.0, 87.0], [6200.0, 78.0], [6600.0, 34.0], [6500.0, 54.0], [6400.0, 78.0], [6700.0, 25.0], [6800.0, 27.0], [6900.0, 30.0], [7000.0, 27.0], [7100.0, 13.0], [7300.0, 3.0], [7200.0, 10.0]], "isOverall": false, "label": "(POST) UPDATE User Data", "isController": false}, {"data": [[4600.0, 3.0], [4400.0, 1.0], [4500.0, 1.0], [4800.0, 4.0], [4700.0, 1.0], [5000.0, 5.0], [5100.0, 2.0], [4900.0, 2.0], [5300.0, 2.0], [5500.0, 1.0], [5600.0, 1.0], [5800.0, 1.0], [6100.0, 3.0], [5900.0, 2.0], [6000.0, 3.0], [6300.0, 1.0], [6200.0, 2.0], [16400.0, 1.0], [16700.0, 1.0], [16900.0, 1.0], [17200.0, 1.0], [17400.0, 1.0], [17700.0, 2.0], [17600.0, 1.0], [17900.0, 1.0], [18200.0, 1.0], [18400.0, 2.0], [18300.0, 1.0], [18900.0, 1.0], [19300.0, 1.0], [19800.0, 1.0], [20400.0, 1.0], [21400.0, 64.0], [20900.0, 59.0], [21100.0, 70.0], [21200.0, 79.0], [21500.0, 64.0], [21300.0, 77.0], [21000.0, 68.0], [20800.0, 33.0], [20700.0, 12.0], [20500.0, 1.0], [20600.0, 4.0], [21600.0, 65.0], [21700.0, 33.0], [22200.0, 3.0], [22400.0, 2.0], [22000.0, 4.0], [22300.0, 2.0], [21900.0, 9.0], [21800.0, 23.0], [22600.0, 2.0], [22800.0, 1.0], [23000.0, 2.0], [23400.0, 1.0], [22700.0, 1.0], [22900.0, 2.0], [23600.0, 1.0], [23900.0, 1.0]], "isOverall": false, "label": "UPDATE Test", "isController": true}, {"data": [[4000.0, 1.0], [4100.0, 2.0], [4200.0, 2.0], [4600.0, 5.0], [4500.0, 3.0], [4400.0, 2.0], [4800.0, 4.0], [4700.0, 1.0], [5100.0, 3.0], [5000.0, 5.0], [4900.0, 2.0], [5300.0, 5.0], [5200.0, 3.0], [5400.0, 14.0], [5600.0, 57.0], [5500.0, 34.0], [5700.0, 89.0], [5800.0, 110.0], [5900.0, 89.0], [6100.0, 61.0], [6000.0, 65.0], [6300.0, 45.0], [6200.0, 50.0], [6500.0, 30.0], [6400.0, 37.0], [6600.0, 5.0], [6800.0, 4.0], [6700.0, 6.0], [6900.0, 1.0]], "isOverall": false, "label": "Request Login Page", "isController": false}, {"data": [[2300.0, 26.0], [2200.0, 5.0], [2400.0, 60.0], [2500.0, 97.0], [2600.0, 122.0], [2800.0, 72.0], [2700.0, 109.0], [2900.0, 45.0], [3000.0, 24.0], [3100.0, 20.0], [3300.0, 25.0], [3200.0, 22.0], [3400.0, 20.0], [3500.0, 21.0], [3600.0, 23.0], [3700.0, 6.0], [3800.0, 3.0]], "isOverall": false, "label": "(GET) User edit form", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 23900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2885.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2885.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2885.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 40.50387596899226, "minX": 1.63551E12, "maxY": 50.0, "series": [{"data": [[1.63551E12, 50.0], [1.6355103E12, 40.50387596899226], [1.63551006E12, 50.0], [1.63551024E12, 50.0], [1.63551012E12, 50.0], [1.63551018E12, 50.0]], "isOverall": false, "label": "Thread Group 50", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6355103E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2828.760000000003, "minX": 1.0, "maxY": 21849.0, "series": [{"data": [[50.0, 6088.581428571431]], "isOverall": false, "label": "(POST) User Login", "isController": false}, {"data": [[50.0, 6088.581428571431]], "isOverall": false, "label": "(POST) User Login-Aggregated", "isController": false}, {"data": [[33.0, 6488.0], [32.0, 6487.0], [35.0, 6485.0], [41.0, 6498.0], [40.0, 6517.0], [43.0, 6535.0], [42.0, 6612.0], [47.0, 6324.0], [46.0, 6290.0], [49.0, 6400.0], [48.0, 6487.0], [50.0, 6392.167638483972], [28.0, 6426.0], [29.0, 6219.0], [31.0, 6308.0]], "isOverall": false, "label": "(POST) UPDATE User Data", "isController": false}, {"data": [[49.777142857142856, 6393.004285714292]], "isOverall": false, "label": "(POST) UPDATE User Data-Aggregated", "isController": false}, {"data": [[2.0, 4451.0], [3.0, 4649.0], [4.0, 4660.0], [5.0, 4619.0], [6.0, 4783.0], [7.0, 4877.0], [8.0, 4889.0], [9.0, 4872.0], [10.0, 4878.0], [11.0, 4920.0], [12.0, 5019.0], [13.0, 5077.0], [14.0, 4906.0], [15.0, 5129.0], [16.0, 5018.0], [17.0, 5091.0], [18.0, 5341.0], [19.0, 5177.0], [20.0, 5676.0], [21.0, 5321.0], [22.0, 5077.0], [23.0, 5581.0], [24.0, 6079.0], [25.0, 6044.0], [26.0, 5842.0], [27.0, 5908.0], [28.0, 21551.0], [29.0, 21646.0], [30.0, 6215.0], [31.0, 21473.0], [33.0, 21660.0], [32.0, 21825.0], [35.0, 21588.0], [34.0, 6228.0], [37.0, 6111.0], [36.0, 6051.0], [39.0, 6335.0], [38.0, 6111.0], [41.0, 21486.0], [40.0, 21578.0], [43.0, 21849.0], [42.0, 21674.0], [45.0, 6187.0], [44.0, 5932.0], [47.0, 21344.0], [46.0, 21275.0], [49.0, 21525.0], [48.0, 21658.0], [50.0, 21271.53790087461], [1.0, 4531.0]], "isOverall": false, "label": "UPDATE Test", "isController": true}, {"data": [[48.333333333333364, 20519.71700680271]], "isOverall": false, "label": "UPDATE Test-Aggregated", "isController": true}, {"data": [[2.0, 4451.0], [34.0, 6228.0], [37.0, 6111.0], [36.0, 6051.0], [39.0, 6335.0], [38.0, 6111.0], [45.0, 6187.0], [44.0, 5932.0], [3.0, 4649.0], [50.0, 5967.307142857134], [4.0, 4660.0], [5.0, 4619.0], [6.0, 4782.0], [7.0, 4876.0], [8.0, 4889.0], [9.0, 4872.0], [10.0, 4878.0], [11.0, 4920.0], [12.0, 5018.0], [13.0, 5076.0], [14.0, 4906.0], [15.0, 5128.0], [16.0, 5018.0], [1.0, 4531.0], [17.0, 5091.0], [18.0, 5340.0], [19.0, 5176.0], [20.0, 5676.0], [21.0, 5321.0], [22.0, 5077.0], [23.0, 5580.0], [24.0, 6079.0], [25.0, 6044.0], [26.0, 5842.0], [27.0, 5908.0], [30.0, 6215.0]], "isOverall": false, "label": "Request Login Page", "isController": false}, {"data": [[48.54557823129252, 5938.356462585025]], "isOverall": false, "label": "Request Login Page-Aggregated", "isController": false}, {"data": [[50.0, 2828.760000000003]], "isOverall": false, "label": "(GET) User edit form", "isController": false}, {"data": [[50.0, 2828.760000000003]], "isOverall": false, "label": "(GET) User edit form-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 269859.06666666665, "minX": 1.63551E12, "maxY": 2896195.6666666665, "series": [{"data": [[1.63551E12, 2896195.6666666665], [1.6355103E12, 429264.4], [1.63551006E12, 857496.8666666667], [1.63551024E12, 921988.3666666667], [1.63551012E12, 858800.5166666667], [1.63551018E12, 907714.0666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63551E12, 411738.75], [1.6355103E12, 269859.06666666665], [1.63551006E12, 553180.4666666667], [1.63551024E12, 603059.55], [1.63551012E12, 527377.8333333334], [1.63551018E12, 590884.1166666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6355103E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2644.970588235295, "minX": 1.63551E12, "maxY": 21600.81300813008, "series": [{"data": [[1.63551E12, 5568.7800000000025], [1.6355103E12, 5893.236842105263], [1.63551006E12, 5823.12], [1.63551024E12, 6247.008196721313], [1.63551012E12, 6401.513333333335], [1.63551018E12, 6323.971428571428]], "isOverall": false, "label": "(POST) User Login", "isController": false}, {"data": [[1.63551E12, 6670.85], [1.6355103E12, 6349.539999999999], [1.63551006E12, 6721.639097744362], [1.63551024E12, 6102.619999999996], [1.63551012E12, 6357.081300813006], [1.63551018E12, 6244.784722222226]], "isOverall": false, "label": "(POST) UPDATE User Data", "isController": false}, {"data": [[1.63551E12, 21010.26999999998], [1.6355103E12, 14847.282352941173], [1.63551006E12, 21286.225563909782], [1.63551024E12, 21049.946666666656], [1.63551012E12, 21600.81300813008], [1.63551018E12, 21343.65277777777]], "isOverall": false, "label": "UPDATE Test", "isController": true}, {"data": [[1.63551E12, 5865.525862068965], [1.6355103E12, 5359.342857142858], [1.63551006E12, 5852.432835820896], [1.63551024E12, 6151.700000000003], [1.63551012E12, 5984.773333333333], [1.63551018E12, 5946.779999999999]], "isOverall": false, "label": "Request Login Page", "isController": false}, {"data": [[1.63551E12, 2943.4100000000003], [1.6355103E12, 2770.080000000001], [1.63551006E12, 2923.3800000000006], [1.63551024E12, 2644.970588235295], [1.63551012E12, 2858.684563758389], [1.63551018E12, 2809.739130434783]], "isOverall": false, "label": "(GET) User edit form", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6355103E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63551E12, "maxY": 3364.349999999999, "series": [{"data": [[1.63551E12, 2285.6699999999996], [1.6355103E12, 2836.3947368421054], [1.63551006E12, 2614.893333333332], [1.63551024E12, 3038.639344262295], [1.63551012E12, 2948.6399999999994], [1.63551018E12, 2882.4714285714276]], "isOverall": false, "label": "(POST) User Login", "isController": false}, {"data": [[1.63551E12, 3364.349999999999], [1.6355103E12, 3075.8600000000006], [1.63551006E12, 3353.6015037593975], [1.63551024E12, 2921.6133333333323], [1.63551012E12, 3143.4471544715448], [1.63551018E12, 3019.6666666666656]], "isOverall": false, "label": "(POST) UPDATE User Data", "isController": false}, {"data": [[1.63551E12, 0.0], [1.6355103E12, 0.0], [1.63551006E12, 0.0], [1.63551024E12, 0.0], [1.63551012E12, 0.0], [1.63551018E12, 0.0]], "isOverall": false, "label": "UPDATE Test", "isController": true}, {"data": [[1.63551E12, 1990.98275862069], [1.6355103E12, 2882.9142857142856], [1.63551006E12, 2782.2313432835817], [1.63551024E12, 2823.986666666665], [1.63551012E12, 2823.5933333333337], [1.63551018E12, 2778.3866666666654]], "isOverall": false, "label": "Request Login Page", "isController": false}, {"data": [[1.63551E12, 2943.3900000000017], [1.6355103E12, 2770.080000000001], [1.63551006E12, 2923.3599999999983], [1.63551024E12, 2644.9485294117653], [1.63551012E12, 2858.664429530201], [1.63551018E12, 2809.73043478261]], "isOverall": false, "label": "(GET) User edit form", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6355103E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63551E12, "maxY": 38.79310344827586, "series": [{"data": [[1.63551E12, 21.040000000000003], [1.6355103E12, 0.0], [1.63551006E12, 0.0], [1.63551024E12, 0.0], [1.63551012E12, 0.0], [1.63551018E12, 0.0]], "isOverall": false, "label": "(POST) User Login", "isController": false}, {"data": [[1.63551E12, 36.23999999999998], [1.6355103E12, 35.54], [1.63551006E12, 35.661654135338345], [1.63551024E12, 35.053333333333335], [1.63551012E12, 35.804878048780516], [1.63551018E12, 35.152777777777786]], "isOverall": false, "label": "(POST) UPDATE User Data", "isController": false}, {"data": [[1.63551E12, 0.0], [1.6355103E12, 0.0], [1.63551006E12, 0.0], [1.63551024E12, 0.0], [1.63551012E12, 0.0], [1.63551018E12, 0.0]], "isOverall": false, "label": "UPDATE Test", "isController": true}, {"data": [[1.63551E12, 38.79310344827586], [1.6355103E12, 34.51428571428572], [1.63551006E12, 34.79104477611941], [1.63551024E12, 34.62666666666667], [1.63551012E12, 35.06666666666664], [1.63551018E12, 34.58666666666666]], "isOverall": false, "label": "Request Login Page", "isController": false}, {"data": [[1.63551E12, 0.0], [1.6355103E12, 0.0], [1.63551006E12, 0.0], [1.63551024E12, 0.0], [1.63551012E12, 0.0], [1.63551018E12, 0.0]], "isOverall": false, "label": "(GET) User edit form", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6355103E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2214.0, "minX": 1.63551E12, "maxY": 21849.0, "series": [{"data": [[1.63551E12, 7393.0], [1.6355103E12, 21849.0], [1.63551006E12, 7318.0], [1.63551024E12, 6790.0], [1.63551012E12, 6930.0], [1.63551018E12, 6819.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63551E12, 2245.0], [1.6355103E12, 2431.0], [1.63551006E12, 2214.0], [1.63551024E12, 2293.0], [1.63551012E12, 2402.0], [1.63551018E12, 2423.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63551E12, 6906.1], [1.6355103E12, 6627.0], [1.63551006E12, 6875.5], [1.63551024E12, 6635.9], [1.63551012E12, 6764.8], [1.63551018E12, 6697.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63551E12, 7309.98], [1.6355103E12, 7260.32], [1.63551006E12, 7265.029999999999], [1.63551024E12, 7127.74], [1.63551012E12, 7233.839999999999], [1.63551018E12, 7179.039999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63551E12, 7060.2], [1.6355103E12, 6845.9], [1.63551006E12, 7043.1], [1.63551024E12, 6820.45], [1.63551012E12, 6961.4], [1.63551018E12, 6890.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6355103E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5891.5, "minX": 1000.0, "maxY": 5952.0, "series": [{"data": [[1000.0, 5952.0], [2000.0, 5891.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 2000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2804.5, "minX": 1000.0, "maxY": 2849.0, "series": [{"data": [[1000.0, 2849.0], [2000.0, 2804.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 2000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.6333333333333333, "minX": 1.63551E12, "maxY": 9.55, "series": [{"data": [[1.63551E12, 7.766666666666667], [1.6355103E12, 2.6333333333333333], [1.63551006E12, 9.45], [1.63551024E12, 9.55], [1.63551012E12, 9.533333333333333], [1.63551018E12, 9.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6355103E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.716666666666667, "minX": 1.63551E12, "maxY": 9.533333333333333, "series": [{"data": [[1.63551E12, 6.933333333333334], [1.6355103E12, 3.716666666666667], [1.63551006E12, 9.45], [1.63551024E12, 9.3], [1.63551012E12, 9.533333333333333], [1.63551018E12, 9.15]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6355103E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.63551E12, "maxY": 2.5, "series": [{"data": [[1.63551E12, 1.6666666666666667], [1.6355103E12, 1.4166666666666667], [1.63551006E12, 2.216666666666667], [1.63551024E12, 2.5], [1.63551012E12, 2.05], [1.63551018E12, 2.4]], "isOverall": false, "label": "UPDATE Test-success", "isController": true}, {"data": [[1.63551E12, 1.6666666666666667], [1.6355103E12, 0.8333333333333334], [1.63551006E12, 2.5], [1.63551024E12, 2.2666666666666666], [1.63551012E12, 2.4833333333333334], [1.63551018E12, 1.9166666666666667]], "isOverall": false, "label": "(GET) User edit form-success", "isController": false}, {"data": [[1.63551E12, 1.9333333333333333], [1.6355103E12, 0.5833333333333334], [1.63551006E12, 2.2333333333333334], [1.63551024E12, 2.5], [1.63551012E12, 2.5], [1.63551018E12, 2.5]], "isOverall": false, "label": "Request Login Page-success", "isController": false}, {"data": [[1.63551E12, 1.6666666666666667], [1.6355103E12, 0.8333333333333334], [1.63551006E12, 2.216666666666667], [1.63551024E12, 2.5], [1.63551012E12, 2.05], [1.63551018E12, 2.4]], "isOverall": false, "label": "(POST) UPDATE User Data-success", "isController": false}, {"data": [[1.63551E12, 1.6666666666666667], [1.6355103E12, 0.6333333333333333], [1.63551006E12, 2.5], [1.63551024E12, 2.033333333333333], [1.63551012E12, 2.5], [1.63551018E12, 2.3333333333333335]], "isOverall": false, "label": "(POST) User Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6355103E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.3, "minX": 1.63551E12, "maxY": 11.8, "series": [{"data": [[1.63551E12, 8.6], [1.6355103E12, 4.3], [1.63551006E12, 11.666666666666666], [1.63551024E12, 11.8], [1.63551012E12, 11.583333333333334], [1.63551018E12, 11.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6355103E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

