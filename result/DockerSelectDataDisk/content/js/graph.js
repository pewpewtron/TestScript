/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6987.0, "minX": 0.0, "maxY": 57732.0, "series": [{"data": [[0.0, 15061.0], [0.1, 15061.0], [0.2, 15061.0], [0.3, 15591.0], [0.4, 15591.0], [0.5, 15612.0], [0.6, 15612.0], [0.7, 15736.0], [0.8, 15736.0], [0.9, 16322.0], [1.0, 16322.0], [1.1, 16830.0], [1.2, 16830.0], [1.3, 17041.0], [1.4, 17041.0], [1.5, 17170.0], [1.6, 17170.0], [1.7, 17402.0], [1.8, 17402.0], [1.9, 17844.0], [2.0, 17844.0], [2.1, 17844.0], [2.2, 17985.0], [2.3, 17985.0], [2.4, 18472.0], [2.5, 18472.0], [2.6, 19069.0], [2.7, 19069.0], [2.8, 19151.0], [2.9, 19151.0], [3.0, 19665.0], [3.1, 19665.0], [3.2, 19687.0], [3.3, 19687.0], [3.4, 20159.0], [3.5, 20159.0], [3.6, 20259.0], [3.7, 20259.0], [3.8, 20618.0], [3.9, 20618.0], [4.0, 20829.0], [4.1, 20829.0], [4.2, 20829.0], [4.3, 20992.0], [4.4, 20992.0], [4.5, 21298.0], [4.6, 21298.0], [4.7, 21336.0], [4.8, 21336.0], [4.9, 21471.0], [5.0, 21471.0], [5.1, 21636.0], [5.2, 21636.0], [5.3, 21723.0], [5.4, 21723.0], [5.5, 21890.0], [5.6, 21890.0], [5.7, 22002.0], [5.8, 22002.0], [5.9, 22686.0], [6.0, 22686.0], [6.1, 22686.0], [6.2, 23052.0], [6.3, 23052.0], [6.4, 24173.0], [6.5, 24173.0], [6.6, 26428.0], [6.7, 26428.0], [6.8, 26887.0], [6.9, 26887.0], [7.0, 27044.0], [7.1, 27044.0], [7.2, 27064.0], [7.3, 27064.0], [7.4, 27111.0], [7.5, 27111.0], [7.6, 27178.0], [7.7, 27178.0], [7.8, 27191.0], [7.9, 27191.0], [8.0, 27402.0], [8.1, 27402.0], [8.2, 27402.0], [8.3, 27411.0], [8.4, 27411.0], [8.5, 27421.0], [8.6, 27421.0], [8.7, 27437.0], [8.8, 27437.0], [8.9, 27440.0], [9.0, 27440.0], [9.1, 27446.0], [9.2, 27446.0], [9.3, 27467.0], [9.4, 27467.0], [9.5, 27500.0], [9.6, 27500.0], [9.7, 27524.0], [9.8, 27524.0], [9.9, 27698.0], [10.0, 27698.0], [10.1, 27698.0], [10.2, 27718.0], [10.3, 27718.0], [10.4, 27742.0], [10.5, 27742.0], [10.6, 27798.0], [10.7, 27798.0], [10.8, 27831.0], [10.9, 27831.0], [11.0, 27951.0], [11.1, 27951.0], [11.2, 27975.0], [11.3, 27975.0], [11.4, 28083.0], [11.5, 28083.0], [11.6, 28110.0], [11.7, 28110.0], [11.8, 28143.0], [11.9, 28143.0], [12.0, 28143.0], [12.1, 28205.0], [12.2, 28205.0], [12.3, 28237.0], [12.4, 28237.0], [12.5, 28311.0], [12.6, 28311.0], [12.7, 28372.0], [12.8, 28372.0], [12.9, 28429.0], [13.0, 28429.0], [13.1, 28437.0], [13.2, 28437.0], [13.3, 28550.0], [13.4, 28550.0], [13.5, 28603.0], [13.6, 28603.0], [13.7, 28633.0], [13.8, 28633.0], [13.9, 28669.0], [14.0, 28669.0], [14.1, 28669.0], [14.2, 28682.0], [14.3, 28682.0], [14.4, 28743.0], [14.5, 28743.0], [14.6, 28745.0], [14.7, 28745.0], [14.8, 28760.0], [14.9, 28760.0], [15.0, 28766.0], [15.1, 28766.0], [15.2, 28766.0], [15.3, 28766.0], [15.4, 28799.0], [15.5, 28799.0], [15.6, 28999.0], [15.7, 28999.0], [15.8, 29003.0], [15.9, 29003.0], [16.0, 29003.0], [16.1, 29011.0], [16.2, 29011.0], [16.3, 29017.0], [16.4, 29017.0], [16.5, 29024.0], [16.6, 29024.0], [16.7, 29091.0], [16.8, 29091.0], [16.9, 29099.0], [17.0, 29099.0], [17.1, 29107.0], [17.2, 29107.0], [17.3, 29153.0], [17.4, 29153.0], [17.5, 29159.0], [17.6, 29159.0], [17.7, 29167.0], [17.8, 29167.0], [17.9, 29190.0], [18.0, 29190.0], [18.1, 29190.0], [18.2, 29216.0], [18.3, 29216.0], [18.4, 29216.0], [18.5, 29216.0], [18.6, 29245.0], [18.7, 29245.0], [18.8, 29247.0], [18.9, 29247.0], [19.0, 29267.0], [19.1, 29267.0], [19.2, 29281.0], [19.3, 29281.0], [19.4, 29304.0], [19.5, 29304.0], [19.6, 29324.0], [19.7, 29324.0], [19.8, 29324.0], [19.9, 29324.0], [20.0, 29332.0], [20.1, 29332.0], [20.2, 29332.0], [20.3, 29366.0], [20.4, 29366.0], [20.5, 29376.0], [20.6, 29376.0], [20.7, 29379.0], [20.8, 29379.0], [20.9, 29380.0], [21.0, 29380.0], [21.1, 29389.0], [21.2, 29389.0], [21.3, 29400.0], [21.4, 29400.0], [21.5, 29405.0], [21.6, 29405.0], [21.7, 29406.0], [21.8, 29406.0], [21.9, 29417.0], [22.0, 29417.0], [22.1, 29417.0], [22.2, 29421.0], [22.3, 29421.0], [22.4, 29430.0], [22.5, 29430.0], [22.6, 29448.0], [22.7, 29448.0], [22.8, 29461.0], [22.9, 29461.0], [23.0, 29470.0], [23.1, 29470.0], [23.2, 29475.0], [23.3, 29475.0], [23.4, 29486.0], [23.5, 29486.0], [23.6, 29491.0], [23.7, 29491.0], [23.8, 29495.0], [23.9, 29495.0], [24.0, 29512.0], [24.1, 29512.0], [24.2, 29512.0], [24.3, 29516.0], [24.4, 29516.0], [24.5, 29517.0], [24.6, 29517.0], [24.7, 29520.0], [24.8, 29520.0], [24.9, 29525.0], [25.0, 29525.0], [25.1, 29542.0], [25.2, 29542.0], [25.3, 29580.0], [25.4, 29580.0], [25.5, 29587.0], [25.6, 29587.0], [25.7, 29602.0], [25.8, 29602.0], [25.9, 29615.0], [26.0, 29615.0], [26.1, 29615.0], [26.2, 29624.0], [26.3, 29624.0], [26.4, 29644.0], [26.5, 29644.0], [26.6, 29645.0], [26.7, 29645.0], [26.8, 29662.0], [26.9, 29662.0], [27.0, 29666.0], [27.1, 29666.0], [27.2, 29667.0], [27.3, 29667.0], [27.4, 29678.0], [27.5, 29678.0], [27.6, 29686.0], [27.7, 29686.0], [27.8, 29686.0], [27.9, 29686.0], [28.0, 29706.0], [28.1, 29706.0], [28.2, 29706.0], [28.3, 29719.0], [28.4, 29719.0], [28.5, 29726.0], [28.6, 29726.0], [28.7, 29745.0], [28.8, 29745.0], [28.9, 29753.0], [29.0, 29753.0], [29.1, 29757.0], [29.2, 29757.0], [29.3, 29775.0], [29.4, 29775.0], [29.5, 29781.0], [29.6, 29781.0], [29.7, 29795.0], [29.8, 29795.0], [29.9, 29808.0], [30.0, 29808.0], [30.1, 29808.0], [30.2, 29812.0], [30.3, 29812.0], [30.4, 29839.0], [30.5, 29839.0], [30.6, 29841.0], [30.7, 29841.0], [30.8, 29846.0], [30.9, 29846.0], [31.0, 29852.0], [31.1, 29852.0], [31.2, 29868.0], [31.3, 29868.0], [31.4, 29871.0], [31.5, 29871.0], [31.6, 29884.0], [31.7, 29884.0], [31.8, 29885.0], [31.9, 29885.0], [32.0, 29887.0], [32.1, 29887.0], [32.2, 29887.0], [32.3, 29900.0], [32.4, 29900.0], [32.5, 29910.0], [32.6, 29910.0], [32.7, 29922.0], [32.8, 29922.0], [32.9, 29925.0], [33.0, 29925.0], [33.1, 29926.0], [33.2, 29926.0], [33.3, 29931.0], [33.4, 29931.0], [33.5, 29934.0], [33.6, 29934.0], [33.7, 29946.0], [33.8, 29946.0], [33.9, 29957.0], [34.0, 29957.0], [34.1, 29957.0], [34.2, 29975.0], [34.3, 29975.0], [34.4, 29984.0], [34.5, 29984.0], [34.6, 29991.0], [34.7, 29991.0], [34.8, 29993.0], [34.9, 29993.0], [35.0, 30001.0], [35.1, 30001.0], [35.2, 30015.0], [35.3, 30015.0], [35.4, 30017.0], [35.5, 30017.0], [35.6, 30035.0], [35.7, 30035.0], [35.8, 30040.0], [35.9, 30040.0], [36.0, 30052.0], [36.1, 30052.0], [36.2, 30052.0], [36.3, 30054.0], [36.4, 30054.0], [36.5, 30063.0], [36.6, 30063.0], [36.7, 30068.0], [36.8, 30068.0], [36.9, 30074.0], [37.0, 30074.0], [37.1, 30080.0], [37.2, 30080.0], [37.3, 30082.0], [37.4, 30082.0], [37.5, 30095.0], [37.6, 30095.0], [37.7, 30111.0], [37.8, 30111.0], [37.9, 30130.0], [38.0, 30130.0], [38.1, 30130.0], [38.2, 30131.0], [38.3, 30131.0], [38.4, 30163.0], [38.5, 30163.0], [38.6, 30181.0], [38.7, 30181.0], [38.8, 30192.0], [38.9, 30192.0], [39.0, 30195.0], [39.1, 30195.0], [39.2, 30196.0], [39.3, 30196.0], [39.4, 30198.0], [39.5, 30198.0], [39.6, 30202.0], [39.7, 30202.0], [39.8, 30222.0], [39.9, 30222.0], [40.0, 30240.0], [40.1, 30240.0], [40.2, 30240.0], [40.3, 30242.0], [40.4, 30242.0], [40.5, 30289.0], [40.6, 30289.0], [40.7, 30345.0], [40.8, 30345.0], [40.9, 30348.0], [41.0, 30348.0], [41.1, 30354.0], [41.2, 30354.0], [41.3, 30364.0], [41.4, 30364.0], [41.5, 30377.0], [41.6, 30377.0], [41.7, 30378.0], [41.8, 30378.0], [41.9, 30389.0], [42.0, 30389.0], [42.1, 30389.0], [42.2, 30402.0], [42.3, 30402.0], [42.4, 30426.0], [42.5, 30426.0], [42.6, 30429.0], [42.7, 30429.0], [42.8, 30435.0], [42.9, 30435.0], [43.0, 30447.0], [43.1, 30447.0], [43.2, 30478.0], [43.3, 30478.0], [43.4, 30486.0], [43.5, 30486.0], [43.6, 30513.0], [43.7, 30513.0], [43.8, 30564.0], [43.9, 30564.0], [44.0, 30567.0], [44.1, 30567.0], [44.2, 30567.0], [44.3, 30672.0], [44.4, 30672.0], [44.5, 30675.0], [44.6, 30675.0], [44.7, 30703.0], [44.8, 30703.0], [44.9, 30710.0], [45.0, 30710.0], [45.1, 30753.0], [45.2, 30753.0], [45.3, 30779.0], [45.4, 30779.0], [45.5, 30783.0], [45.6, 30783.0], [45.7, 30803.0], [45.8, 30803.0], [45.9, 30806.0], [46.0, 30806.0], [46.1, 30806.0], [46.2, 30840.0], [46.3, 30840.0], [46.4, 30854.0], [46.5, 30854.0], [46.6, 30874.0], [46.7, 30874.0], [46.8, 30887.0], [46.9, 30887.0], [47.0, 30897.0], [47.1, 30897.0], [47.2, 30908.0], [47.3, 30908.0], [47.4, 30918.0], [47.5, 30918.0], [47.6, 30968.0], [47.7, 30968.0], [47.8, 30976.0], [47.9, 30976.0], [48.0, 31000.0], [48.1, 31000.0], [48.2, 31000.0], [48.3, 31023.0], [48.4, 31023.0], [48.5, 31030.0], [48.6, 31030.0], [48.7, 31039.0], [48.8, 31039.0], [48.9, 31045.0], [49.0, 31045.0], [49.1, 31052.0], [49.2, 31052.0], [49.3, 31056.0], [49.4, 31056.0], [49.5, 31065.0], [49.6, 31065.0], [49.7, 31086.0], [49.8, 31086.0], [49.9, 31098.0], [50.0, 31098.0], [50.1, 31098.0], [50.2, 31108.0], [50.3, 31108.0], [50.4, 31111.0], [50.5, 31111.0], [50.6, 31132.0], [50.7, 31132.0], [50.8, 31138.0], [50.9, 31138.0], [51.0, 31147.0], [51.1, 31147.0], [51.2, 31161.0], [51.3, 31161.0], [51.4, 31210.0], [51.5, 31210.0], [51.6, 31212.0], [51.7, 31212.0], [51.8, 31215.0], [51.9, 31215.0], [52.0, 31217.0], [52.1, 31217.0], [52.2, 31217.0], [52.3, 31234.0], [52.4, 31234.0], [52.5, 31240.0], [52.6, 31240.0], [52.7, 31294.0], [52.8, 31294.0], [52.9, 31323.0], [53.0, 31323.0], [53.1, 31329.0], [53.2, 31329.0], [53.3, 31332.0], [53.4, 31332.0], [53.5, 31338.0], [53.6, 31338.0], [53.7, 31351.0], [53.8, 31351.0], [53.9, 31354.0], [54.0, 31354.0], [54.1, 31354.0], [54.2, 31367.0], [54.3, 31367.0], [54.4, 31394.0], [54.5, 31394.0], [54.6, 31417.0], [54.7, 31417.0], [54.8, 31439.0], [54.9, 31439.0], [55.0, 31467.0], [55.1, 31467.0], [55.2, 31469.0], [55.3, 31469.0], [55.4, 31472.0], [55.5, 31472.0], [55.6, 31480.0], [55.7, 31480.0], [55.8, 31486.0], [55.9, 31486.0], [56.0, 31495.0], [56.1, 31495.0], [56.2, 31495.0], [56.3, 31507.0], [56.4, 31507.0], [56.5, 31519.0], [56.6, 31519.0], [56.7, 31542.0], [56.8, 31542.0], [56.9, 31544.0], [57.0, 31544.0], [57.1, 31576.0], [57.2, 31576.0], [57.3, 31581.0], [57.4, 31581.0], [57.5, 31583.0], [57.6, 31583.0], [57.7, 31626.0], [57.8, 31626.0], [57.9, 31632.0], [58.0, 31632.0], [58.1, 31632.0], [58.2, 31640.0], [58.3, 31640.0], [58.4, 31649.0], [58.5, 31649.0], [58.6, 31658.0], [58.7, 31658.0], [58.8, 31660.0], [58.9, 31660.0], [59.0, 31692.0], [59.1, 31692.0], [59.2, 31711.0], [59.3, 31711.0], [59.4, 31712.0], [59.5, 31712.0], [59.6, 31717.0], [59.7, 31717.0], [59.8, 31752.0], [59.9, 31752.0], [60.0, 31771.0], [60.1, 31771.0], [60.2, 31771.0], [60.3, 31777.0], [60.4, 31777.0], [60.5, 31818.0], [60.6, 31818.0], [60.7, 31833.0], [60.8, 31833.0], [60.9, 31841.0], [61.0, 31841.0], [61.1, 31907.0], [61.2, 31907.0], [61.3, 31922.0], [61.4, 31922.0], [61.5, 31933.0], [61.6, 31933.0], [61.7, 31951.0], [61.8, 31951.0], [61.9, 31958.0], [62.0, 31958.0], [62.1, 31958.0], [62.2, 32017.0], [62.3, 32017.0], [62.4, 32030.0], [62.5, 32030.0], [62.6, 32039.0], [62.7, 32039.0], [62.8, 32042.0], [62.9, 32042.0], [63.0, 32044.0], [63.1, 32044.0], [63.2, 32068.0], [63.3, 32068.0], [63.4, 32099.0], [63.5, 32099.0], [63.6, 32105.0], [63.7, 32105.0], [63.8, 32107.0], [63.9, 32107.0], [64.0, 32109.0], [64.1, 32109.0], [64.2, 32109.0], [64.3, 32113.0], [64.4, 32113.0], [64.5, 32119.0], [64.6, 32119.0], [64.7, 32150.0], [64.8, 32150.0], [64.9, 32158.0], [65.0, 32158.0], [65.1, 32166.0], [65.2, 32166.0], [65.3, 32183.0], [65.4, 32183.0], [65.5, 32188.0], [65.6, 32188.0], [65.7, 32242.0], [65.8, 32242.0], [65.9, 32246.0], [66.0, 32246.0], [66.1, 32246.0], [66.2, 32252.0], [66.3, 32252.0], [66.4, 32263.0], [66.5, 32263.0], [66.6, 32276.0], [66.7, 32276.0], [66.8, 32277.0], [66.9, 32277.0], [67.0, 32309.0], [67.1, 32309.0], [67.2, 32311.0], [67.3, 32311.0], [67.4, 32312.0], [67.5, 32312.0], [67.6, 32317.0], [67.7, 32317.0], [67.8, 32330.0], [67.9, 32330.0], [68.0, 32361.0], [68.1, 32361.0], [68.2, 32361.0], [68.3, 32374.0], [68.4, 32374.0], [68.5, 32383.0], [68.6, 32383.0], [68.7, 32384.0], [68.8, 32384.0], [68.9, 32386.0], [69.0, 32386.0], [69.1, 32424.0], [69.2, 32424.0], [69.3, 32488.0], [69.4, 32488.0], [69.5, 32497.0], [69.6, 32497.0], [69.7, 32505.0], [69.8, 32505.0], [69.9, 32510.0], [70.0, 32510.0], [70.1, 32510.0], [70.2, 32514.0], [70.3, 32514.0], [70.4, 32521.0], [70.5, 32521.0], [70.6, 32522.0], [70.7, 32522.0], [70.8, 32550.0], [70.9, 32550.0], [71.0, 32552.0], [71.1, 32552.0], [71.2, 32573.0], [71.3, 32573.0], [71.4, 32599.0], [71.5, 32599.0], [71.6, 32605.0], [71.7, 32605.0], [71.8, 32618.0], [71.9, 32618.0], [72.0, 32632.0], [72.1, 32632.0], [72.2, 32632.0], [72.3, 32632.0], [72.4, 32632.0], [72.5, 32661.0], [72.6, 32661.0], [72.7, 32714.0], [72.8, 32714.0], [72.9, 32724.0], [73.0, 32724.0], [73.1, 32729.0], [73.2, 32729.0], [73.3, 32760.0], [73.4, 32760.0], [73.5, 32789.0], [73.6, 32789.0], [73.7, 32791.0], [73.8, 32791.0], [73.9, 32803.0], [74.0, 32803.0], [74.1, 32803.0], [74.2, 32816.0], [74.3, 32816.0], [74.4, 32844.0], [74.5, 32844.0], [74.6, 32869.0], [74.7, 32869.0], [74.8, 32964.0], [74.9, 32964.0], [75.0, 32972.0], [75.1, 32972.0], [75.2, 33003.0], [75.3, 33003.0], [75.4, 33062.0], [75.5, 33062.0], [75.6, 33071.0], [75.7, 33071.0], [75.8, 33083.0], [75.9, 33083.0], [76.0, 33083.0], [76.1, 33091.0], [76.2, 33091.0], [76.3, 33109.0], [76.4, 33109.0], [76.5, 33123.0], [76.6, 33123.0], [76.7, 33123.0], [76.8, 33123.0], [76.9, 33128.0], [77.0, 33128.0], [77.1, 33128.0], [77.2, 33128.0], [77.3, 33149.0], [77.4, 33149.0], [77.5, 33163.0], [77.6, 33163.0], [77.7, 33183.0], [77.8, 33183.0], [77.9, 33198.0], [78.0, 33198.0], [78.1, 33198.0], [78.2, 33257.0], [78.3, 33257.0], [78.4, 33277.0], [78.5, 33277.0], [78.6, 33288.0], [78.7, 33288.0], [78.8, 33306.0], [78.9, 33306.0], [79.0, 33334.0], [79.1, 33334.0], [79.2, 33344.0], [79.3, 33344.0], [79.4, 33352.0], [79.5, 33352.0], [79.6, 33384.0], [79.7, 33384.0], [79.8, 33389.0], [79.9, 33389.0], [80.0, 33389.0], [80.1, 33449.0], [80.2, 33449.0], [80.3, 33449.0], [80.4, 33449.0], [80.5, 33512.0], [80.6, 33512.0], [80.7, 33551.0], [80.8, 33551.0], [80.9, 33612.0], [81.0, 33612.0], [81.1, 33614.0], [81.2, 33614.0], [81.3, 33650.0], [81.4, 33650.0], [81.5, 33682.0], [81.6, 33682.0], [81.7, 33773.0], [81.8, 33773.0], [81.9, 33917.0], [82.0, 33917.0], [82.1, 33917.0], [82.2, 33926.0], [82.3, 33926.0], [82.4, 33937.0], [82.5, 33937.0], [82.6, 34099.0], [82.7, 34099.0], [82.8, 34208.0], [82.9, 34208.0], [83.0, 34213.0], [83.1, 34213.0], [83.2, 34303.0], [83.3, 34303.0], [83.4, 34450.0], [83.5, 34450.0], [83.6, 34526.0], [83.7, 34526.0], [83.8, 34861.0], [83.9, 34861.0], [84.0, 34861.0], [84.1, 34900.0], [84.2, 34900.0], [84.3, 34954.0], [84.4, 34954.0], [84.5, 34990.0], [84.6, 34990.0], [84.7, 35072.0], [84.8, 35072.0], [84.9, 35092.0], [85.0, 35092.0], [85.1, 35105.0], [85.2, 35105.0], [85.3, 35508.0], [85.4, 35508.0], [85.5, 35531.0], [85.6, 35531.0], [85.7, 35533.0], [85.8, 35533.0], [85.9, 35627.0], [86.0, 35627.0], [86.1, 35627.0], [86.2, 35656.0], [86.3, 35656.0], [86.4, 35694.0], [86.5, 35694.0], [86.6, 35700.0], [86.7, 35700.0], [86.8, 35776.0], [86.9, 35776.0], [87.0, 35813.0], [87.1, 35813.0], [87.2, 35887.0], [87.3, 35887.0], [87.4, 35985.0], [87.5, 35985.0], [87.6, 36011.0], [87.7, 36011.0], [87.8, 36075.0], [87.9, 36075.0], [88.0, 36075.0], [88.1, 36167.0], [88.2, 36167.0], [88.3, 36178.0], [88.4, 36178.0], [88.5, 36316.0], [88.6, 36316.0], [88.7, 36343.0], [88.8, 36343.0], [88.9, 36396.0], [89.0, 36396.0], [89.1, 36560.0], [89.2, 36560.0], [89.3, 36893.0], [89.4, 36893.0], [89.5, 42565.0], [89.6, 42565.0], [89.7, 43932.0], [89.8, 43932.0], [89.9, 45101.0], [90.0, 45101.0], [90.1, 45101.0], [90.2, 45179.0], [90.3, 45179.0], [90.4, 45766.0], [90.5, 45766.0], [90.6, 45792.0], [90.7, 45792.0], [90.8, 45843.0], [90.9, 45843.0], [91.0, 45948.0], [91.1, 45948.0], [91.2, 46462.0], [91.3, 46462.0], [91.4, 46688.0], [91.5, 46688.0], [91.6, 46937.0], [91.7, 46937.0], [91.8, 47206.0], [91.9, 47206.0], [92.0, 47206.0], [92.1, 47299.0], [92.2, 47299.0], [92.3, 47486.0], [92.4, 47486.0], [92.5, 47694.0], [92.6, 47694.0], [92.7, 48479.0], [92.8, 48479.0], [92.9, 48669.0], [93.0, 48669.0], [93.1, 48774.0], [93.2, 48774.0], [93.3, 49404.0], [93.4, 49404.0], [93.5, 49670.0], [93.6, 49670.0], [93.7, 49738.0], [93.8, 49738.0], [93.9, 49748.0], [94.0, 49748.0], [94.1, 49748.0], [94.2, 49805.0], [94.3, 49805.0], [94.4, 49839.0], [94.5, 49839.0], [94.6, 49871.0], [94.7, 49871.0], [94.8, 49918.0], [94.9, 49918.0], [95.0, 50182.0], [95.1, 50182.0], [95.2, 50316.0], [95.3, 50316.0], [95.4, 50488.0], [95.5, 50488.0], [95.6, 50533.0], [95.7, 50533.0], [95.8, 50749.0], [95.9, 50749.0], [96.0, 50749.0], [96.1, 50756.0], [96.2, 50756.0], [96.3, 51289.0], [96.4, 51289.0], [96.5, 51480.0], [96.6, 51480.0], [96.7, 51845.0], [96.8, 51845.0], [96.9, 52368.0], [97.0, 52368.0], [97.1, 53320.0], [97.2, 53320.0], [97.3, 53551.0], [97.4, 53551.0], [97.5, 53558.0], [97.6, 53558.0], [97.7, 53676.0], [97.8, 53676.0], [97.9, 54131.0], [98.0, 54131.0], [98.1, 54131.0], [98.2, 54374.0], [98.3, 54374.0], [98.4, 54613.0], [98.5, 54613.0], [98.6, 55178.0], [98.7, 55178.0], [98.8, 55399.0], [98.9, 55399.0], [99.0, 55851.0], [99.1, 55851.0], [99.2, 56058.0], [99.3, 56058.0], [99.4, 56382.0], [99.5, 56382.0], [99.6, 56643.0], [99.7, 56643.0], [99.8, 57732.0], [99.9, 57732.0], [100.0, 57732.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[0.0, 9622.0], [0.1, 9622.0], [0.2, 9622.0], [0.3, 10353.0], [0.4, 10353.0], [0.5, 10656.0], [0.6, 10656.0], [0.7, 11498.0], [0.8, 11498.0], [0.9, 11928.0], [1.0, 11928.0], [1.1, 12782.0], [1.2, 12782.0], [1.3, 13482.0], [1.4, 13482.0], [1.5, 13545.0], [1.6, 13545.0], [1.7, 13582.0], [1.8, 13582.0], [1.9, 13618.0], [2.0, 13618.0], [2.1, 13618.0], [2.2, 13647.0], [2.3, 13647.0], [2.4, 14969.0], [2.5, 14969.0], [2.6, 14991.0], [2.7, 14991.0], [2.8, 14997.0], [2.9, 14997.0], [3.0, 15061.0], [3.1, 15061.0], [3.2, 15151.0], [3.3, 15151.0], [3.4, 15170.0], [3.5, 15170.0], [3.6, 15253.0], [3.7, 15253.0], [3.8, 15307.0], [3.9, 15307.0], [4.0, 15309.0], [4.1, 15309.0], [4.2, 15309.0], [4.3, 15367.0], [4.4, 15367.0], [4.5, 15429.0], [4.6, 15429.0], [4.7, 15584.0], [4.8, 15584.0], [4.9, 15592.0], [5.0, 15592.0], [5.1, 15613.0], [5.2, 15613.0], [5.3, 15682.0], [5.4, 15682.0], [5.5, 15701.0], [5.6, 15701.0], [5.7, 15737.0], [5.8, 15737.0], [5.9, 15833.0], [6.0, 15833.0], [6.1, 15833.0], [6.2, 15845.0], [6.3, 15845.0], [6.4, 15889.0], [6.5, 15889.0], [6.6, 15890.0], [6.7, 15890.0], [6.8, 15916.0], [6.9, 15916.0], [7.0, 15917.0], [7.1, 15917.0], [7.2, 15929.0], [7.3, 15929.0], [7.4, 15946.0], [7.5, 15946.0], [7.6, 15968.0], [7.7, 15968.0], [7.8, 16014.0], [7.9, 16014.0], [8.0, 16016.0], [8.1, 16016.0], [8.2, 16016.0], [8.3, 16026.0], [8.4, 16026.0], [8.5, 16029.0], [8.6, 16029.0], [8.7, 16047.0], [8.8, 16047.0], [8.9, 16048.0], [9.0, 16048.0], [9.1, 16050.0], [9.2, 16050.0], [9.3, 16069.0], [9.4, 16069.0], [9.5, 16173.0], [9.6, 16173.0], [9.7, 16228.0], [9.8, 16228.0], [9.9, 16229.0], [10.0, 16229.0], [10.1, 16229.0], [10.2, 16234.0], [10.3, 16234.0], [10.4, 16242.0], [10.5, 16242.0], [10.6, 16279.0], [10.7, 16279.0], [10.8, 16306.0], [10.9, 16306.0], [11.0, 16322.0], [11.1, 16322.0], [11.2, 16334.0], [11.3, 16334.0], [11.4, 16409.0], [11.5, 16409.0], [11.6, 16414.0], [11.7, 16414.0], [11.8, 16437.0], [11.9, 16437.0], [12.0, 16437.0], [12.1, 16466.0], [12.2, 16466.0], [12.3, 16498.0], [12.4, 16498.0], [12.5, 16527.0], [12.6, 16527.0], [12.7, 16535.0], [12.8, 16535.0], [12.9, 16540.0], [13.0, 16540.0], [13.1, 16573.0], [13.2, 16573.0], [13.3, 16594.0], [13.4, 16594.0], [13.5, 16616.0], [13.6, 16616.0], [13.7, 16623.0], [13.8, 16623.0], [13.9, 16658.0], [14.0, 16658.0], [14.1, 16658.0], [14.2, 16754.0], [14.3, 16754.0], [14.4, 16756.0], [14.5, 16756.0], [14.6, 16763.0], [14.7, 16763.0], [14.8, 16777.0], [14.9, 16777.0], [15.0, 16779.0], [15.1, 16779.0], [15.2, 16807.0], [15.3, 16807.0], [15.4, 16810.0], [15.5, 16810.0], [15.6, 16820.0], [15.7, 16820.0], [15.8, 16830.0], [15.9, 16830.0], [16.0, 16830.0], [16.1, 16845.0], [16.2, 16845.0], [16.3, 16856.0], [16.4, 16856.0], [16.5, 16904.0], [16.6, 16904.0], [16.7, 16951.0], [16.8, 16951.0], [16.9, 16960.0], [17.0, 16960.0], [17.1, 16972.0], [17.2, 16972.0], [17.3, 16986.0], [17.4, 16986.0], [17.5, 17021.0], [17.6, 17021.0], [17.7, 17042.0], [17.8, 17042.0], [17.9, 17054.0], [18.0, 17054.0], [18.1, 17054.0], [18.2, 17060.0], [18.3, 17060.0], [18.4, 17111.0], [18.5, 17111.0], [18.6, 17118.0], [18.7, 17118.0], [18.8, 17141.0], [18.9, 17141.0], [19.0, 17147.0], [19.1, 17147.0], [19.2, 17156.0], [19.3, 17156.0], [19.4, 17161.0], [19.5, 17161.0], [19.6, 17171.0], [19.7, 17171.0], [19.8, 17173.0], [19.9, 17173.0], [20.0, 17192.0], [20.1, 17192.0], [20.2, 17192.0], [20.3, 17234.0], [20.4, 17234.0], [20.5, 17256.0], [20.6, 17256.0], [20.7, 17290.0], [20.8, 17290.0], [20.9, 17358.0], [21.0, 17358.0], [21.1, 17403.0], [21.2, 17403.0], [21.3, 17414.0], [21.4, 17414.0], [21.5, 17466.0], [21.6, 17466.0], [21.7, 17466.0], [21.8, 17466.0], [21.9, 17506.0], [22.0, 17506.0], [22.1, 17506.0], [22.2, 17524.0], [22.3, 17524.0], [22.4, 17525.0], [22.5, 17525.0], [22.6, 17542.0], [22.7, 17542.0], [22.8, 17543.0], [22.9, 17543.0], [23.0, 17560.0], [23.1, 17560.0], [23.2, 17561.0], [23.3, 17561.0], [23.4, 17599.0], [23.5, 17599.0], [23.6, 17675.0], [23.7, 17675.0], [23.8, 17678.0], [23.9, 17678.0], [24.0, 17702.0], [24.1, 17702.0], [24.2, 17702.0], [24.3, 17744.0], [24.4, 17744.0], [24.5, 17758.0], [24.6, 17758.0], [24.7, 17763.0], [24.8, 17763.0], [24.9, 17766.0], [25.0, 17766.0], [25.1, 17766.0], [25.2, 17766.0], [25.3, 17777.0], [25.4, 17777.0], [25.5, 17796.0], [25.6, 17796.0], [25.7, 17827.0], [25.8, 17827.0], [25.9, 17836.0], [26.0, 17836.0], [26.1, 17836.0], [26.2, 17844.0], [26.3, 17844.0], [26.4, 17862.0], [26.5, 17862.0], [26.6, 17869.0], [26.7, 17869.0], [26.8, 17883.0], [26.9, 17883.0], [27.0, 17898.0], [27.1, 17898.0], [27.2, 17968.0], [27.3, 17968.0], [27.4, 17986.0], [27.5, 17986.0], [27.6, 17993.0], [27.7, 17993.0], [27.8, 18001.0], [27.9, 18001.0], [28.0, 18044.0], [28.1, 18044.0], [28.2, 18044.0], [28.3, 18053.0], [28.4, 18053.0], [28.5, 18073.0], [28.6, 18073.0], [28.7, 18076.0], [28.8, 18076.0], [28.9, 18085.0], [29.0, 18085.0], [29.1, 18115.0], [29.2, 18115.0], [29.3, 18118.0], [29.4, 18118.0], [29.5, 18126.0], [29.6, 18126.0], [29.7, 18128.0], [29.8, 18128.0], [29.9, 18131.0], [30.0, 18131.0], [30.1, 18131.0], [30.2, 18131.0], [30.3, 18131.0], [30.4, 18148.0], [30.5, 18148.0], [30.6, 18149.0], [30.7, 18149.0], [30.8, 18150.0], [30.9, 18150.0], [31.0, 18156.0], [31.1, 18156.0], [31.2, 18159.0], [31.3, 18159.0], [31.4, 18166.0], [31.5, 18166.0], [31.6, 18173.0], [31.7, 18173.0], [31.8, 18180.0], [31.9, 18180.0], [32.0, 18181.0], [32.1, 18181.0], [32.2, 18181.0], [32.3, 18182.0], [32.4, 18182.0], [32.5, 18195.0], [32.6, 18195.0], [32.7, 18197.0], [32.8, 18197.0], [32.9, 18198.0], [33.0, 18198.0], [33.1, 18198.0], [33.2, 18198.0], [33.3, 18203.0], [33.4, 18203.0], [33.5, 18211.0], [33.6, 18211.0], [33.7, 18218.0], [33.8, 18218.0], [33.9, 18219.0], [34.0, 18219.0], [34.1, 18219.0], [34.2, 18229.0], [34.3, 18229.0], [34.4, 18252.0], [34.5, 18252.0], [34.6, 18258.0], [34.7, 18258.0], [34.8, 18268.0], [34.9, 18268.0], [35.0, 18302.0], [35.1, 18302.0], [35.2, 18304.0], [35.3, 18304.0], [35.4, 18311.0], [35.5, 18311.0], [35.6, 18314.0], [35.7, 18314.0], [35.8, 18344.0], [35.9, 18344.0], [36.0, 18357.0], [36.1, 18357.0], [36.2, 18357.0], [36.3, 18368.0], [36.4, 18368.0], [36.5, 18370.0], [36.6, 18370.0], [36.7, 18381.0], [36.8, 18381.0], [36.9, 18396.0], [37.0, 18396.0], [37.1, 18410.0], [37.2, 18410.0], [37.3, 18416.0], [37.4, 18416.0], [37.5, 18425.0], [37.6, 18425.0], [37.7, 18443.0], [37.8, 18443.0], [37.9, 18448.0], [38.0, 18448.0], [38.1, 18448.0], [38.2, 18448.0], [38.3, 18448.0], [38.4, 18449.0], [38.5, 18449.0], [38.6, 18452.0], [38.7, 18452.0], [38.8, 18473.0], [38.9, 18473.0], [39.0, 18485.0], [39.1, 18485.0], [39.2, 18486.0], [39.3, 18486.0], [39.4, 18489.0], [39.5, 18489.0], [39.6, 18497.0], [39.7, 18497.0], [39.8, 18503.0], [39.9, 18503.0], [40.0, 18505.0], [40.1, 18505.0], [40.2, 18505.0], [40.3, 18512.0], [40.4, 18512.0], [40.5, 18533.0], [40.6, 18533.0], [40.7, 18543.0], [40.8, 18543.0], [40.9, 18558.0], [41.0, 18558.0], [41.1, 18562.0], [41.2, 18562.0], [41.3, 18595.0], [41.4, 18595.0], [41.5, 18596.0], [41.6, 18596.0], [41.7, 18663.0], [41.8, 18663.0], [41.9, 18673.0], [42.0, 18673.0], [42.1, 18673.0], [42.2, 18685.0], [42.3, 18685.0], [42.4, 18695.0], [42.5, 18695.0], [42.6, 18706.0], [42.7, 18706.0], [42.8, 18708.0], [42.9, 18708.0], [43.0, 18710.0], [43.1, 18710.0], [43.2, 18715.0], [43.3, 18715.0], [43.4, 18718.0], [43.5, 18718.0], [43.6, 18727.0], [43.7, 18727.0], [43.8, 18736.0], [43.9, 18736.0], [44.0, 18746.0], [44.1, 18746.0], [44.2, 18746.0], [44.3, 18755.0], [44.4, 18755.0], [44.5, 18756.0], [44.6, 18756.0], [44.7, 18771.0], [44.8, 18771.0], [44.9, 18777.0], [45.0, 18777.0], [45.1, 18780.0], [45.2, 18780.0], [45.3, 18782.0], [45.4, 18782.0], [45.5, 18808.0], [45.6, 18808.0], [45.7, 18810.0], [45.8, 18810.0], [45.9, 18850.0], [46.0, 18850.0], [46.1, 18850.0], [46.2, 18851.0], [46.3, 18851.0], [46.4, 18851.0], [46.5, 18851.0], [46.6, 18857.0], [46.7, 18857.0], [46.8, 18876.0], [46.9, 18876.0], [47.0, 18881.0], [47.1, 18881.0], [47.2, 18882.0], [47.3, 18882.0], [47.4, 18887.0], [47.5, 18887.0], [47.6, 18897.0], [47.7, 18897.0], [47.8, 18898.0], [47.9, 18898.0], [48.0, 18902.0], [48.1, 18902.0], [48.2, 18902.0], [48.3, 18905.0], [48.4, 18905.0], [48.5, 18923.0], [48.6, 18923.0], [48.7, 18932.0], [48.8, 18932.0], [48.9, 18937.0], [49.0, 18937.0], [49.1, 18949.0], [49.2, 18949.0], [49.3, 18965.0], [49.4, 18965.0], [49.5, 18978.0], [49.6, 18978.0], [49.7, 18978.0], [49.8, 18978.0], [49.9, 18991.0], [50.0, 18991.0], [50.1, 18991.0], [50.2, 19018.0], [50.3, 19018.0], [50.4, 19027.0], [50.5, 19027.0], [50.6, 19042.0], [50.7, 19042.0], [50.8, 19056.0], [50.9, 19056.0], [51.0, 19063.0], [51.1, 19063.0], [51.2, 19069.0], [51.3, 19069.0], [51.4, 19089.0], [51.5, 19089.0], [51.6, 19098.0], [51.7, 19098.0], [51.8, 19109.0], [51.9, 19109.0], [52.0, 19115.0], [52.1, 19115.0], [52.2, 19115.0], [52.3, 19137.0], [52.4, 19137.0], [52.5, 19143.0], [52.6, 19143.0], [52.7, 19151.0], [52.8, 19151.0], [52.9, 19154.0], [53.0, 19154.0], [53.1, 19155.0], [53.2, 19155.0], [53.3, 19161.0], [53.4, 19161.0], [53.5, 19167.0], [53.6, 19167.0], [53.7, 19202.0], [53.8, 19202.0], [53.9, 19232.0], [54.0, 19232.0], [54.1, 19232.0], [54.2, 19250.0], [54.3, 19250.0], [54.4, 19253.0], [54.5, 19253.0], [54.6, 19272.0], [54.7, 19272.0], [54.8, 19289.0], [54.9, 19289.0], [55.0, 19309.0], [55.1, 19309.0], [55.2, 19335.0], [55.3, 19335.0], [55.4, 19337.0], [55.5, 19337.0], [55.6, 19337.0], [55.7, 19337.0], [55.8, 19341.0], [55.9, 19341.0], [56.0, 19345.0], [56.1, 19345.0], [56.2, 19345.0], [56.3, 19351.0], [56.4, 19351.0], [56.5, 19351.0], [56.6, 19351.0], [56.7, 19360.0], [56.8, 19360.0], [56.9, 19370.0], [57.0, 19370.0], [57.1, 19421.0], [57.2, 19421.0], [57.3, 19422.0], [57.4, 19422.0], [57.5, 19427.0], [57.6, 19427.0], [57.7, 19430.0], [57.8, 19430.0], [57.9, 19481.0], [58.0, 19481.0], [58.1, 19481.0], [58.2, 19485.0], [58.3, 19485.0], [58.4, 19504.0], [58.5, 19504.0], [58.6, 19508.0], [58.7, 19508.0], [58.8, 19530.0], [58.9, 19530.0], [59.0, 19546.0], [59.1, 19546.0], [59.2, 19548.0], [59.3, 19548.0], [59.4, 19558.0], [59.5, 19558.0], [59.6, 19566.0], [59.7, 19566.0], [59.8, 19572.0], [59.9, 19572.0], [60.0, 19579.0], [60.1, 19579.0], [60.2, 19579.0], [60.3, 19588.0], [60.4, 19588.0], [60.5, 19617.0], [60.6, 19617.0], [60.7, 19623.0], [60.8, 19623.0], [60.9, 19625.0], [61.0, 19625.0], [61.1, 19632.0], [61.2, 19632.0], [61.3, 19637.0], [61.4, 19637.0], [61.5, 19640.0], [61.6, 19640.0], [61.7, 19661.0], [61.8, 19661.0], [61.9, 19665.0], [62.0, 19665.0], [62.1, 19665.0], [62.2, 19665.0], [62.3, 19665.0], [62.4, 19687.0], [62.5, 19687.0], [62.6, 19700.0], [62.7, 19700.0], [62.8, 19707.0], [62.9, 19707.0], [63.0, 19742.0], [63.1, 19742.0], [63.2, 19780.0], [63.3, 19780.0], [63.4, 19785.0], [63.5, 19785.0], [63.6, 19794.0], [63.7, 19794.0], [63.8, 19805.0], [63.9, 19805.0], [64.0, 19820.0], [64.1, 19820.0], [64.2, 19820.0], [64.3, 19831.0], [64.4, 19831.0], [64.5, 19865.0], [64.6, 19865.0], [64.7, 19893.0], [64.8, 19893.0], [64.9, 19912.0], [65.0, 19912.0], [65.1, 19967.0], [65.2, 19967.0], [65.3, 19987.0], [65.4, 19987.0], [65.5, 20048.0], [65.6, 20048.0], [65.7, 20091.0], [65.8, 20091.0], [65.9, 20159.0], [66.0, 20159.0], [66.1, 20159.0], [66.2, 20167.0], [66.3, 20167.0], [66.4, 20170.0], [66.5, 20170.0], [66.6, 20178.0], [66.7, 20178.0], [66.8, 20222.0], [66.9, 20222.0], [67.0, 20231.0], [67.1, 20231.0], [67.2, 20252.0], [67.3, 20252.0], [67.4, 20258.0], [67.5, 20258.0], [67.6, 20262.0], [67.7, 20262.0], [67.8, 20310.0], [67.9, 20310.0], [68.0, 20316.0], [68.1, 20316.0], [68.2, 20316.0], [68.3, 20334.0], [68.4, 20334.0], [68.5, 20355.0], [68.6, 20355.0], [68.7, 20371.0], [68.8, 20371.0], [68.9, 20382.0], [69.0, 20382.0], [69.1, 20400.0], [69.2, 20400.0], [69.3, 20417.0], [69.4, 20417.0], [69.5, 20426.0], [69.6, 20426.0], [69.7, 20450.0], [69.8, 20450.0], [69.9, 20471.0], [70.0, 20471.0], [70.1, 20471.0], [70.2, 20475.0], [70.3, 20475.0], [70.4, 20501.0], [70.5, 20501.0], [70.6, 20542.0], [70.7, 20542.0], [70.8, 20587.0], [70.9, 20587.0], [71.0, 20594.0], [71.1, 20594.0], [71.2, 20617.0], [71.3, 20617.0], [71.4, 20617.0], [71.5, 20617.0], [71.6, 20618.0], [71.7, 20618.0], [71.8, 20622.0], [71.9, 20622.0], [72.0, 20634.0], [72.1, 20634.0], [72.2, 20634.0], [72.3, 20651.0], [72.4, 20651.0], [72.5, 20657.0], [72.6, 20657.0], [72.7, 20669.0], [72.8, 20669.0], [72.9, 20669.0], [73.0, 20669.0], [73.1, 20685.0], [73.2, 20685.0], [73.3, 20689.0], [73.4, 20689.0], [73.5, 20716.0], [73.6, 20716.0], [73.7, 20720.0], [73.8, 20720.0], [73.9, 20762.0], [74.0, 20762.0], [74.1, 20762.0], [74.2, 20774.0], [74.3, 20774.0], [74.4, 20781.0], [74.5, 20781.0], [74.6, 20790.0], [74.7, 20790.0], [74.8, 20829.0], [74.9, 20829.0], [75.0, 20835.0], [75.1, 20835.0], [75.2, 20841.0], [75.3, 20841.0], [75.4, 20871.0], [75.5, 20871.0], [75.6, 20871.0], [75.7, 20871.0], [75.8, 20893.0], [75.9, 20893.0], [76.0, 20893.0], [76.1, 20963.0], [76.2, 20963.0], [76.3, 20992.0], [76.4, 20992.0], [76.5, 21003.0], [76.6, 21003.0], [76.7, 21054.0], [76.8, 21054.0], [76.9, 21078.0], [77.0, 21078.0], [77.1, 21079.0], [77.2, 21079.0], [77.3, 21114.0], [77.4, 21114.0], [77.5, 21225.0], [77.6, 21225.0], [77.7, 21240.0], [77.8, 21240.0], [77.9, 21253.0], [78.0, 21253.0], [78.1, 21253.0], [78.2, 21297.0], [78.3, 21297.0], [78.4, 21391.0], [78.5, 21391.0], [78.6, 21471.0], [78.7, 21471.0], [78.8, 21538.0], [78.9, 21538.0], [79.0, 21547.0], [79.1, 21547.0], [79.2, 21559.0], [79.3, 21559.0], [79.4, 21620.0], [79.5, 21620.0], [79.6, 21634.0], [79.7, 21634.0], [79.8, 21636.0], [79.9, 21636.0], [80.0, 21636.0], [80.1, 21650.0], [80.2, 21650.0], [80.3, 21717.0], [80.4, 21717.0], [80.5, 21722.0], [80.6, 21722.0], [80.7, 21795.0], [80.8, 21795.0], [80.9, 21858.0], [81.0, 21858.0], [81.1, 21889.0], [81.2, 21889.0], [81.3, 21896.0], [81.4, 21896.0], [81.5, 21969.0], [81.6, 21969.0], [81.7, 21971.0], [81.8, 21971.0], [81.9, 22001.0], [82.0, 22001.0], [82.1, 22001.0], [82.2, 22119.0], [82.3, 22119.0], [82.4, 22150.0], [82.5, 22150.0], [82.6, 22223.0], [82.7, 22223.0], [82.8, 22288.0], [82.9, 22288.0], [83.0, 22334.0], [83.1, 22334.0], [83.2, 22367.0], [83.3, 22367.0], [83.4, 22428.0], [83.5, 22428.0], [83.6, 22445.0], [83.7, 22445.0], [83.8, 22477.0], [83.9, 22477.0], [84.0, 22477.0], [84.1, 22560.0], [84.2, 22560.0], [84.3, 22606.0], [84.4, 22606.0], [84.5, 22607.0], [84.6, 22607.0], [84.7, 22704.0], [84.8, 22704.0], [84.9, 22751.0], [85.0, 22751.0], [85.1, 22918.0], [85.2, 22918.0], [85.3, 22992.0], [85.4, 22992.0], [85.5, 23013.0], [85.6, 23013.0], [85.7, 23196.0], [85.8, 23196.0], [85.9, 23275.0], [86.0, 23275.0], [86.1, 23275.0], [86.2, 23351.0], [86.3, 23351.0], [86.4, 23360.0], [86.5, 23360.0], [86.6, 23426.0], [86.7, 23426.0], [86.8, 23459.0], [86.9, 23459.0], [87.0, 23480.0], [87.1, 23480.0], [87.2, 23512.0], [87.3, 23512.0], [87.4, 23601.0], [87.5, 23601.0], [87.6, 24062.0], [87.7, 24062.0], [87.8, 24204.0], [87.9, 24204.0], [88.0, 24204.0], [88.1, 24361.0], [88.2, 24361.0], [88.3, 24366.0], [88.4, 24366.0], [88.5, 24367.0], [88.6, 24367.0], [88.7, 24417.0], [88.8, 24417.0], [88.9, 24451.0], [89.0, 24451.0], [89.1, 24667.0], [89.2, 24667.0], [89.3, 24690.0], [89.4, 24690.0], [89.5, 24841.0], [89.6, 24841.0], [89.7, 25489.0], [89.8, 25489.0], [89.9, 25543.0], [90.0, 25543.0], [90.1, 25543.0], [90.2, 26267.0], [90.3, 26267.0], [90.4, 27889.0], [90.5, 27889.0], [90.6, 28167.0], [90.7, 28167.0], [90.8, 29259.0], [90.9, 29259.0], [91.0, 30094.0], [91.1, 30094.0], [91.2, 30120.0], [91.3, 30120.0], [91.4, 30652.0], [91.5, 30652.0], [91.6, 30758.0], [91.7, 30758.0], [91.8, 30906.0], [91.9, 30906.0], [92.0, 30906.0], [92.1, 31894.0], [92.2, 31894.0], [92.3, 33801.0], [92.4, 33801.0], [92.5, 34710.0], [92.6, 34710.0], [92.7, 35581.0], [92.8, 35581.0], [92.9, 36887.0], [93.0, 36887.0], [93.1, 38273.0], [93.2, 38273.0], [93.3, 39507.0], [93.4, 39507.0], [93.5, 39634.0], [93.6, 39634.0], [93.7, 39828.0], [93.8, 39828.0], [93.9, 39841.0], [94.0, 39841.0], [94.1, 39841.0], [94.2, 40056.0], [94.3, 40056.0], [94.4, 40481.0], [94.5, 40481.0], [94.6, 40843.0], [94.7, 40843.0], [94.8, 41394.0], [94.9, 41394.0], [95.0, 42170.0], [95.1, 42170.0], [95.2, 42379.0], [95.3, 42379.0], [95.4, 42969.0], [95.5, 42969.0], [95.6, 43185.0], [95.7, 43185.0], [95.8, 43207.0], [95.9, 43207.0], [96.0, 43207.0], [96.1, 43273.0], [96.2, 43273.0], [96.3, 43490.0], [96.4, 43490.0], [96.5, 44493.0], [96.6, 44493.0], [96.7, 44639.0], [96.8, 44639.0], [96.9, 45218.0], [97.0, 45218.0], [97.1, 45509.0], [97.2, 45509.0], [97.3, 45614.0], [97.4, 45614.0], [97.5, 45639.0], [97.6, 45639.0], [97.7, 45778.0], [97.8, 45778.0], [97.9, 45919.0], [98.0, 45919.0], [98.1, 45919.0], [98.2, 45934.0], [98.3, 45934.0], [98.4, 46088.0], [98.5, 46088.0], [98.6, 46579.0], [98.7, 46579.0], [98.8, 46678.0], [98.9, 46678.0], [99.0, 46905.0], [99.1, 46905.0], [99.2, 46915.0], [99.3, 46915.0], [99.4, 46988.0], [99.5, 46988.0], [99.6, 47459.0], [99.7, 47459.0], [99.8, 47785.0], [99.9, 47785.0], [100.0, 47785.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[0.0, 6987.0], [0.1, 6987.0], [0.2, 6987.0], [0.3, 7150.0], [0.4, 7150.0], [0.5, 7206.0], [0.6, 7206.0], [0.7, 7260.0], [0.8, 7260.0], [0.9, 7303.0], [1.0, 7303.0], [1.1, 7303.0], [1.2, 7549.0], [1.3, 7549.0], [1.4, 7780.0], [1.5, 7780.0], [1.6, 7799.0], [1.7, 7799.0], [1.8, 7811.0], [1.9, 7811.0], [2.0, 7811.0], [2.1, 7898.0], [2.2, 7898.0], [2.3, 7919.0], [2.4, 7919.0], [2.5, 7937.0], [2.6, 7937.0], [2.7, 7937.0], [2.8, 7937.0], [2.9, 7937.0], [3.0, 8012.0], [3.1, 8012.0], [3.2, 8197.0], [3.3, 8197.0], [3.4, 8276.0], [3.5, 8276.0], [3.6, 8286.0], [3.7, 8286.0], [3.8, 8599.0], [3.9, 8599.0], [4.0, 8599.0], [4.1, 8694.0], [4.2, 8694.0], [4.3, 8721.0], [4.4, 8721.0], [4.5, 8773.0], [4.6, 8773.0], [4.7, 8910.0], [4.8, 8910.0], [4.9, 8910.0], [5.0, 8936.0], [5.1, 8936.0], [5.2, 9075.0], [5.3, 9075.0], [5.4, 9153.0], [5.5, 9153.0], [5.6, 9184.0], [5.7, 9184.0], [5.8, 9184.0], [5.9, 9198.0], [6.0, 9198.0], [6.1, 9247.0], [6.2, 9247.0], [6.3, 9257.0], [6.4, 9257.0], [6.5, 9295.0], [6.6, 9295.0], [6.7, 9369.0], [6.8, 9369.0], [6.9, 9369.0], [7.0, 9394.0], [7.1, 9394.0], [7.2, 9410.0], [7.3, 9410.0], [7.4, 9427.0], [7.5, 9427.0], [7.6, 9448.0], [7.7, 9448.0], [7.8, 9448.0], [7.9, 9533.0], [8.0, 9533.0], [8.1, 9549.0], [8.2, 9549.0], [8.3, 9674.0], [8.4, 9674.0], [8.5, 9692.0], [8.6, 9692.0], [8.7, 9692.0], [8.8, 9821.0], [8.9, 9821.0], [9.0, 9879.0], [9.1, 9879.0], [9.2, 9882.0], [9.3, 9882.0], [9.4, 9883.0], [9.5, 9883.0], [9.6, 9891.0], [9.7, 9891.0], [9.8, 9891.0], [9.9, 9897.0], [10.0, 9897.0], [10.1, 9907.0], [10.2, 9907.0], [10.3, 9947.0], [10.4, 9947.0], [10.5, 9977.0], [10.6, 9977.0], [10.7, 9977.0], [10.8, 9998.0], [10.9, 9998.0], [11.0, 10021.0], [11.1, 10021.0], [11.2, 10058.0], [11.3, 10058.0], [11.4, 10085.0], [11.5, 10085.0], [11.6, 10085.0], [11.7, 10105.0], [11.8, 10105.0], [11.9, 10111.0], [12.0, 10111.0], [12.1, 10171.0], [12.2, 10171.0], [12.3, 10183.0], [12.4, 10183.0], [12.5, 10183.0], [12.6, 10187.0], [12.7, 10187.0], [12.8, 10190.0], [12.9, 10190.0], [13.0, 10200.0], [13.1, 10200.0], [13.2, 10207.0], [13.3, 10207.0], [13.4, 10222.0], [13.5, 10222.0], [13.6, 10222.0], [13.7, 10237.0], [13.8, 10237.0], [13.9, 10237.0], [14.0, 10237.0], [14.1, 10269.0], [14.2, 10269.0], [14.3, 10271.0], [14.4, 10271.0], [14.5, 10271.0], [14.6, 10280.0], [14.7, 10280.0], [14.8, 10282.0], [14.9, 10282.0], [15.0, 10285.0], [15.1, 10285.0], [15.2, 10287.0], [15.3, 10287.0], [15.4, 10287.0], [15.5, 10302.0], [15.6, 10302.0], [15.7, 10308.0], [15.8, 10308.0], [15.9, 10325.0], [16.0, 10325.0], [16.1, 10326.0], [16.2, 10326.0], [16.3, 10357.0], [16.4, 10357.0], [16.5, 10357.0], [16.6, 10358.0], [16.7, 10358.0], [16.8, 10398.0], [16.9, 10398.0], [17.0, 10405.0], [17.1, 10405.0], [17.2, 10412.0], [17.3, 10412.0], [17.4, 10412.0], [17.5, 10434.0], [17.6, 10434.0], [17.7, 10436.0], [17.8, 10436.0], [17.9, 10458.0], [18.0, 10458.0], [18.1, 10492.0], [18.2, 10492.0], [18.3, 10492.0], [18.4, 10501.0], [18.5, 10501.0], [18.6, 10501.0], [18.7, 10501.0], [18.8, 10513.0], [18.9, 10513.0], [19.0, 10521.0], [19.1, 10521.0], [19.2, 10527.0], [19.3, 10527.0], [19.4, 10527.0], [19.5, 10543.0], [19.6, 10543.0], [19.7, 10549.0], [19.8, 10549.0], [19.9, 10556.0], [20.0, 10556.0], [20.1, 10564.0], [20.2, 10564.0], [20.3, 10564.0], [20.4, 10658.0], [20.5, 10658.0], [20.6, 10678.0], [20.7, 10678.0], [20.8, 10687.0], [20.9, 10687.0], [21.0, 10687.0], [21.1, 10687.0], [21.2, 10687.0], [21.3, 10719.0], [21.4, 10719.0], [21.5, 10730.0], [21.6, 10730.0], [21.7, 10733.0], [21.8, 10733.0], [21.9, 10733.0], [22.0, 10733.0], [22.1, 10736.0], [22.2, 10736.0], [22.3, 10736.0], [22.4, 10743.0], [22.5, 10743.0], [22.6, 10776.0], [22.7, 10776.0], [22.8, 10785.0], [22.9, 10785.0], [23.0, 10840.0], [23.1, 10840.0], [23.2, 10840.0], [23.3, 10858.0], [23.4, 10858.0], [23.5, 10868.0], [23.6, 10868.0], [23.7, 10880.0], [23.8, 10880.0], [23.9, 10881.0], [24.0, 10881.0], [24.1, 10881.0], [24.2, 10900.0], [24.3, 10900.0], [24.4, 10902.0], [24.5, 10902.0], [24.6, 10934.0], [24.7, 10934.0], [24.8, 10951.0], [24.9, 10951.0], [25.0, 10955.0], [25.1, 10955.0], [25.2, 10955.0], [25.3, 10958.0], [25.4, 10958.0], [25.5, 10967.0], [25.6, 10967.0], [25.7, 10969.0], [25.8, 10969.0], [25.9, 10970.0], [26.0, 10970.0], [26.1, 10970.0], [26.2, 10980.0], [26.3, 10980.0], [26.4, 10980.0], [26.5, 10980.0], [26.6, 10990.0], [26.7, 10990.0], [26.8, 10996.0], [26.9, 10996.0], [27.0, 10996.0], [27.1, 11007.0], [27.2, 11007.0], [27.3, 11020.0], [27.4, 11020.0], [27.5, 11021.0], [27.6, 11021.0], [27.7, 11032.0], [27.8, 11032.0], [27.9, 11032.0], [28.0, 11042.0], [28.1, 11042.0], [28.2, 11043.0], [28.3, 11043.0], [28.4, 11046.0], [28.5, 11046.0], [28.6, 11052.0], [28.7, 11052.0], [28.8, 11055.0], [28.9, 11055.0], [29.0, 11055.0], [29.1, 11060.0], [29.2, 11060.0], [29.3, 11067.0], [29.4, 11067.0], [29.5, 11076.0], [29.6, 11076.0], [29.7, 11078.0], [29.8, 11078.0], [29.9, 11078.0], [30.0, 11087.0], [30.1, 11087.0], [30.2, 11088.0], [30.3, 11088.0], [30.4, 11097.0], [30.5, 11097.0], [30.6, 11103.0], [30.7, 11103.0], [30.8, 11103.0], [30.9, 11133.0], [31.0, 11133.0], [31.1, 11143.0], [31.2, 11143.0], [31.3, 11155.0], [31.4, 11155.0], [31.5, 11166.0], [31.6, 11166.0], [31.7, 11175.0], [31.8, 11175.0], [31.9, 11175.0], [32.0, 11217.0], [32.1, 11217.0], [32.2, 11218.0], [32.3, 11218.0], [32.4, 11222.0], [32.5, 11222.0], [32.6, 11224.0], [32.7, 11224.0], [32.8, 11224.0], [32.9, 11249.0], [33.0, 11249.0], [33.1, 11257.0], [33.2, 11257.0], [33.3, 11264.0], [33.4, 11264.0], [33.5, 11271.0], [33.6, 11271.0], [33.7, 11271.0], [33.8, 11290.0], [33.9, 11290.0], [34.0, 11294.0], [34.1, 11294.0], [34.2, 11303.0], [34.3, 11303.0], [34.4, 11312.0], [34.5, 11312.0], [34.6, 11317.0], [34.7, 11317.0], [34.8, 11317.0], [34.9, 11326.0], [35.0, 11326.0], [35.1, 11333.0], [35.2, 11333.0], [35.3, 11349.0], [35.4, 11349.0], [35.5, 11356.0], [35.6, 11356.0], [35.7, 11356.0], [35.8, 11358.0], [35.9, 11358.0], [36.0, 11363.0], [36.1, 11363.0], [36.2, 11368.0], [36.3, 11368.0], [36.4, 11373.0], [36.5, 11373.0], [36.6, 11373.0], [36.7, 11385.0], [36.8, 11385.0], [36.9, 11389.0], [37.0, 11389.0], [37.1, 11434.0], [37.2, 11434.0], [37.3, 11436.0], [37.4, 11436.0], [37.5, 11439.0], [37.6, 11439.0], [37.7, 11439.0], [37.8, 11454.0], [37.9, 11454.0], [38.0, 11470.0], [38.1, 11470.0], [38.2, 11474.0], [38.3, 11474.0], [38.4, 11485.0], [38.5, 11485.0], [38.6, 11485.0], [38.7, 11505.0], [38.8, 11505.0], [38.9, 11515.0], [39.0, 11515.0], [39.1, 11517.0], [39.2, 11517.0], [39.3, 11520.0], [39.4, 11520.0], [39.5, 11520.0], [39.6, 11521.0], [39.7, 11521.0], [39.8, 11534.0], [39.9, 11534.0], [40.0, 11537.0], [40.1, 11537.0], [40.2, 11550.0], [40.3, 11550.0], [40.4, 11550.0], [40.5, 11556.0], [40.6, 11556.0], [40.7, 11558.0], [40.8, 11558.0], [40.9, 11560.0], [41.0, 11560.0], [41.1, 11573.0], [41.2, 11573.0], [41.3, 11576.0], [41.4, 11576.0], [41.5, 11576.0], [41.6, 11576.0], [41.7, 11576.0], [41.8, 11578.0], [41.9, 11578.0], [42.0, 11579.0], [42.1, 11579.0], [42.2, 11581.0], [42.3, 11581.0], [42.4, 11581.0], [42.5, 11585.0], [42.6, 11585.0], [42.7, 11594.0], [42.8, 11594.0], [42.9, 11601.0], [43.0, 11601.0], [43.1, 11619.0], [43.2, 11619.0], [43.3, 11619.0], [43.4, 11630.0], [43.5, 11630.0], [43.6, 11636.0], [43.7, 11636.0], [43.8, 11653.0], [43.9, 11653.0], [44.0, 11666.0], [44.1, 11666.0], [44.2, 11666.0], [44.3, 11666.0], [44.4, 11666.0], [44.5, 11671.0], [44.6, 11671.0], [44.7, 11676.0], [44.8, 11676.0], [44.9, 11685.0], [45.0, 11685.0], [45.1, 11714.0], [45.2, 11714.0], [45.3, 11714.0], [45.4, 11740.0], [45.5, 11740.0], [45.6, 11756.0], [45.7, 11756.0], [45.8, 11775.0], [45.9, 11775.0], [46.0, 11777.0], [46.1, 11777.0], [46.2, 11777.0], [46.3, 11782.0], [46.4, 11782.0], [46.5, 11783.0], [46.6, 11783.0], [46.7, 11785.0], [46.8, 11785.0], [46.9, 11804.0], [47.0, 11804.0], [47.1, 11817.0], [47.2, 11817.0], [47.3, 11817.0], [47.4, 11819.0], [47.5, 11819.0], [47.6, 11825.0], [47.7, 11825.0], [47.8, 11846.0], [47.9, 11846.0], [48.0, 11847.0], [48.1, 11847.0], [48.2, 11847.0], [48.3, 11855.0], [48.4, 11855.0], [48.5, 11867.0], [48.6, 11867.0], [48.7, 11873.0], [48.8, 11873.0], [48.9, 11878.0], [49.0, 11878.0], [49.1, 11878.0], [49.2, 11908.0], [49.3, 11908.0], [49.4, 11913.0], [49.5, 11913.0], [49.6, 11913.0], [49.7, 11913.0], [49.8, 11919.0], [49.9, 11919.0], [50.0, 11920.0], [50.1, 11920.0], [50.2, 11920.0], [50.3, 11932.0], [50.4, 11932.0], [50.5, 11947.0], [50.6, 11947.0], [50.7, 11947.0], [50.8, 11947.0], [50.9, 11953.0], [51.0, 11953.0], [51.1, 11953.0], [51.2, 11979.0], [51.3, 11979.0], [51.4, 11989.0], [51.5, 11989.0], [51.6, 11992.0], [51.7, 11992.0], [51.8, 11995.0], [51.9, 11995.0], [52.0, 11995.0], [52.1, 12009.0], [52.2, 12009.0], [52.3, 12042.0], [52.4, 12042.0], [52.5, 12060.0], [52.6, 12060.0], [52.7, 12067.0], [52.8, 12067.0], [52.9, 12067.0], [53.0, 12074.0], [53.1, 12074.0], [53.2, 12086.0], [53.3, 12086.0], [53.4, 12112.0], [53.5, 12112.0], [53.6, 12120.0], [53.7, 12120.0], [53.8, 12129.0], [53.9, 12129.0], [54.0, 12129.0], [54.1, 12130.0], [54.2, 12130.0], [54.3, 12137.0], [54.4, 12137.0], [54.5, 12143.0], [54.6, 12143.0], [54.7, 12155.0], [54.8, 12155.0], [54.9, 12155.0], [55.0, 12187.0], [55.1, 12187.0], [55.2, 12193.0], [55.3, 12193.0], [55.4, 12197.0], [55.5, 12197.0], [55.6, 12204.0], [55.7, 12204.0], [55.8, 12204.0], [55.9, 12233.0], [56.0, 12233.0], [56.1, 12247.0], [56.2, 12247.0], [56.3, 12248.0], [56.4, 12248.0], [56.5, 12248.0], [56.6, 12248.0], [56.7, 12261.0], [56.8, 12261.0], [56.9, 12261.0], [57.0, 12265.0], [57.1, 12265.0], [57.2, 12289.0], [57.3, 12289.0], [57.4, 12293.0], [57.5, 12293.0], [57.6, 12297.0], [57.7, 12297.0], [57.8, 12297.0], [57.9, 12305.0], [58.0, 12305.0], [58.1, 12314.0], [58.2, 12314.0], [58.3, 12331.0], [58.4, 12331.0], [58.5, 12333.0], [58.6, 12333.0], [58.7, 12333.0], [58.8, 12333.0], [58.9, 12333.0], [59.0, 12342.0], [59.1, 12342.0], [59.2, 12352.0], [59.3, 12352.0], [59.4, 12385.0], [59.5, 12385.0], [59.6, 12396.0], [59.7, 12396.0], [59.8, 12396.0], [59.9, 12433.0], [60.0, 12433.0], [60.1, 12437.0], [60.2, 12437.0], [60.3, 12440.0], [60.4, 12440.0], [60.5, 12440.0], [60.6, 12440.0], [60.7, 12440.0], [60.8, 12442.0], [60.9, 12442.0], [61.0, 12450.0], [61.1, 12450.0], [61.2, 12451.0], [61.3, 12451.0], [61.4, 12453.0], [61.5, 12453.0], [61.6, 12453.0], [61.7, 12460.0], [61.8, 12460.0], [61.9, 12472.0], [62.0, 12472.0], [62.1, 12496.0], [62.2, 12496.0], [62.3, 12498.0], [62.4, 12498.0], [62.5, 12501.0], [62.6, 12501.0], [62.7, 12501.0], [62.8, 12511.0], [62.9, 12511.0], [63.0, 12526.0], [63.1, 12526.0], [63.2, 12540.0], [63.3, 12540.0], [63.4, 12549.0], [63.5, 12549.0], [63.6, 12549.0], [63.7, 12566.0], [63.8, 12566.0], [63.9, 12577.0], [64.0, 12577.0], [64.1, 12584.0], [64.2, 12584.0], [64.3, 12609.0], [64.4, 12609.0], [64.5, 12609.0], [64.6, 12631.0], [64.7, 12631.0], [64.8, 12641.0], [64.9, 12641.0], [65.0, 12651.0], [65.1, 12651.0], [65.2, 12652.0], [65.3, 12652.0], [65.4, 12652.0], [65.5, 12654.0], [65.6, 12654.0], [65.7, 12663.0], [65.8, 12663.0], [65.9, 12675.0], [66.0, 12675.0], [66.1, 12686.0], [66.2, 12686.0], [66.3, 12689.0], [66.4, 12689.0], [66.5, 12689.0], [66.6, 12703.0], [66.7, 12703.0], [66.8, 12707.0], [66.9, 12707.0], [67.0, 12707.0], [67.1, 12707.0], [67.2, 12728.0], [67.3, 12728.0], [67.4, 12728.0], [67.5, 12729.0], [67.6, 12729.0], [67.7, 12735.0], [67.8, 12735.0], [67.9, 12737.0], [68.0, 12737.0], [68.1, 12772.0], [68.2, 12772.0], [68.3, 12772.0], [68.4, 12776.0], [68.5, 12776.0], [68.6, 12800.0], [68.7, 12800.0], [68.8, 12815.0], [68.9, 12815.0], [69.0, 12817.0], [69.1, 12817.0], [69.2, 12819.0], [69.3, 12819.0], [69.4, 12819.0], [69.5, 12837.0], [69.6, 12837.0], [69.7, 12867.0], [69.8, 12867.0], [69.9, 12881.0], [70.0, 12881.0], [70.1, 12892.0], [70.2, 12892.0], [70.3, 12892.0], [70.4, 12898.0], [70.5, 12898.0], [70.6, 12924.0], [70.7, 12924.0], [70.8, 12930.0], [70.9, 12930.0], [71.0, 12975.0], [71.1, 12975.0], [71.2, 12975.0], [71.3, 12976.0], [71.4, 12976.0], [71.5, 12985.0], [71.6, 12985.0], [71.7, 13024.0], [71.8, 13024.0], [71.9, 13032.0], [72.0, 13032.0], [72.1, 13040.0], [72.2, 13040.0], [72.3, 13040.0], [72.4, 13042.0], [72.5, 13042.0], [72.6, 13052.0], [72.7, 13052.0], [72.8, 13068.0], [72.9, 13068.0], [73.0, 13070.0], [73.1, 13070.0], [73.2, 13070.0], [73.3, 13095.0], [73.4, 13095.0], [73.5, 13097.0], [73.6, 13097.0], [73.7, 13101.0], [73.8, 13101.0], [73.9, 13101.0], [74.0, 13101.0], [74.1, 13101.0], [74.2, 13132.0], [74.3, 13132.0], [74.4, 13137.0], [74.5, 13137.0], [74.6, 13149.0], [74.7, 13149.0], [74.8, 13177.0], [74.9, 13177.0], [75.0, 13177.0], [75.1, 13181.0], [75.2, 13181.0], [75.3, 13197.0], [75.4, 13197.0], [75.5, 13200.0], [75.6, 13200.0], [75.7, 13204.0], [75.8, 13204.0], [75.9, 13211.0], [76.0, 13211.0], [76.1, 13211.0], [76.2, 13239.0], [76.3, 13239.0], [76.4, 13264.0], [76.5, 13264.0], [76.6, 13306.0], [76.7, 13306.0], [76.8, 13324.0], [76.9, 13324.0], [77.0, 13324.0], [77.1, 13334.0], [77.2, 13334.0], [77.3, 13336.0], [77.4, 13336.0], [77.5, 13337.0], [77.6, 13337.0], [77.7, 13341.0], [77.8, 13341.0], [77.9, 13341.0], [78.0, 13349.0], [78.1, 13349.0], [78.2, 13352.0], [78.3, 13352.0], [78.4, 13361.0], [78.5, 13361.0], [78.6, 13375.0], [78.7, 13375.0], [78.8, 13378.0], [78.9, 13378.0], [79.0, 13378.0], [79.1, 13381.0], [79.2, 13381.0], [79.3, 13405.0], [79.4, 13405.0], [79.5, 13409.0], [79.6, 13409.0], [79.7, 13438.0], [79.8, 13438.0], [79.9, 13438.0], [80.0, 13440.0], [80.1, 13440.0], [80.2, 13440.0], [80.3, 13440.0], [80.4, 13448.0], [80.5, 13448.0], [80.6, 13449.0], [80.7, 13449.0], [80.8, 13449.0], [80.9, 13458.0], [81.0, 13458.0], [81.1, 13465.0], [81.2, 13465.0], [81.3, 13475.0], [81.4, 13475.0], [81.5, 13495.0], [81.6, 13495.0], [81.7, 13518.0], [81.8, 13518.0], [81.9, 13518.0], [82.0, 13548.0], [82.1, 13548.0], [82.2, 13562.0], [82.3, 13562.0], [82.4, 13565.0], [82.5, 13565.0], [82.6, 13575.0], [82.7, 13575.0], [82.8, 13575.0], [82.9, 13580.0], [83.0, 13580.0], [83.1, 13596.0], [83.2, 13596.0], [83.3, 13601.0], [83.4, 13601.0], [83.5, 13606.0], [83.6, 13606.0], [83.7, 13606.0], [83.8, 13607.0], [83.9, 13607.0], [84.0, 13624.0], [84.1, 13624.0], [84.2, 13626.0], [84.3, 13626.0], [84.4, 13641.0], [84.5, 13641.0], [84.6, 13652.0], [84.7, 13652.0], [84.8, 13652.0], [84.9, 13700.0], [85.0, 13700.0], [85.1, 13709.0], [85.2, 13709.0], [85.3, 13749.0], [85.4, 13749.0], [85.5, 13769.0], [85.6, 13769.0], [85.7, 13769.0], [85.8, 13779.0], [85.9, 13779.0], [86.0, 13791.0], [86.1, 13791.0], [86.2, 13805.0], [86.3, 13805.0], [86.4, 13817.0], [86.5, 13817.0], [86.6, 13817.0], [86.7, 13820.0], [86.8, 13820.0], [86.9, 13823.0], [87.0, 13823.0], [87.1, 13834.0], [87.2, 13834.0], [87.3, 13875.0], [87.4, 13875.0], [87.5, 13875.0], [87.6, 13880.0], [87.7, 13880.0], [87.8, 13886.0], [87.9, 13886.0], [88.0, 13912.0], [88.1, 13912.0], [88.2, 13915.0], [88.3, 13915.0], [88.4, 13919.0], [88.5, 13919.0], [88.6, 13919.0], [88.7, 13930.0], [88.8, 13930.0], [88.9, 13934.0], [89.0, 13934.0], [89.1, 13960.0], [89.2, 13960.0], [89.3, 13963.0], [89.4, 13963.0], [89.5, 13963.0], [89.6, 13969.0], [89.7, 13969.0], [89.8, 13982.0], [89.9, 13982.0], [90.0, 14027.0], [90.1, 14027.0], [90.2, 14028.0], [90.3, 14028.0], [90.4, 14028.0], [90.5, 14096.0], [90.6, 14096.0], [90.7, 14114.0], [90.8, 14114.0], [90.9, 14139.0], [91.0, 14139.0], [91.1, 14142.0], [91.2, 14142.0], [91.3, 14169.0], [91.4, 14169.0], [91.5, 14169.0], [91.6, 14186.0], [91.7, 14186.0], [91.8, 14259.0], [91.9, 14259.0], [92.0, 14301.0], [92.1, 14301.0], [92.2, 14377.0], [92.3, 14377.0], [92.4, 14377.0], [92.5, 14394.0], [92.6, 14394.0], [92.7, 14438.0], [92.8, 14438.0], [92.9, 14489.0], [93.0, 14489.0], [93.1, 14500.0], [93.2, 14500.0], [93.3, 14500.0], [93.4, 14573.0], [93.5, 14573.0], [93.6, 14639.0], [93.7, 14639.0], [93.8, 14723.0], [93.9, 14723.0], [94.0, 14878.0], [94.1, 14878.0], [94.2, 15086.0], [94.3, 15086.0], [94.4, 15086.0], [94.5, 15198.0], [94.6, 15198.0], [94.7, 15215.0], [94.8, 15215.0], [94.9, 15244.0], [95.0, 15244.0], [95.1, 15278.0], [95.2, 15278.0], [95.3, 15278.0], [95.4, 15343.0], [95.5, 15343.0], [95.6, 15579.0], [95.7, 15579.0], [95.8, 15602.0], [95.9, 15602.0], [96.0, 15646.0], [96.1, 15646.0], [96.2, 15646.0], [96.3, 15654.0], [96.4, 15654.0], [96.5, 15706.0], [96.6, 15706.0], [96.7, 15777.0], [96.8, 15777.0], [96.9, 15800.0], [97.0, 15800.0], [97.1, 15810.0], [97.2, 15810.0], [97.3, 15810.0], [97.4, 15937.0], [97.5, 15937.0], [97.6, 16006.0], [97.7, 16006.0], [97.8, 16179.0], [97.9, 16179.0], [98.0, 16393.0], [98.1, 16393.0], [98.2, 16393.0], [98.3, 16594.0], [98.4, 16594.0], [98.5, 16689.0], [98.6, 16689.0], [98.7, 17212.0], [98.8, 17212.0], [98.9, 17625.0], [99.0, 17625.0], [99.1, 17625.0], [99.2, 21699.0], [99.3, 21699.0], [99.4, 29783.0], [99.5, 29783.0], [99.6, 30285.0], [99.7, 30285.0], [99.8, 32261.0], [99.9, 32261.0], [100.0, 32261.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 6900.0, "maxY": 20.0, "series": [{"data": [[34500.0, 1.0], [33500.0, 2.0], [33900.0, 3.0], [34300.0, 1.0], [33300.0, 6.0], [33100.0, 9.0], [32900.0, 2.0], [33700.0, 1.0], [35100.0, 1.0], [36500.0, 1.0], [34900.0, 3.0], [35500.0, 3.0], [36300.0, 3.0], [36100.0, 2.0], [35700.0, 2.0], [35900.0, 1.0], [42500.0, 1.0], [43900.0, 1.0], [45100.0, 2.0], [45700.0, 2.0], [45900.0, 1.0], [46900.0, 1.0], [48700.0, 1.0], [49700.0, 2.0], [49900.0, 1.0], [50300.0, 1.0], [50100.0, 1.0], [50500.0, 1.0], [50700.0, 2.0], [52300.0, 1.0], [53300.0, 1.0], [53500.0, 2.0], [54100.0, 1.0], [54300.0, 1.0], [55100.0, 1.0], [55300.0, 1.0], [56300.0, 1.0], [57700.0, 1.0], [15000.0, 1.0], [15700.0, 1.0], [15600.0, 1.0], [15500.0, 1.0], [16300.0, 1.0], [17400.0, 1.0], [17000.0, 1.0], [17100.0, 1.0], [16800.0, 1.0], [17800.0, 1.0], [17900.0, 1.0], [18400.0, 1.0], [19100.0, 1.0], [19000.0, 1.0], [20100.0, 1.0], [20200.0, 1.0], [19600.0, 2.0], [21300.0, 1.0], [20600.0, 1.0], [20800.0, 1.0], [21400.0, 1.0], [20900.0, 1.0], [21200.0, 1.0], [22000.0, 1.0], [21600.0, 1.0], [21800.0, 1.0], [21700.0, 1.0], [22600.0, 1.0], [23000.0, 1.0], [24100.0, 1.0], [26400.0, 1.0], [27100.0, 3.0], [26800.0, 1.0], [27400.0, 7.0], [27000.0, 2.0], [27500.0, 2.0], [27600.0, 1.0], [27900.0, 2.0], [28500.0, 1.0], [28600.0, 4.0], [28300.0, 2.0], [28400.0, 2.0], [27700.0, 3.0], [28000.0, 1.0], [28200.0, 2.0], [28100.0, 2.0], [27800.0, 1.0], [28700.0, 6.0], [29300.0, 9.0], [29100.0, 5.0], [29200.0, 6.0], [29000.0, 6.0], [29500.0, 8.0], [29400.0, 13.0], [29600.0, 11.0], [28900.0, 1.0], [29800.0, 11.0], [30600.0, 2.0], [30700.0, 5.0], [29900.0, 13.0], [29700.0, 9.0], [30100.0, 9.0], [30000.0, 13.0], [30200.0, 5.0], [30500.0, 3.0], [30300.0, 7.0], [30400.0, 7.0], [31500.0, 7.0], [31700.0, 6.0], [31100.0, 6.0], [31300.0, 8.0], [31200.0, 7.0], [30800.0, 7.0], [30900.0, 4.0], [31600.0, 7.0], [31400.0, 8.0], [31000.0, 10.0], [32700.0, 6.0], [31800.0, 3.0], [32400.0, 3.0], [32300.0, 10.0], [31900.0, 5.0], [32600.0, 5.0], [32200.0, 6.0], [32100.0, 10.0], [32500.0, 9.0], [32000.0, 7.0], [34400.0, 1.0], [33600.0, 4.0], [34200.0, 2.0], [34800.0, 1.0], [33200.0, 3.0], [32800.0, 4.0], [33000.0, 5.0], [33400.0, 2.0], [34000.0, 1.0], [35000.0, 2.0], [35600.0, 3.0], [35800.0, 2.0], [36800.0, 1.0], [36000.0, 2.0], [45800.0, 1.0], [46400.0, 1.0], [46600.0, 1.0], [47200.0, 2.0], [47600.0, 1.0], [47400.0, 1.0], [48400.0, 1.0], [48600.0, 1.0], [49400.0, 1.0], [49800.0, 3.0], [49600.0, 1.0], [50400.0, 1.0], [51200.0, 1.0], [51400.0, 1.0], [51800.0, 1.0], [53600.0, 1.0], [54600.0, 1.0], [55800.0, 1.0], [56000.0, 1.0], [56600.0, 1.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[34700.0, 1.0], [35500.0, 1.0], [39500.0, 1.0], [41300.0, 1.0], [42300.0, 1.0], [42100.0, 1.0], [42900.0, 1.0], [43100.0, 1.0], [45500.0, 1.0], [45700.0, 1.0], [45900.0, 2.0], [46500.0, 1.0], [46900.0, 3.0], [47700.0, 1.0], [9600.0, 1.0], [10300.0, 1.0], [10600.0, 1.0], [11400.0, 1.0], [11900.0, 1.0], [12700.0, 1.0], [13600.0, 2.0], [13500.0, 2.0], [13400.0, 1.0], [15100.0, 2.0], [14900.0, 3.0], [15300.0, 3.0], [15200.0, 1.0], [15000.0, 1.0], [15500.0, 2.0], [15800.0, 4.0], [15700.0, 2.0], [15400.0, 1.0], [15600.0, 2.0], [15900.0, 5.0], [16000.0, 8.0], [16200.0, 5.0], [16100.0, 1.0], [16300.0, 3.0], [16600.0, 3.0], [16500.0, 5.0], [16400.0, 5.0], [16800.0, 6.0], [17000.0, 4.0], [17100.0, 9.0], [16700.0, 5.0], [17400.0, 4.0], [16900.0, 5.0], [17200.0, 3.0], [17300.0, 1.0], [17600.0, 2.0], [17500.0, 8.0], [18100.0, 20.0], [17800.0, 7.0], [18300.0, 10.0], [18400.0, 13.0], [17900.0, 3.0], [18000.0, 6.0], [18200.0, 8.0], [17700.0, 8.0], [19200.0, 6.0], [18900.0, 10.0], [18800.0, 12.0], [19400.0, 6.0], [18600.0, 4.0], [18500.0, 9.0], [19000.0, 8.0], [19100.0, 9.0], [18700.0, 14.0], [19300.0, 10.0], [20300.0, 6.0], [19600.0, 10.0], [19500.0, 10.0], [20200.0, 5.0], [19900.0, 3.0], [19700.0, 6.0], [20100.0, 4.0], [20400.0, 6.0], [20000.0, 2.0], [19800.0, 5.0], [21300.0, 1.0], [20500.0, 4.0], [21000.0, 4.0], [20600.0, 11.0], [20700.0, 6.0], [20800.0, 6.0], [21200.0, 4.0], [21100.0, 1.0], [21500.0, 3.0], [21400.0, 1.0], [20900.0, 2.0], [21700.0, 3.0], [22400.0, 3.0], [21800.0, 3.0], [22100.0, 2.0], [22500.0, 1.0], [22300.0, 2.0], [22200.0, 2.0], [21900.0, 2.0], [21600.0, 4.0], [22000.0, 1.0], [23400.0, 3.0], [22900.0, 2.0], [23100.0, 1.0], [23300.0, 2.0], [23200.0, 1.0], [23500.0, 1.0], [23000.0, 1.0], [22700.0, 2.0], [22600.0, 2.0], [24000.0, 1.0], [24200.0, 1.0], [24300.0, 3.0], [24400.0, 2.0], [23600.0, 1.0], [24600.0, 2.0], [24800.0, 1.0], [25400.0, 1.0], [25500.0, 1.0], [26200.0, 1.0], [27800.0, 1.0], [28100.0, 1.0], [29200.0, 1.0], [30100.0, 1.0], [30600.0, 1.0], [30000.0, 1.0], [30700.0, 1.0], [30900.0, 1.0], [31800.0, 1.0], [33800.0, 1.0], [36800.0, 1.0], [38200.0, 1.0], [39800.0, 2.0], [40400.0, 1.0], [40000.0, 1.0], [39600.0, 1.0], [40800.0, 1.0], [43200.0, 2.0], [43400.0, 1.0], [44400.0, 1.0], [44600.0, 1.0], [45200.0, 1.0], [45600.0, 2.0], [46000.0, 1.0], [46600.0, 1.0], [47400.0, 1.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[6900.0, 1.0], [7100.0, 1.0], [7200.0, 2.0], [7300.0, 1.0], [7500.0, 1.0], [7900.0, 3.0], [7700.0, 2.0], [7800.0, 2.0], [8000.0, 1.0], [8100.0, 1.0], [8200.0, 2.0], [8600.0, 1.0], [8500.0, 1.0], [8700.0, 2.0], [9200.0, 3.0], [9000.0, 1.0], [8900.0, 2.0], [9100.0, 3.0], [9600.0, 2.0], [9300.0, 2.0], [9400.0, 3.0], [9500.0, 2.0], [9800.0, 6.0], [9900.0, 4.0], [10200.0, 11.0], [10000.0, 3.0], [10100.0, 6.0], [10500.0, 9.0], [10300.0, 7.0], [10600.0, 4.0], [10400.0, 6.0], [10700.0, 8.0], [11200.0, 10.0], [11000.0, 16.0], [10800.0, 5.0], [10900.0, 13.0], [11100.0, 6.0], [11700.0, 8.0], [11500.0, 19.0], [11400.0, 7.0], [11600.0, 10.0], [11300.0, 13.0], [12200.0, 10.0], [11800.0, 10.0], [12100.0, 10.0], [11900.0, 13.0], [12000.0, 6.0], [12700.0, 9.0], [12300.0, 9.0], [12600.0, 10.0], [12400.0, 12.0], [12500.0, 8.0], [12800.0, 9.0], [13200.0, 5.0], [13300.0, 12.0], [12900.0, 5.0], [13000.0, 9.0], [13100.0, 8.0], [13400.0, 11.0], [13800.0, 8.0], [13700.0, 6.0], [13600.0, 7.0], [13500.0, 7.0], [14000.0, 3.0], [14100.0, 5.0], [13900.0, 9.0], [14300.0, 3.0], [14200.0, 1.0], [14500.0, 2.0], [14700.0, 1.0], [14800.0, 1.0], [14600.0, 1.0], [14400.0, 2.0], [15200.0, 3.0], [15100.0, 1.0], [15300.0, 1.0], [15000.0, 1.0], [15600.0, 3.0], [15800.0, 2.0], [15700.0, 2.0], [15500.0, 1.0], [16100.0, 1.0], [16300.0, 1.0], [16000.0, 1.0], [15900.0, 1.0], [17200.0, 1.0], [16600.0, 1.0], [16500.0, 1.0], [17600.0, 1.0], [21600.0, 1.0], [29700.0, 1.0], [30200.0, 1.0], [32200.0, 1.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 57700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 973.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 973.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 973.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 33.788079470198646, "minX": 1.6359351E12, "maxY": 50.0, "series": [{"data": [[1.63593522E12, 50.0], [1.6359351E12, 50.0], [1.6359354E12, 33.788079470198646], [1.63593528E12, 50.0], [1.63593534E12, 50.0], [1.63593516E12, 50.0]], "isOverall": false, "label": "Thread Group 50", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6359354E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11636.0, "minX": 1.0, "maxY": 33324.14788732392, "series": [{"data": [[2.0, 15061.0], [3.0, 15612.0], [4.0, 15736.0], [5.0, 16830.0], [7.0, 16746.0], [8.0, 17041.0], [9.0, 18472.0], [10.0, 17402.0], [11.0, 17985.0], [12.0, 19069.0], [13.0, 19687.0], [14.0, 19665.0], [15.0, 17844.0], [16.0, 19151.0], [17.0, 21723.0], [18.0, 20259.0], [19.0, 30908.0], [20.0, 31507.0], [21.0, 21890.0], [22.0, 21298.0], [23.0, 21636.0], [24.0, 30364.0], [25.0, 31039.0], [26.0, 30703.0], [27.0, 31138.0], [28.0, 20992.0], [29.0, 21471.0], [30.0, 30672.0], [31.0, 22002.0], [33.0, 29975.0], [32.0, 29957.0], [35.0, 20829.0], [34.0, 29934.0], [37.0, 29644.0], [36.0, 29405.0], [39.0, 29495.0], [38.0, 29812.0], [41.0, 29615.0], [40.0, 29781.0], [43.0, 29389.0], [42.0, 29281.0], [45.0, 29667.0], [44.0, 20618.0], [47.0, 28682.0], [46.0, 29470.0], [49.0, 29099.0], [48.0, 30054.0], [50.0, 33324.14788732392], [1.0, 15591.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[47.42315789473683, 32372.70315789473]], "isOverall": false, "label": "SELECT Test-Aggregated", "isController": true}, {"data": [[2.0, 15061.0], [35.0, 20829.0], [44.0, 20617.0], [3.0, 15613.0], [50.0, 21079.819599109105], [4.0, 15737.0], [5.0, 16830.0], [7.0, 16746.5], [8.0, 17042.0], [9.0, 18473.0], [10.0, 17403.0], [11.0, 17986.0], [12.0, 19069.0], [13.0, 19687.0], [14.0, 19665.0], [15.0, 17844.0], [16.0, 19151.0], [1.0, 15592.0], [17.0, 21722.0], [18.0, 20258.0], [21.0, 21889.0], [22.0, 21297.0], [23.0, 21636.0], [28.0, 20992.0], [29.0, 21471.0], [31.0, 22001.0]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[48.11578947368421, 20960.414736842085]], "isOverall": false, "label": "(POST) Admin Login-Aggregated", "isController": false}, {"data": [[33.0, 11756.0], [32.0, 11775.0], [34.0, 12137.0], [37.0, 12450.0], [36.0, 12248.0], [39.0, 12204.0], [38.0, 12067.0], [41.0, 13040.0], [40.0, 11653.0], [43.0, 12729.0], [42.0, 12501.0], [45.0, 13652.0], [47.0, 12651.0], [46.0, 13149.0], [49.0, 12817.0], [48.0, 13101.0], [50.0, 12082.37176470589], [19.0, 11636.0], [20.0, 12155.0], [24.0, 11947.0], [25.0, 12352.0], [26.0, 12577.0], [27.0, 12652.0], [30.0, 12540.0]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}, {"data": [[49.26562500000001, 12099.993303571435]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 505034.0333333333, "minX": 1.6359351E12, "maxY": 5.77825344E7, "series": [{"data": [[1.63593522E12, 3574413.183333333], [1.6359351E12, 5.77825344E7], [1.6359354E12, 3031359.1166666667], [1.63593528E12, 3749901.65], [1.63593534E12, 3885968.783333333], [1.63593516E12, 3729610.7666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63593522E12, 1383849.8], [1.6359351E12, 505034.0333333333], [1.6359354E12, 1173706.3333333333], [1.63593528E12, 1450952.4833333334], [1.63593534E12, 1504266.6166666667], [1.63593516E12, 1443802.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6359354E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 11357.216494845363, "minX": 1.6359351E12, "maxY": 46890.42857142857, "series": [{"data": [[1.63593522E12, 30625.84782608696], [1.6359351E12, 46890.42857142857], [1.6359354E12, 25612.5], [1.63593528E12, 31392.479591836734], [1.63593534E12, 30646.67676767676], [1.63593516E12, 38377.556701030924]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.63593522E12, 19267.423913043473], [1.6359351E12, 38377.58000000001], [1.6359354E12, 18659.23809523809], [1.63593528E12, 19128.526315789477], [1.63593534E12, 18804.33663366337], [1.63593516E12, 18574.515789473695]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.63593522E12, 12238.228260869566], [1.6359351E12, 16737.523809523813], [1.6359354E12, 12394.90243902439], [1.63593528E12, 12186.061224489798], [1.63593534E12, 11508.252525252532], [1.63593516E12, 11357.216494845363]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6359354E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6359351E12, "maxY": 8960.536585365851, "series": [{"data": [[1.63593522E12, 0.0], [1.6359351E12, 0.0], [1.6359354E12, 0.0], [1.63593528E12, 0.0], [1.63593534E12, 0.0], [1.63593516E12, 0.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.63593522E12, 7613.423913043476], [1.6359351E12, 6046.26], [1.6359354E12, 7738.404761904761], [1.63593528E12, 7735.631578947368], [1.63593534E12, 7578.1584158415835], [1.63593516E12, 6813.978947368423]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.63593522E12, 8606.565217391306], [1.6359351E12, 3563.190476190476], [1.6359354E12, 8960.536585365851], [1.63593528E12, 8797.775510204083], [1.63593534E12, 8008.454545454543], [1.63593516E12, 7424.206185567011]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6359354E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6359351E12, "maxY": 61.047619047619044, "series": [{"data": [[1.63593522E12, 0.0], [1.6359351E12, 0.0], [1.6359354E12, 0.0], [1.63593528E12, 0.0], [1.63593534E12, 0.0], [1.63593516E12, 0.0]], "isOverall": false, "label": "SELECT Test", "isController": true}, {"data": [[1.63593522E12, 37.84782608695653], [1.6359351E12, 40.52], [1.6359354E12, 35.61904761904762], [1.63593528E12, 35.2], [1.63593534E12, 37.46534653465347], [1.63593516E12, 36.90526315789472]], "isOverall": false, "label": "(POST) Admin Login", "isController": false}, {"data": [[1.63593522E12, 36.36956521739132], [1.6359351E12, 61.047619047619044], [1.6359354E12, 36.926829268292686], [1.63593528E12, 35.969387755102034], [1.63593534E12, 35.31313131313129], [1.63593516E12, 38.82474226804124]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6359354E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6987.0, "minX": 1.6359351E12, "maxY": 47785.0, "series": [{"data": [[1.63593522E12, 22607.0], [1.6359351E12, 47785.0], [1.6359354E12, 31507.0], [1.63593528E12, 23351.0], [1.63593534E12, 21969.0], [1.63593516E12, 26267.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63593522E12, 9879.0], [1.6359351E12, 8276.0], [1.6359354E12, 10325.0], [1.63593528E12, 9821.0], [1.63593534E12, 9198.0], [1.63593516E12, 6987.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63593522E12, 23399.600000000002], [1.6359351E12, 46480.799999999996], [1.6359354E12, 22001.4], [1.63593528E12, 22329.4], [1.63593534E12, 21420.400000000005], [1.63593516E12, 25510.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63593522E12, 39526.26], [1.6359351E12, 47785.0], [1.6359354E12, 34291.859999999964], [1.63593528E12, 37427.53999999998], [1.63593534E12, 35250.020000000004], [1.63593516E12, 40245.91999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63593522E12, 28494.59999999995], [1.6359351E12, 46944.2], [1.6359354E12, 28527.499999999964], [1.63593528E12, 24449.3], [1.63593534E12, 23483.2], [1.63593516E12, 31103.599999999988]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6359354E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15890.0, "minX": 1000.0, "maxY": 20992.0, "series": [{"data": [[1000.0, 15890.0], [2000.0, 20992.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 2000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7494.0, "minX": 1000.0, "maxY": 7661.0, "series": [{"data": [[1000.0, 7661.0], [2000.0, 7494.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 2000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.85, "minX": 1.6359351E12, "maxY": 3.8666666666666667, "series": [{"data": [[1.63593522E12, 3.066666666666667], [1.6359351E12, 1.9833333333333334], [1.6359354E12, 0.85], [1.63593528E12, 3.216666666666667], [1.63593534E12, 3.8666666666666667], [1.63593516E12, 3.2333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6359354E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1833333333333333, "minX": 1.6359351E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.63593522E12, 3.066666666666667], [1.6359351E12, 1.1833333333333333], [1.6359354E12, 2.216666666666667], [1.63593528E12, 3.216666666666667], [1.63593534E12, 3.3333333333333335], [1.63593516E12, 3.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6359354E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.6359351E12, "maxY": 1.6833333333333333, "series": [{"data": [[1.63593522E12, 1.5333333333333334], [1.6359351E12, 0.35], [1.6359354E12, 0.6833333333333333], [1.63593528E12, 1.6333333333333333], [1.63593534E12, 1.65], [1.63593516E12, 1.6166666666666667]], "isOverall": false, "label": "(GET) SELECT Admin Dashboard-success", "isController": false}, {"data": [[1.63593522E12, 1.5333333333333334], [1.6359351E12, 0.35], [1.6359354E12, 1.1333333333333333], [1.63593528E12, 1.6333333333333333], [1.63593534E12, 1.65], [1.63593516E12, 1.6166666666666667]], "isOverall": false, "label": "SELECT Test-success", "isController": true}, {"data": [[1.63593522E12, 1.5333333333333334], [1.6359351E12, 0.8333333333333334], [1.6359354E12, 0.7], [1.63593528E12, 1.5833333333333333], [1.63593534E12, 1.6833333333333333], [1.63593516E12, 1.5833333333333333]], "isOverall": false, "label": "(POST) Admin Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6359354E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5333333333333334, "minX": 1.6359351E12, "maxY": 4.983333333333333, "series": [{"data": [[1.63593522E12, 4.6], [1.6359351E12, 1.5333333333333334], [1.6359354E12, 2.5166666666666666], [1.63593528E12, 4.85], [1.63593534E12, 4.983333333333333], [1.63593516E12, 4.816666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6359354E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

