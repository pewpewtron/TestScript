{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ServerName": {
            "type": "string",
            "defaultValue": "17ccDocker",
            "metadata": {
                "description": "description"
            }
        },
        "AdminUsername": {
            "type": "string",
            "defaultValue": "programer",
            "metadata": {
                "description": "description"
            }
        },
        "AdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            }
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "[concat(parameters('ServerName'), 'PublicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[concat(parameters('ServerName'), 'PublicIP')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[concat(parameters('ServerName'), 'networkInterfaces')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('ServerName'), 'PublicIP'))]"
            ],
            "tags": {
                "displayName": "[concat(parameters('ServerName'), 'networkInterfaces')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1_Host",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'ubuntuVM1-PublicIP')]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(resourceGroup().name, 'vNET'), concat(resourceGroup().name, 'subnet-1'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('ServerName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('ServerName'), 'networkInterfaces'))]"
            ],
            "tags": {
                "displayName": "[parameters('ServerName')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "osProfile": {
                    "computerName": "[parameters('ServerName')]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('AdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('ServerName'), 'OsDisk_1')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "writeAcceleratorEnabled": false,
                         "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('ServerName'), 'OsDisk_1'))]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('ServerName'), 'networkInterfaces'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(resourceGroup().name))).primaryEndpoints.blob]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}